!function(root, factory) {
    if ("object" == typeof exports && "object" == typeof module) module.exports = factory(); else if ("function" == typeof define && define.amd) define([], factory); else {
        var a = factory();
        for (var i in a) ("object" == typeof exports ? exports : root)[i] = a[i];
    }
}(window, function() {
    return function(modules) {
        var installedModules = {};
        function __webpack_require__(moduleId) {
            if (installedModules[moduleId]) return installedModules[moduleId].exports;
            var module = installedModules[moduleId] = {
                i: moduleId,
                l: !1,
                exports: {}
            };
            return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), 
            module.l = !0, module.exports;
        }
        return __webpack_require__.m = modules, __webpack_require__.c = installedModules, 
        __webpack_require__.d = function(exports, name, getter) {
            __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {
                enumerable: !0,
                get: getter
            });
        }, __webpack_require__.r = function(exports) {
            "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(exports, Symbol.toStringTag, {
                value: "Module"
            }), Object.defineProperty(exports, "__esModule", {
                value: !0
            });
        }, __webpack_require__.t = function(value, mode) {
            if (1 & mode && (value = __webpack_require__(value)), 8 & mode) return value;
            if (4 & mode && "object" == typeof value && value && value.__esModule) return value;
            var ns = Object.create(null);
            if (__webpack_require__.r(ns), Object.defineProperty(ns, "default", {
                enumerable: !0,
                value: value
            }), 2 & mode && "string" != typeof value) for (var key in value) __webpack_require__.d(ns, key, function(key) {
                return value[key];
            }.bind(null, key));
            return ns;
        }, __webpack_require__.n = function(module) {
            var getter = module && module.__esModule ? function() {
                return module.default;
            } : function() {
                return module;
            };
            return __webpack_require__.d(getter, "a", getter), getter;
        }, __webpack_require__.o = function(object, property) {
            return Object.prototype.hasOwnProperty.call(object, property);
        }, __webpack_require__.p = "./", __webpack_require__(__webpack_require__.s = 0);
    }({
        "./example/index.scss": function(module, exports, __webpack_require__) {
            var content = __webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./example/index.scss");
            "string" == typeof content && (content = [ [ module.i, content, "" ] ]);
            var options = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
            content.locals && (module.exports = content.locals);
        },
        "./example/index.tsx": function(module, exports, __webpack_require__) {
            "use strict";
            var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var react_1 = __importDefault(__webpack_require__("./node_modules/react/index.js")), react_dom_1 = __importDefault(__webpack_require__("./node_modules/react-dom/index.js")), app_1 = __importDefault(__webpack_require__("./example/src/app.tsx"));
            __webpack_require__("./example/index.scss"), react_dom_1.default.render(react_1.default.createElement(app_1.default, null), document.getElementById("root"));
        },
        "./example/src/app.module.scss": function(module, exports, __webpack_require__) {
            var content = __webpack_require__("./node_modules/css-modules-typescript-loader/index.js!./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js!./example/src/app.module.scss");
            "string" == typeof content && (content = [ [ module.i, content, "" ] ]);
            var options = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
            content.locals && (module.exports = content.locals);
        },
        "./example/src/app.tsx": function(module, exports, __webpack_require__) {
            "use strict";
            var __extends = this && this.__extends || function() {
                var extendStatics = function(d, b) {
                    return (extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    } instanceof Array && function(d, b) {
                        d.__proto__ = b;
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                    })(d, b);
                };
                return function(d, b) {
                    function __() {
                        this.constructor = d;
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, 
                    new __());
                };
            }(), __importStar = this && this.__importStar || function(mod) {
                if (mod && mod.__esModule) return mod;
                var result = {};
                if (null != mod) for (var k in mod) Object.hasOwnProperty.call(mod, k) && (result[k] = mod[k]);
                return result.default = mod, result;
            }, __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var react_1 = __importStar(__webpack_require__("./node_modules/react/index.js")), index_1 = __importDefault(__webpack_require__("./src/index.tsx")), styles = __importStar(__webpack_require__("./example/src/app.module.scss")), help_md_1 = __importDefault(__webpack_require__("./example/static/help.md")), App = function(_super) {
                function App(props) {
                    var _this = _super.call(this, props) || this;
                    return _this.$vm = react_1.default.createRef(), _this.state = {
                        value: "",
                        mobile: !1
                    }, _this;
                }
                return __extends(App, _super), App.prototype.componentDidMount = function() {
                    var _this = this;
                    this.resize(), window.addEventListener("resize", function() {
                        _this.resize();
                    }), setTimeout(function() {
                        _this.setState({
                            value: help_md_1.default
                        });
                    }, 200);
                }, App.prototype.resize = function() {
                    window.matchMedia("(min-width: 768px)").matches ? this.setState({
                        mobile: !1
                    }) : this.setState({
                        mobile: !0
                    });
                }, App.prototype.handleChange = function(value) {
                    this.setState({
                        value: value
                    });
                }, App.prototype.handleSave = function(value) {
                    console.log("触发保存事件", value);
                }, App.prototype.addImg = function($file) {
                    this.$vm.current.$img2Url($file.name, "file_url"), console.log($file);
                }, App.prototype.render = function() {
                    var _this = this, _a = this.state, value = _a.value, mobile = _a.mobile;
                    return react_1.default.createElement("div", {
                        className: styles.main
                    }, react_1.default.createElement("div", {
                        className: styles.top
                    }, react_1.default.createElement("h1", null, "for-editor-herb"), react_1.default.createElement("ul", null, react_1.default.createElement("li", null, react_1.default.createElement("a", {
                        href: "https://github.com/HerbertHe/for-editor-herb",
                        target: "_blank",
                        rel: "noopener noreferrer"
                    }, "GitHub")))), react_1.default.createElement("div", {
                        className: styles.editor
                    }, mobile && react_1.default.createElement(index_1.default, {
                        ref: this.$vm,
                        height: "500px",
                        language: "en",
                        value: value,
                        subfield: !1,
                        onChange: function(value) {
                            return _this.handleChange(value);
                        },
                        onSave: function(value) {
                            return _this.handleSave(value);
                        }
                    }), !mobile && react_1.default.createElement(index_1.default, {
                        ref: this.$vm,
                        language: "en",
                        height: "700px",
                        value: value,
                        addImg: function($file) {
                            return _this.addImg($file);
                        },
                        onChange: function(value) {
                            return _this.handleChange(value);
                        },
                        onSave: function(value) {
                            return _this.handleSave(value);
                        }
                    })));
                }, App;
            }(react_1.Component);
            exports.default = App;
        },
        "./example/static/help.md": function(module, __webpack_exports__, __webpack_require__) {
            "use strict";
            __webpack_require__.r(__webpack_exports__), __webpack_exports__.default = '# for-editor\r\n\r\nthis is a markdown editor\r\n\r\n## Paragraph\r\n\r\n*italic*\r\n\r\n**bold**\r\n\r\n***bold-italic***\r\n\r\n~~delete line~~\r\n\r\n<u>underline</u>\r\n\r\n<kbd>keyboard text</kbd>\r\n\r\n## Link\r\n\r\n[demo](https://goer.icu/for-editor-herb/)\r\n\r\n## Quote\r\n\r\n> `for-editor` is a markdown editor\r\n\r\n## Code\r\n\r\n```js\r\nconst editor = require(\'for-editor-herb\')\r\n```\r\n\r\n```go\r\nimport (\r\n  "fmt"\r\n)\r\n\r\nfunc main() {\r\n  fmt.Println("Hello World")\r\n}\r\n```\r\n\r\n`const editor`\r\n\r\n### GitHub Diff\r\n\r\n```diff\r\n+ add\r\n- delete\r\n! focus\r\n# ignore\r\n```\r\n\r\n## List\r\n\r\n- item1\r\n  - subitem1\r\n  - subitem2\r\n  - subitem3\r\n- item2\r\n- item3\r\n\r\n---\r\n\r\n1. item1\r\n2. item2\r\n3. item3\r\n\r\n---\r\n\r\n- [x] item1\r\n- [ ] item2\r\n- [x] item3\r\n\r\n## Table\r\n\r\n| title      | description     |\r\n| ---------- | --------------- |\r\n| for-editor | markdown editor |\r\n\r\n## Tex\r\n\r\nMaxwell\'s Equations\r\n\r\n$$\r\n\\nabla \\times H = J + \\frac{\\partial D}{\\partial t} \\newline\r\n\\nabla \\times E = - \\frac{\\partial B}{\\partial t} \\newline\r\n\\nabla \\cdot B = 0 \\newline\r\n\\nabla \\cdot D = \\rho\r\n$$\r\n\r\nMass-energy equivalence: $E = mc^2$, Schrödinger equation: $\\hat H \\Psi=i \\hbar \\frac{\\partial}{\\partial t}\\Psi$\r\n\r\n## Collapse\r\n\r\n<details>\r\n<summary>title</summary>\r\n\r\ncontent\r\n</details>\r\n';
        },
        "./node_modules/classnames/index.js": function(module, exports, __webpack_require__) {
            var __WEBPACK_AMD_DEFINE_RESULT__;
            !function() {
                "use strict";
                var hasOwn = {}.hasOwnProperty;
                function classNames() {
                    for (var classes = [], i = 0; i < arguments.length; i++) {
                        var arg = arguments[i];
                        if (arg) {
                            var argType = typeof arg;
                            if ("string" === argType || "number" === argType) classes.push(arg); else if (Array.isArray(arg) && arg.length) {
                                var inner = classNames.apply(null, arg);
                                inner && classes.push(inner);
                            } else if ("object" === argType) for (var key in arg) hasOwn.call(arg, key) && arg[key] && classes.push(key);
                        }
                    }
                    return classes.join(" ");
                }
                module.exports ? (classNames.default = classNames, module.exports = classNames) : void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                    return classNames;
                }.apply(exports, [])) || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__);
            }();
        },
        "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/highlight.js/styles/tomorrow.css": function(module, exports, __webpack_require__) {
            (module.exports = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([ module.i, "/* http://jmblog.github.com/color-themes-for-google-code-highlightjs */\n\n/* Tomorrow Comment */\n.hljs-comment,\n.hljs-quote {\n  color: #8e908c;\n}\n\n/* Tomorrow Red */\n.hljs-variable,\n.hljs-template-variable,\n.hljs-tag,\n.hljs-name,\n.hljs-selector-id,\n.hljs-selector-class,\n.hljs-regexp,\n.hljs-deletion {\n  color: #c82829;\n}\n\n/* Tomorrow Orange */\n.hljs-number,\n.hljs-built_in,\n.hljs-builtin-name,\n.hljs-literal,\n.hljs-type,\n.hljs-params,\n.hljs-meta,\n.hljs-link {\n  color: #f5871f;\n}\n\n/* Tomorrow Yellow */\n.hljs-attribute {\n  color: #eab700;\n}\n\n/* Tomorrow Green */\n.hljs-string,\n.hljs-symbol,\n.hljs-bullet,\n.hljs-addition {\n  color: #718c00;\n}\n\n/* Tomorrow Blue */\n.hljs-title,\n.hljs-section {\n  color: #4271ae;\n}\n\n/* Tomorrow Purple */\n.hljs-keyword,\n.hljs-selector-tag {\n  color: #8959a8;\n}\n\n.hljs {\n  display: block;\n  overflow-x: auto;\n  background: white;\n  color: #4d4d4c;\n  padding: 0.5em;\n}\n\n.hljs-emphasis {\n  font-style: italic;\n}\n\n.hljs-strong {\n  font-weight: bold;\n}\n", "" ]);
        },
        "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./example/index.scss": function(module, exports, __webpack_require__) {
            (module.exports = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([ module.i, "#root {\n  height: 100%; }\n", "" ]);
        },
        "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/lib/css/index.scss": function(module, exports, __webpack_require__) {
            (module.exports = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([ module.i, '.for-container {\n  font-family: "Source Sans Pro", "Helvetica Neue", Arial, sans-serif;\n  display: flex;\n  flex-direction: column;\n  height: 600px;\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 0px 12px;\n  background: #fff;\n  font-size: 14px;\n  width: 100%; }\n  .for-container ul,\n  .for-container ol,\n  .for-container li {\n    margin: 0;\n    padding: 0; }\n  .for-container.for-fullscreen {\n    position: fixed;\n    z-index: 99999;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    height: 100% !important; }\n  .for-container > div:first-child {\n    border-top-left-radius: 8px;\n    border-top-right-radius: 8px; }\n  .for-container .for-hidden {\n    display: none; }\n  .for-container .for-toolbar {\n    font-family: "Source Sans Pro", "Helvetica Neue", Arial, sans-serif;\n    display: flex;\n    justify-content: space-between;\n    padding: 0 6px;\n    border-bottom: 1px solid #ddd;\n    color: #555;\n    -webkit-user-select: none;\n    -moz-user-select: none;\n    -ms-user-select: none;\n    user-select: none;\n    flex-direction: row; }\n    .for-container .for-toolbar > .for-pc > ul,\n    .for-container .for-toolbar .for-mobile > ul,\n    .for-container .for-toolbar .for-right-pc > ul,\n    .for-container .for-toolbar .for-right-mobile > ul {\n      display: flex; }\n      .for-container .for-toolbar > .for-pc > ul > li,\n      .for-container .for-toolbar .for-mobile > ul > li,\n      .for-container .for-toolbar .for-right-pc > ul > li,\n      .for-container .for-toolbar .for-right-mobile > ul > li {\n        display: flex;\n        align-items: center;\n        padding: 4px 6px;\n        margin: 8px 4px;\n        border-radius: 4px;\n        line-height: normal; }\n        .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list,\n        .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img,\n        .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para,\n        .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title,\n        .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more,\n        .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list,\n        .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img,\n        .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para,\n        .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title,\n        .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more,\n        .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list,\n        .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img,\n        .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para,\n        .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title,\n        .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more,\n        .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list {\n          position: relative; }\n          .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img > ul, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para > ul, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title > ul, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more > ul, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list > ul,\n          .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img > ul,\n          .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para > ul,\n          .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title > ul,\n          .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more > ul,\n          .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list > ul,\n          .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img > ul,\n          .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para > ul,\n          .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title > ul,\n          .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more > ul,\n          .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list > ul,\n          .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img > ul,\n          .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para > ul,\n          .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title > ul,\n          .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more > ul,\n          .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list > ul {\n            position: absolute;\n            top: 100%;\n            left: -50px;\n            width: 140px;\n            margin-top: 4px;\n            background: #fff;\n            border-radius: 4px;\n            box-shadow: rgba(0, 0, 0, 0.1) 0 2px 8px 0;\n            z-index: 99;\n            line-height: 2.8;\n            text-align: center;\n            list-style: none; }\n            .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img > ul li, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para > ul li, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title > ul li, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more > ul li, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list > ul li,\n            .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img > ul li,\n            .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para > ul li,\n            .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title > ul li,\n            .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more > ul li,\n            .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list > ul li,\n            .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img > ul li,\n            .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para > ul li,\n            .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title > ul li,\n            .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more > ul li,\n            .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list > ul li,\n            .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img > ul li,\n            .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para > ul li,\n            .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title > ul li,\n            .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more > ul li,\n            .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list > ul li {\n              position: relative; }\n              .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img > ul li:hover, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para > ul li:hover, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title > ul li:hover, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more > ul li:hover, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list > ul li:hover,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img > ul li:hover,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para > ul li:hover,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title > ul li:hover,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more > ul li:hover,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list > ul li:hover,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img > ul li:hover,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para > ul li:hover,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title > ul li:hover,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more > ul li:hover,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list > ul li:hover,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img > ul li:hover,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para > ul li:hover,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title > ul li:hover,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more > ul li:hover,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list > ul li:hover {\n                background: #e9e9e9; }\n              .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img > ul li:first-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para > ul li:first-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title > ul li:first-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more > ul li:first-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list > ul li:first-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img > ul li:first-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para > ul li:first-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title > ul li:first-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more > ul li:first-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list > ul li:first-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img > ul li:first-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para > ul li:first-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title > ul li:first-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more > ul li:first-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list > ul li:first-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img > ul li:first-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para > ul li:first-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title > ul li:first-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more > ul li:first-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list > ul li:first-child {\n                border-radius: 4px 4px 0 0; }\n              .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img > ul li:last-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para > ul li:last-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title > ul li:last-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more > ul li:last-child, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list > ul li:last-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img > ul li:last-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para > ul li:last-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title > ul li:last-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more > ul li:last-child,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list > ul li:last-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img > ul li:last-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para > ul li:last-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title > ul li:last-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more > ul li:last-child,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list > ul li:last-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img > ul li:last-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para > ul li:last-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title > ul li:last-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more > ul li:last-child,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list > ul li:last-child {\n                border-radius: 0 0 4px 4px; }\n              .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-img > ul li input, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-para > ul li input, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-title > ul li input, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-more > ul li input, .for-container .for-toolbar > .for-pc > ul > li.for-toolbar-list > ul li input,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-img > ul li input,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-para > ul li input,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-title > ul li input,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-more > ul li input,\n              .for-container .for-toolbar .for-mobile > ul > li.for-toolbar-list > ul li input,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-img > ul li input,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-para > ul li input,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-title > ul li input,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-more > ul li input,\n              .for-container .for-toolbar .for-right-pc > ul > li.for-toolbar-list > ul li input,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-img > ul li input,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-para > ul li input,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-title > ul li input,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-more > ul li input,\n              .for-container .for-toolbar .for-right-mobile > ul > li.for-toolbar-list > ul li input {\n                position: absolute;\n                width: 100%;\n                opacity: 0;\n                left: 0;\n                top: 0;\n                bottom: 0;\n                cursor: pointer; }\n        .for-container .for-toolbar > .for-pc > ul > li.for-active,\n        .for-container .for-toolbar .for-mobile > ul > li.for-active,\n        .for-container .for-toolbar .for-right-pc > ul > li.for-active,\n        .for-container .for-toolbar .for-right-mobile > ul > li.for-active {\n          background: #ddd; }\n        .for-container .for-toolbar > .for-pc > ul > li:hover,\n        .for-container .for-toolbar .for-mobile > ul > li:hover,\n        .for-container .for-toolbar .for-right-pc > ul > li:hover,\n        .for-container .for-toolbar .for-right-mobile > ul > li:hover {\n          cursor: pointer;\n          background: #e9e9e9; }\n        .for-container .for-toolbar > .for-pc > ul > li i,\n        .for-container .for-toolbar .for-mobile > ul > li i,\n        .for-container .for-toolbar .for-right-pc > ul > li i,\n        .for-container .for-toolbar .for-right-mobile > ul > li i {\n          font-size: 1.2em; }\n    .for-container .for-toolbar > .for-pc {\n      display: flex; }\n    .for-container .for-toolbar > .for-right-pc {\n      display: flex; }\n    .for-container .for-toolbar > .for-mobile {\n      display: none;\n      width: calc(100% - 75px); }\n      .for-container .for-toolbar > .for-mobile > ul {\n        flex-wrap: wrap;\n        width: 100%;\n        align-content: flex-start;\n        flex-direction: row; }\n    .for-container .for-toolbar > .for-right-mobile {\n      display: none;\n      width: 75px; }\n      .for-container .for-toolbar > .for-right-mobile > ul {\n        flex-wrap: wrap;\n        width: 100%;\n        align-content: flex-start;\n        flex-direction: row; }\n    @media screen and (max-width: 900px) {\n      .for-container .for-toolbar > .for-pc {\n        display: none; }\n      .for-container .for-toolbar > .for-mobile {\n        display: flex; }\n      .for-container .for-toolbar > .for-right-pc {\n        display: none; }\n      .for-container .for-toolbar > .for-right-mobile {\n        display: flex; } }\n  .for-container .for-editor {\n    display: flex;\n    justify-content: space-between;\n    height: 100%;\n    color: #2c3e50;\n    border-radius: 0 0 8px 8px;\n    overflow: hidden;\n    position: relative; }\n    .for-container .for-editor .for-panel {\n      height: 100%;\n      flex: 0 0 100%;\n      overflow: auto;\n      transition: all 0.2s linear 0s;\n      position: relative; }\n      .for-container .for-editor .for-panel.for-active {\n        flex: 0 0 50%; }\n      .for-container .for-editor .for-panel .for-preview {\n        min-height: 100%;\n        box-sizing: border-box;\n        padding: 10px 14px;\n        background: #fcfcfc; }\n    .for-container .for-editor .for-outline-box {\n      width: 30px;\n      height: 30px;\n      position: absolute;\n      top: 15px;\n      right: 30px;\n      z-index: 999;\n      background-color: white;\n      border-radius: 3px;\n      box-shadow: 0 0 2px grey;\n      padding: 0px;\n      transition: height 1s, width 1s;\n      overflow: hidden; }\n      .for-container .for-editor .for-outline-box > .for-outline-title {\n        height: 30px;\n        width: 30px;\n        display: flex;\n        flex-direction: row;\n        justify-content: flex-start;\n        align-items: center;\n        transition: width 1s; }\n        .for-container .for-editor .for-outline-box > .for-outline-title > i {\n          font-size: 28px; }\n      .for-container .for-editor .for-outline-box > .for-outline-body {\n        width: 100%;\n        height: calc(100% - 30px);\n        margin-top: 5px;\n        overflow-x: hidden;\n        overflow-y: scroll;\n        -ms-overflow-style: none; }\n        .for-container .for-editor .for-outline-box > .for-outline-body::-webkit-scrollbar {\n          display: none; }\n        .for-container .for-editor .for-outline-box > .for-outline-body > ul {\n          height: 0px;\n          transition-delay: 1s;\n          transition: height 1s; }\n          .for-container .for-editor .for-outline-box > .for-outline-body > ul > li {\n            height: 35px;\n            display: none;\n            overflow: hidden; }\n    .for-container .for-editor .for-outline-box:hover {\n      height: 300px;\n      width: 200px;\n      padding: 5px; }\n      .for-container .for-editor .for-outline-box:hover > .for-outline-title {\n        width: 100%;\n        border-bottom: 1px solid #d6d6d6; }\n      .for-container .for-editor .for-outline-box:hover > .for-outline-body {\n        padding-left: 5px; }\n        .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul {\n          height: 100%;\n          width: 100%;\n          display: flex;\n          flex-direction: column;\n          justify-content: flex-start;\n          align-items: flex-start;\n          padding-bottom: 5px; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > li {\n            display: flex;\n            flex-direction: row;\n            justify-content: flex-start;\n            align-items: center;\n            margin-top: 3px;\n            -webkit-user-select: none;\n            -moz-user-select: none;\n            -ms-user-select: none;\n            user-select: none;\n            width: 100%;\n            padding-top: 5px;\n            padding-bottom: 5px;\n            overflow: hidden; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > li > a {\n              text-decoration: none;\n              color: black;\n              text-overflow: ellipsis;\n              white-space: nowrap;\n              width: 90%;\n              overflow: hidden; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > li:hover {\n              background-color: #f0f0f0; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h1 > a {\n            font-size: 20px;\n            font-weight: 700; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h2 {\n            margin-left: 0px; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h2 > a {\n              font-size: 18px;\n              font-weight: 400; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h3 {\n            margin-left: 5px; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h3 > a {\n              font-size: 17px;\n              font-weight: 400; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h4 {\n            margin-left: 10px; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h4 > a {\n              font-size: 16px;\n              font-weight: 400; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h5 {\n            margin-left: 15px; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h5 > a {\n              font-size: 15px;\n              font-weight: 400; }\n          .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h6 {\n            margin-left: 20px; }\n            .for-container .for-editor .for-outline-box:hover > .for-outline-body > ul > .for-outline-h6 > a {\n              font-size: 14px;\n              font-weight: 400; }\n    .for-container .for-editor .for-editor-edit {\n      line-height: 1.6;\n      height: 100%; }\n      .for-container .for-editor .for-editor-edit.for-edit-preview {\n        width: 0;\n        flex: 0 0 0; }\n      .for-container .for-editor .for-editor-edit .for-editor-block {\n        display: flex;\n        min-height: 100%; }\n      .for-container .for-editor .for-editor-edit .for-line-num {\n        list-style: none;\n        background: #eee;\n        padding: 8px 0 120px;\n        min-width: 30px;\n        text-align: center; }\n        .for-container .for-editor .for-editor-edit .for-line-num.hidden {\n          display: none; }\n        .for-container .for-editor .for-editor-edit .for-line-num li {\n          list-style: none; }\n      .for-container .for-editor .for-editor-edit .for-editor-content {\n        flex: 1;\n        position: relative;\n        height: 100%;\n        margin-left: 10px; }\n        .for-container .for-editor .for-editor-edit .for-editor-content pre {\n          padding: 8px 0;\n          display: block;\n          white-space: pre-wrap;\n          word-wrap: break-word;\n          visibility: hidden;\n          margin: 0;\n          font-family: inherit; }\n  .for-container textarea {\n    font-family: "Consolas", "Source Sans Pro", "Helvetica Neue", Arial, sans-serif;\n    box-sizing: border-box;\n    position: absolute;\n    top: 0;\n    bottom: 0;\n    padding: 8px 0;\n    display: block;\n    height: 100%;\n    width: 100%;\n    overflow: hidden;\n    resize: none;\n    border: none;\n    outline: none;\n    font-size: inherit;\n    color: inherit;\n    background: none;\n    line-height: inherit; }\n  .for-container .for-markdown-preview {\n    line-height: 2; }\n    .for-container .for-markdown-preview p,\n    .for-container .for-markdown-preview blockquote,\n    .for-container .for-markdown-preview ul,\n    .for-container .for-markdown-preview ol,\n    .for-container .for-markdown-preview dl,\n    .for-container .for-markdown-preview pre {\n      margin-top: 0;\n      margin-bottom: 0.6em; }\n    .for-container .for-markdown-preview h1,\n    .for-container .for-markdown-preview h2 {\n      border-bottom: 1px solid #e2e2e2; }\n    .for-container .for-markdown-preview h1,\n    .for-container .for-markdown-preview h2,\n    .for-container .for-markdown-preview h3,\n    .for-container .for-markdown-preview h4,\n    .for-container .for-markdown-preview h5,\n    .for-container .for-markdown-preview h6 {\n      padding: 0;\n      margin: 0 0 0.6em;\n      font-weight: 600;\n      text-indent: 0; }\n      .for-container .for-markdown-preview h1:target,\n      .for-container .for-markdown-preview h2:target,\n      .for-container .for-markdown-preview h3:target,\n      .for-container .for-markdown-preview h4:target,\n      .for-container .for-markdown-preview h5:target,\n      .for-container .for-markdown-preview h6:target {\n        padding-top: 4.5rem; }\n    .for-container .for-markdown-preview .for-anchor {\n      color: #74b9ff; }\n    .for-container .for-markdown-preview .for-heading:hover + .for-anchor {\n      color: #0984e3; }\n    .for-container .for-markdown-preview .for-anchor:hover {\n      color: #0984e3; }\n    .for-container .for-markdown-preview details {\n      background-color: #f0f0f0;\n      border-radius: 3px;\n      padding: 0.6em; }\n    .for-container .for-markdown-preview summary {\n      outline: none;\n      cursor: pointer;\n      -webkit-user-select: none;\n      -moz-user-select: none;\n      -ms-user-select: none;\n      user-select: none; }\n    .for-container .for-markdown-preview .katex-html > .mspace {\n      height: 10px; }\n    .for-container .for-markdown-preview kbd {\n      background-color: white;\n      box-shadow: 0 0 2px grey;\n      padding: 3px;\n      border-radius: 2px;\n      font-weight: 600; }\n    .for-container .for-markdown-preview a {\n      color: #0366d6;\n      text-decoration: none; }\n      .for-container .for-markdown-preview a:hover {\n        text-decoration: underline; }\n    .for-container .for-markdown-preview ul,\n    .for-container .for-markdown-preview ol {\n      padding: 0.2em 0.8em; }\n      .for-container .for-markdown-preview ul > li,\n      .for-container .for-markdown-preview ol > li {\n        line-height: 2;\n        padding-left: 0.2em;\n        margin-left: 0.2em;\n        list-style-type: disc; }\n        .for-container .for-markdown-preview ul > li > p,\n        .for-container .for-markdown-preview ol > li > p {\n          text-indent: 0; }\n        .for-container .for-markdown-preview ul > li > ul:last-child,\n        .for-container .for-markdown-preview ol > li > ul:last-child {\n          margin-bottom: 0; }\n        .for-container .for-markdown-preview ul > li > ul li,\n        .for-container .for-markdown-preview ol > li > ul li {\n          list-style-type: circle; }\n          .for-container .for-markdown-preview ul > li > ul li > ul li,\n          .for-container .for-markdown-preview ol > li > ul li > ul li {\n            list-style-type: square; }\n    .for-container .for-markdown-preview > ul,\n    .for-container .for-markdown-preview ol {\n      padding: 0 20px; }\n    .for-container .for-markdown-preview ol > li {\n      list-style-type: decimal; }\n    .for-container .for-markdown-preview blockquote {\n      margin: 0;\n      margin-bottom: 0.6em;\n      padding: 0 1em;\n      color: #6a737d;\n      border-left: 0.25em solid #dfe2e5; }\n      .for-container .for-markdown-preview blockquote p {\n        text-indent: 0; }\n        .for-container .for-markdown-preview blockquote p:first-child {\n          margin-top: 0; }\n        .for-container .for-markdown-preview blockquote p:last-child {\n          margin-bottom: 0; }\n    .for-container .for-markdown-preview pre {\n      padding: 0.6em;\n      overflow: auto;\n      line-height: 1.6;\n      background-color: #fefbec;\n      border-radius: 3px;\n      position: relative; }\n      .for-container .for-markdown-preview pre code {\n        padding: 0;\n        margin: 0;\n        font-size: 100%;\n        background: transparent; }\n      .for-container .for-markdown-preview pre > .for-code-language {\n        position: absolute;\n        top: 0;\n        right: 10px;\n        color: gray;\n        background-color: transparent;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        -ms-user-select: none;\n        user-select: none; }\n    .for-container .for-markdown-preview .for-md-diff {\n      padding: 0.6em;\n      overflow: auto;\n      line-height: 1.6;\n      background-color: transparent; }\n      .for-container .for-markdown-preview .for-md-diff code {\n        padding: 0;\n        margin: 0;\n        font-size: 100%;\n        background: transparent; }\n        .for-container .for-markdown-preview .for-md-diff code > p {\n          padding-left: 5px;\n          padding-right: 5px; }\n        .for-container .for-markdown-preview .for-md-diff code > .for-md-diff-add {\n          color: #22863a;\n          background-color: #f0fff4; }\n        .for-container .for-markdown-preview .for-md-diff code > .for-md-diff-del {\n          color: #b31d28;\n          background-color: #ffeef0; }\n        .for-container .for-markdown-preview .for-md-diff code > .for-md-diff-focus {\n          color: #e36209;\n          background-color: #ffebda; }\n        .for-container .for-markdown-preview .for-md-diff code > .for-md-diff-ignore {\n          color: #6a737d;\n          background-color: transparent; }\n    .for-container .for-markdown-preview code {\n      padding: 0.2em 0.4em;\n      margin: 0;\n      background-color: #fefbec;\n      border-radius: 3px; }\n    .for-container .for-markdown-preview hr {\n      margin-bottom: 0.6em;\n      height: 1px;\n      background: #dadada;\n      border: none; }\n    .for-container .for-markdown-preview table {\n      width: 100%;\n      border: 1px solid #ddd;\n      margin-bottom: 0.6em;\n      border-collapse: collapse;\n      text-align: left; }\n      .for-container .for-markdown-preview table thead {\n        background: #eee; }\n      .for-container .for-markdown-preview table th,\n      .for-container .for-markdown-preview table td {\n        padding: 0.1em 0.4em;\n        border: 1px solid #ddd; }\n    .for-container .for-markdown-preview img {\n      display: block;\n      margin: 0 auto;\n      max-width: 100%;\n      margin-bottom: 0.6em; }\n', "" ]);
        },
        "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/lib/fonts/iconfont.css": function(module, exports, __webpack_require__) {
            exports = module.exports = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1);
            var urlEscape = __webpack_require__("./node_modules/css-loader/dist/runtime/url-escape.js"), ___CSS_LOADER_URL___0___ = urlEscape(__webpack_require__("./src/lib/fonts/iconfont.eot?t=1586341106846")), ___CSS_LOADER_URL___1___ = urlEscape(__webpack_require__("./src/lib/fonts/iconfont.eot?t=1586341106846") + "#iefix"), ___CSS_LOADER_URL___2___ = urlEscape(__webpack_require__("./src/lib/fonts/iconfont.woff?t=1586341106846")), ___CSS_LOADER_URL___3___ = urlEscape(__webpack_require__("./src/lib/fonts/iconfont.ttf?t=1586341106846")), ___CSS_LOADER_URL___4___ = urlEscape(__webpack_require__("./src/lib/fonts/iconfont.svg?t=1586341106846") + "#foricon");
            exports.push([ module.i, '@font-face {font-family: "foricon";\n  src: url(' + ___CSS_LOADER_URL___0___ + "); /* IE9 */\n  src: url(" + ___CSS_LOADER_URL___1___ + ") format('embedded-opentype'), \n  url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAzYAAsAAAAAG4AAAAyIAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCGRAqlCJ1OATYCJANgCzIABCAFhGEHgWcbyxYzUpG6yf4PCZrdyvk2EIQK1W1m9MgxSEZTyWLsTTWXahRWwIBDcbDnwT0sWJiOdE2+41TML9xjmwigtTan7woe8ZAliYZilgoJYqDlffwAN+1CgiUQCNbOkKox1s6hyrwWZk5nzjuhc/rvQMWYGD8XJk6n0P47E9MEAAgTrh1AAQS0+Tk6+2k6DFqHpIrU1n6H9WVZYzXfXhXWZCWkKpE3kcjd9wCBgmH/301/sY2KMEzZ41v/lw/JDSuD//KA9ufnTHv/YEyKSSiU/idpbn2B6/7xP+KfHqU9YFYDkjs5TjtKh+CI1dQcGUcKyKgZ5eeH79l3mZBUKXQVJvxtNyZC2bwUyO7+wQWBlJQi5Hl5vL8kiAVJCyZHigE5c8FU9A5cxfiVEwDe9MePfmCnI5Yl5E2d3O3dMAb4fYwyrBiROIDpjmJxIRKsASnxIpsYjVEf1rRc5iIx/3FevI5qgKCSJE0fw1U6ezt8+0PondgMZTepN30afJ5/aP9jlg0QlBW3cljdSBpZU35pW57B03/ndXGkcg1NFFRNH6mkoodrQI6vqKoNJ8pR7ipEq0gfgADWSiKCciVdEFQriQlJRLpT0kDkUPqAaEAZBqIJZTiIFpRKEAmUsyBqUMKQDKF8wErqzNCVlJjFrqTCzLCSHphlE5lQJoEYQHkDogPlE1ZS4BOooifSgpVU+bVTbW+SBUHKwmd4gS3gGeQZhSNy3IdcfK6cc5FM8nazslh1CYmGCBg0kYVaJk0jaFNzSMxoJn0iidp8RLqmgYQOGEbZGtpISqkgm5TiZDKRGKS11daMFhM2A6cLCaWRCYkqFd6mFN3cyDS6IjuQpGG2YfJTu0RCTSWdGiIywpIgBIBxWSLIqaRHM1gtNnZ+My9yCYh8BeqYEBOwFoH49akyalVVdLLQeXPL6ufiRfBKvjw63+yFwAl8FD+iOIiWNUOI1L4iNbVJP66OlvQlkTOVGRYHiYit8OtzEt/9V400/8smdv3pBA2XhjljAJgNmAgyiMgU8YrefXjV/rJc2kOrY5HYI23L8dw5RgOB4XoML7U6F5x+ZxFOLCKpkg5PMZ45ha1oAe6rVziKmCwnISrLObMFapcOuSkjPBrhSlFRyrjFNrvUYshdHjFaGlhK41q6Ry6qgOWmkzRicARRDYdYEDrd4tIVJ3LtiqLgdBW9shzSahRsqwaHCjqYjzKh3OOiaa1lBY3ksMJy2gUqsSpuP0YzR8cQnRgIZhQzly5bMNbTMX32q0rP5w5a9J5LVcll4q7xdSDcLxFEZqeJqgKAWe+nl07C74I8XkoJRsSrGpqdqWOLy5Jq/I3mUkhxF2GoIIK7TU22Zq6oTqtWOdRVuBjzG5c6/yJc+Y+gqv6Md94RkNeWG3chYtluEZtVMUnep1GxyLRcIrlwhvyZCackZ6fecf3FzI0sNulkczpySDobCqLUmWWnnfPlGuLmG51r6GTCTBDE56e304zaOX38WPN4bRJkMvVj22/tzKl5OrXnn+OK8xJzebh0ddxV90p6bF+X9dbXpZ6HKXLQ5bOKyfeJV/9teCtGZ5avvv9x/+a17VsDbvYp1r2/vMSe5jnl8etg6GiLwY3bBg2uXk735n0/W4MJ5WphcZe7+48+7Gt3I+9RHr+P8+wsLNJdXMUfHXGzd22twye6H/XCthDt3uf/r5cjdQ9P6mrEJavnfhdoDQ9hdnnVRkPtrhO+LjmO1b7ob133qrd+mhgzWo1689yttblvddKkxfPwAUxxrUeiJzZm53lXo5TaJo9hi2XcdCfgEnmdG0g+M3xWVZ8fmdx6t7ogJ911T7pBzd4DVzbePVwir5veFMy16x71fxaOCnP7+Wfc+XW8KDlW5LzJh4c8t7p0RqJBtyBeeEXYyfQSH472dxeJp+y1bEgvG8PRwXCBqPFpcNOW0YfEq0Z/DnAE1WBnMq5FGWdAhLiW8dY5ufcnz5g83YMH8AahwentwgaYa/9/2vXpdPXPB4QVgoO4WhhAPH5esy9jyTQ1flCASZ/FjBnePa20HixPmB1J1YZSQ5AxW2gsKMAwGmUyGSqwwoLOfv+C7hU9rCowaUbSqiDVmG/vfOSStYdIUr/oaUrzvFBnxJGHFd3lP4JN794RT3ifve/KCPZ8Jpr4j2e9837mf4YcDqMlqY4U6XQSN0daxrKlR/sZWuAX0Iw+6N1eJEX6rdZB7hX5Lojuq1SruhPSpTFLKXpMkZnLxagxxaOUSs/qMlHyDtWOZJHUFmOj6GLzAUMt1lWSpbpa3PxNgmCQeQCMBwxkr6zMpgdl7sgjb875ruS2o14/bnBHdOZ8K3UQ6IKicmFeYlGKfkBSgXYyxt8rQB2NAl70bG8FB5s5n5YdQIqn5icWTtZNRqdgjh86p/Vt9S/VoB9veDsBQRSdS0U9S0qPDaFq+hPt4ZFop7DEWHyKWSwkALkz+0bB2xsGpCVjWa+L6cCyp5TdUDYMsdkQ2zpszqFCmF22Anm3OedHhUWHFQg5wFv259d2OKwzmVIk/ijySvAafbNT6EOqsWOizcVTf1qcajxYon780fLixVxfbonEm99887bvxKkLs6FQ3HHE8F6QWkbLllGMxWQMtSzajzf07WuYh86wo2F03oDbdiq/QmZXlL2KUFwIzNOnC+oEeyxRz74xQ1CLIUIfc2W6wCfYDRFdxRyuzGKuzhBsYEM2CKir6CuFXUUfbt5V9NUBmrpZWW8+ND2uIA4sURvAoJnyR////1/cf3b4o7iAC4fk7v+LCwxgTgE9ixmfwhpvVTgBco/DwMy837PhECpsr5FcIDvQrt1BXa3uvEIZ0AUS73zxnexAYK1dvodScVB3aCK3GyMs37C6pU4P2F46yn2zYgad7EvdQaWik2EVyljucnui2AGYac/AfImq28PyoM+k0Wdv//8IQ5fSaS71ks56wv+R/2SWfma3ltc9vbRhdE37pbapcy8wLR8zhO3+wQP4QwIEkHGz6Zu0R9x1rf+WfJne+M2YmqG7bKdtu8eNESdnmpzuLegrL7z/omwFYYT4AtfrE7iV/OPfvOgrKJS3ReMiX/263i3Y619l9fN7+FhHYDLWl3DStte2q0EjfX6mezywLb32Q4F+W+LiPqUptrqED36aG/jKIkr96bcDJdRmRdqnuLjlkdA985/c8M0lFHfG1B9J65S5gYc/uYRbYTKa9U/v9Xv1uJ+1GyX4LbegYRf5y/g/897yIzXGlfRYWFHxT5o8h5SJvWJKDCRFgspIYx1g6iLmbt/y3n8mTRKjxET6xaawMWwSQ5fcZWekeo1eekbimJGnWiR56rxwS1iv1pOnI175VgkwaGfyVJkEtf7pGfa5hP1TreYkE/dnblYPq/ltFBxvoHSW3sgs5965WcOs3cyVxghPye7+JYR6Yh2tjtr3awRSNAVmVU2q6FY0i7+2ZC3qYDxRrdsHrIaRU80vp6vEZkrOfOiz5f83oEhRZEv5MXdz8HnrzFNZ+1eLZrhzGx4DNMyfap6x6Cv7unn0EWMDwYne1Ez6PK4Wgs3zjYZd4X7GVmO/sN9gnL9TYwTjdRTtILD/wNCxd2xHI/W8Qxahei3Mi2oxFW3lnBZN5rQCsJUuot9x6/oB2JBWFMBHsgWR/6DZoEc5P+MAJgR1xDlE+lHAu8zifARgnzmIUpoj1VukMjR1GedSxJecHVOCWAHRFo7375N7+HDmNjVa0uOVgMBA7vDXjpPP9bbhgwVwGoCshT9L5TAAYNmQpb8MjsS2/6YlDBYVCd7/FcKUAFcdAP4mxcrgP1KVlXkH+DHLAnH8OiLULxphfkmLuEBA5iIe8KHHIhySIe/iBMhhBqCAYEIASAKHsQgBEn5HHL99CPU7jTC/0CIuqODGIh6Q8G4RDhaEf4UExCEj8TwqQTK0GF9iUcEbU+PKBELuL0yHlSREd+4fKC7Jom+6VOYDHtTcJJ7TwGyEoeDE3bhJhrVB7BRWKG5m5v3Wtoa7i0YF91ZBHkEytDC+nA0XFbyJ5Mq3Ebn6wnRYuaiCryI2+Q8Qlzwihf6HXxXF6CH7KlVOoXA8pwEraoQFRBlOuE+Kwgp7EHYeVnJW3JgbsP2mFU2ZqnIzrOpeA//fQdXIZ91VIFFoDBaHJxBJZAqVth/ndT/v9/ucF1QeDraLR2JffeTEBULKC1tkBK9Bn3ght1gdjCnu4F0wScUpy9EiUUEjw3OXXleLv7NSndLSxcmpLQO/JYfXISHYHop4jGaB1UmUJ1oxslbuEen/EdjRbZLxTKwIfnsDAAAA') format('woff2'),\n  url(" + ___CSS_LOADER_URL___2___ + ") format('woff'),\n  url(" + ___CSS_LOADER_URL___3___ + ") format('truetype'), \n  url(" + ___CSS_LOADER_URL___4___ + ') format(\'svg\'); /* iOS 4.1- */\n}\n\n.foricon {\n  font-family: "foricon" !important;\n  font-size: 16px;\n  font-style: normal;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n.for-toc:before {\n  content: "\\e600";\n}\n\n.for-outline:before {\n  content: "\\e616";\n}\n\n.for-list:before {\n  content: "\\e682";\n}\n\n.for-more:before {\n  content: "\\e62a";\n}\n\n.for-title:before {\n  content: "\\e737";\n}\n\n.for-render:before {\n  content: "\\e62e";\n}\n\n.for-eye:before {\n  content: "\\e7fd";\n}\n\n.for-eye-off:before {\n  content: "\\e800";\n}\n\n.for-contract:before {\n  content: "\\e703";\n}\n\n.for-table:before {\n  content: "\\ecee";\n}\n\n.for-code:before {\n  content: "\\e725";\n}\n\n.for-expand:before {\n  content: "\\e8cb";\n}\n\n.for-inner-code:before {\n  content: "\\e6c9";\n}\n\n.for-image:before {\n  content: "\\e6fb";\n}\n\n.for-link:before {\n  content: "\\e649";\n}\n\n.for-undo:before {\n  content: "\\e65a";\n}\n\n.for-redo:before {\n  content: "\\e65b";\n}\n\n.for-subfield:before {\n  content: "\\ec7f";\n}\n\n.for-save:before {\n  content: "\\e7f7";\n}\n\n.for-collapse:before {\n  content: "\\e615";\n}\n\n.for-quote:before {\n  content: "\\e735";\n}\n\n.for-katex:before {\n  content: "\\e6e0";\n}\n\n.for-text:before {\n  content: "\\e768";\n}\n\n', "" ]);
        },
        "./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/lib/fonts/katex.css": function(module, exports, __webpack_require__) {
            exports = module.exports = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1);
            var urlEscape = __webpack_require__("./node_modules/css-loader/dist/runtime/url-escape.js"), ___CSS_LOADER_URL___0___ = urlEscape(__webpack_require__("./src/lib/fonts/fonts/KaTeX_Math-Italic.woff2")), ___CSS_LOADER_URL___1___ = urlEscape(__webpack_require__("./src/lib/fonts/fonts/KaTeX_Math-Italic.woff")), ___CSS_LOADER_URL___2___ = urlEscape(__webpack_require__("./src/lib/fonts/fonts/KaTeX_Math-Italic.ttf"));
            exports.push([ module.i, "/* stylelint-disable font-family-no-missing-generic-family-keyword */\r\n@font-face {\r\n  font-family: 'KaTeX_Math';\r\n  src: url(" + ___CSS_LOADER_URL___0___ + ") format('woff2'), url(" + ___CSS_LOADER_URL___1___ + ") format('woff'), url(" + ___CSS_LOADER_URL___2___ + ') format(\'truetype\');\r\n  font-weight: normal;\r\n  font-style: italic;\r\n}\r\n.katex * {\r\n  -ms-high-contrast-adjust: none !important;\r\n}\r\n.katex .katex-version::after {\r\n  content: "0.11.1";\r\n}\r\n.katex .katex-mathml {\r\n  position: absolute;\r\n  clip: rect(1px, 1px, 1px, 1px);\r\n  padding: 0;\r\n  border: 0;\r\n  height: 1px;\r\n  width: 1px;\r\n  overflow: hidden;\r\n}\r\n.katex .katex-html {\r\n  /* \\newline is an empty block at top level, between .base elements */\r\n}\r\n.katex .katex-html > .newline {\r\n  display: block;\r\n}\r\n.katex .base {\r\n  position: relative;\r\n  display: inline-block;\r\n  white-space: nowrap;\r\n  width: -webkit-min-content;\r\n  width: -moz-min-content;\r\n  width: min-content;\r\n}\r\n.katex .strut {\r\n  display: inline-block;\r\n}\r\n.katex .textbf {\r\n  font-weight: bold;\r\n}\r\n.katex .textit {\r\n  font-style: italic;\r\n}\r\n.katex .textrm {\r\n  font-family: KaTeX_Main;\r\n}\r\n.katex .textsf {\r\n  font-family: KaTeX_SansSerif;\r\n}\r\n.katex .texttt {\r\n  font-family: KaTeX_Typewriter;\r\n}\r\n.katex .mathdefault {\r\n  font-family: KaTeX_Math;\r\n  font-style: italic;\r\n}\r\n.katex .mathit {\r\n  font-family: KaTeX_Main;\r\n  font-style: italic;\r\n}\r\n.katex .mathrm {\r\n  font-style: normal;\r\n}\r\n.katex .mathbf {\r\n  font-family: KaTeX_Main;\r\n  font-weight: bold;\r\n}\r\n.katex .boldsymbol {\r\n  font-family: KaTeX_Math;\r\n  font-weight: bold;\r\n  font-style: italic;\r\n}\r\n.katex .amsrm {\r\n  font-family: KaTeX_AMS;\r\n}\r\n.katex .mathbb,\r\n.katex .textbb {\r\n  font-family: KaTeX_AMS;\r\n}\r\n.katex .mathcal {\r\n  font-family: KaTeX_Caligraphic;\r\n}\r\n.katex .mathfrak,\r\n.katex .textfrak {\r\n  font-family: KaTeX_Fraktur;\r\n}\r\n.katex .mathtt {\r\n  font-family: KaTeX_Typewriter;\r\n}\r\n.katex .mathscr,\r\n.katex .textscr {\r\n  font-family: KaTeX_Script;\r\n}\r\n.katex .mathsf,\r\n.katex .textsf {\r\n  font-family: KaTeX_SansSerif;\r\n}\r\n.katex .mathboldsf,\r\n.katex .textboldsf {\r\n  font-family: KaTeX_SansSerif;\r\n  font-weight: bold;\r\n}\r\n.katex .mathitsf,\r\n.katex .textitsf {\r\n  font-family: KaTeX_SansSerif;\r\n  font-style: italic;\r\n}\r\n.katex .mainrm {\r\n  font-family: KaTeX_Main;\r\n  font-style: normal;\r\n}\r\n.katex .vlist-t {\r\n  display: inline-table;\r\n  table-layout: fixed;\r\n}\r\n.katex .vlist-r {\r\n  display: table-row;\r\n}\r\n.katex .vlist {\r\n  display: table-cell;\r\n  vertical-align: bottom;\r\n  position: relative;\r\n}\r\n.katex .vlist > span {\r\n  display: block;\r\n  height: 0;\r\n  position: relative;\r\n}\r\n.katex .vlist > span > span {\r\n  display: inline-block;\r\n}\r\n.katex .vlist > span > .pstrut {\r\n  overflow: hidden;\r\n  width: 0;\r\n}\r\n.katex .vlist-t2 {\r\n  margin-right: -2px;\r\n}\r\n.katex .vlist-s {\r\n  display: table-cell;\r\n  vertical-align: bottom;\r\n  font-size: 1px;\r\n  width: 2px;\r\n  min-width: 2px;\r\n}\r\n.katex .msupsub {\r\n  text-align: left;\r\n}\r\n.katex .mfrac > span > span {\r\n  text-align: center;\r\n}\r\n.katex .mfrac .frac-line {\r\n  display: inline-block;\r\n  width: 100%;\r\n  border-bottom-style: solid;\r\n}\r\n.katex .mfrac .frac-line,\r\n.katex .overline .overline-line,\r\n.katex .underline .underline-line,\r\n.katex .hline,\r\n.katex .hdashline,\r\n.katex .rule {\r\n  min-height: 1px;\r\n}\r\n.katex .mspace {\r\n  display: inline-block;\r\n}\r\n.katex .llap,\r\n.katex .rlap,\r\n.katex .clap {\r\n  width: 0;\r\n  position: relative;\r\n}\r\n.katex .llap > .inner,\r\n.katex .rlap > .inner,\r\n.katex .clap > .inner {\r\n  position: absolute;\r\n}\r\n.katex .llap > .fix,\r\n.katex .rlap > .fix,\r\n.katex .clap > .fix {\r\n  display: inline-block;\r\n}\r\n.katex .llap > .inner {\r\n  right: 0;\r\n}\r\n.katex .rlap > .inner,\r\n.katex .clap > .inner {\r\n  left: 0;\r\n}\r\n.katex .clap > .inner > span {\r\n  margin-left: -50%;\r\n  margin-right: 50%;\r\n}\r\n.katex .rule {\r\n  display: inline-block;\r\n  border: solid 0;\r\n  position: relative;\r\n}\r\n.katex .overline .overline-line,\r\n.katex .underline .underline-line,\r\n.katex .hline {\r\n  display: inline-block;\r\n  width: 100%;\r\n  border-bottom-style: solid;\r\n}\r\n.katex .hdashline {\r\n  display: inline-block;\r\n  width: 100%;\r\n  border-bottom-style: dashed;\r\n}\r\n.katex .sqrt > .root {\r\n  margin-left: 0.27777778em;\r\n  margin-right: -0.55555556em;\r\n}\r\n.katex .sizing.reset-size1.size1,\r\n.katex .fontsize-ensurer.reset-size1.size1 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size1.size2,\r\n.katex .fontsize-ensurer.reset-size1.size2 {\r\n  font-size: 1.2em;\r\n}\r\n.katex .sizing.reset-size1.size3,\r\n.katex .fontsize-ensurer.reset-size1.size3 {\r\n  font-size: 1.4em;\r\n}\r\n.katex .sizing.reset-size1.size4,\r\n.katex .fontsize-ensurer.reset-size1.size4 {\r\n  font-size: 1.6em;\r\n}\r\n.katex .sizing.reset-size1.size5,\r\n.katex .fontsize-ensurer.reset-size1.size5 {\r\n  font-size: 1.8em;\r\n}\r\n.katex .sizing.reset-size1.size6,\r\n.katex .fontsize-ensurer.reset-size1.size6 {\r\n  font-size: 2em;\r\n}\r\n.katex .sizing.reset-size1.size7,\r\n.katex .fontsize-ensurer.reset-size1.size7 {\r\n  font-size: 2.4em;\r\n}\r\n.katex .sizing.reset-size1.size8,\r\n.katex .fontsize-ensurer.reset-size1.size8 {\r\n  font-size: 2.88em;\r\n}\r\n.katex .sizing.reset-size1.size9,\r\n.katex .fontsize-ensurer.reset-size1.size9 {\r\n  font-size: 3.456em;\r\n}\r\n.katex .sizing.reset-size1.size10,\r\n.katex .fontsize-ensurer.reset-size1.size10 {\r\n  font-size: 4.148em;\r\n}\r\n.katex .sizing.reset-size1.size11,\r\n.katex .fontsize-ensurer.reset-size1.size11 {\r\n  font-size: 4.976em;\r\n}\r\n.katex .sizing.reset-size2.size1,\r\n.katex .fontsize-ensurer.reset-size2.size1 {\r\n  font-size: 0.83333333em;\r\n}\r\n.katex .sizing.reset-size2.size2,\r\n.katex .fontsize-ensurer.reset-size2.size2 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size2.size3,\r\n.katex .fontsize-ensurer.reset-size2.size3 {\r\n  font-size: 1.16666667em;\r\n}\r\n.katex .sizing.reset-size2.size4,\r\n.katex .fontsize-ensurer.reset-size2.size4 {\r\n  font-size: 1.33333333em;\r\n}\r\n.katex .sizing.reset-size2.size5,\r\n.katex .fontsize-ensurer.reset-size2.size5 {\r\n  font-size: 1.5em;\r\n}\r\n.katex .sizing.reset-size2.size6,\r\n.katex .fontsize-ensurer.reset-size2.size6 {\r\n  font-size: 1.66666667em;\r\n}\r\n.katex .sizing.reset-size2.size7,\r\n.katex .fontsize-ensurer.reset-size2.size7 {\r\n  font-size: 2em;\r\n}\r\n.katex .sizing.reset-size2.size8,\r\n.katex .fontsize-ensurer.reset-size2.size8 {\r\n  font-size: 2.4em;\r\n}\r\n.katex .sizing.reset-size2.size9,\r\n.katex .fontsize-ensurer.reset-size2.size9 {\r\n  font-size: 2.88em;\r\n}\r\n.katex .sizing.reset-size2.size10,\r\n.katex .fontsize-ensurer.reset-size2.size10 {\r\n  font-size: 3.45666667em;\r\n}\r\n.katex .sizing.reset-size2.size11,\r\n.katex .fontsize-ensurer.reset-size2.size11 {\r\n  font-size: 4.14666667em;\r\n}\r\n.katex .sizing.reset-size3.size1,\r\n.katex .fontsize-ensurer.reset-size3.size1 {\r\n  font-size: 0.71428571em;\r\n}\r\n.katex .sizing.reset-size3.size2,\r\n.katex .fontsize-ensurer.reset-size3.size2 {\r\n  font-size: 0.85714286em;\r\n}\r\n.katex .sizing.reset-size3.size3,\r\n.katex .fontsize-ensurer.reset-size3.size3 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size3.size4,\r\n.katex .fontsize-ensurer.reset-size3.size4 {\r\n  font-size: 1.14285714em;\r\n}\r\n.katex .sizing.reset-size3.size5,\r\n.katex .fontsize-ensurer.reset-size3.size5 {\r\n  font-size: 1.28571429em;\r\n}\r\n.katex .sizing.reset-size3.size6,\r\n.katex .fontsize-ensurer.reset-size3.size6 {\r\n  font-size: 1.42857143em;\r\n}\r\n.katex .sizing.reset-size3.size7,\r\n.katex .fontsize-ensurer.reset-size3.size7 {\r\n  font-size: 1.71428571em;\r\n}\r\n.katex .sizing.reset-size3.size8,\r\n.katex .fontsize-ensurer.reset-size3.size8 {\r\n  font-size: 2.05714286em;\r\n}\r\n.katex .sizing.reset-size3.size9,\r\n.katex .fontsize-ensurer.reset-size3.size9 {\r\n  font-size: 2.46857143em;\r\n}\r\n.katex .sizing.reset-size3.size10,\r\n.katex .fontsize-ensurer.reset-size3.size10 {\r\n  font-size: 2.96285714em;\r\n}\r\n.katex .sizing.reset-size3.size11,\r\n.katex .fontsize-ensurer.reset-size3.size11 {\r\n  font-size: 3.55428571em;\r\n}\r\n.katex .sizing.reset-size4.size1,\r\n.katex .fontsize-ensurer.reset-size4.size1 {\r\n  font-size: 0.625em;\r\n}\r\n.katex .sizing.reset-size4.size2,\r\n.katex .fontsize-ensurer.reset-size4.size2 {\r\n  font-size: 0.75em;\r\n}\r\n.katex .sizing.reset-size4.size3,\r\n.katex .fontsize-ensurer.reset-size4.size3 {\r\n  font-size: 0.875em;\r\n}\r\n.katex .sizing.reset-size4.size4,\r\n.katex .fontsize-ensurer.reset-size4.size4 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size4.size5,\r\n.katex .fontsize-ensurer.reset-size4.size5 {\r\n  font-size: 1.125em;\r\n}\r\n.katex .sizing.reset-size4.size6,\r\n.katex .fontsize-ensurer.reset-size4.size6 {\r\n  font-size: 1.25em;\r\n}\r\n.katex .sizing.reset-size4.size7,\r\n.katex .fontsize-ensurer.reset-size4.size7 {\r\n  font-size: 1.5em;\r\n}\r\n.katex .sizing.reset-size4.size8,\r\n.katex .fontsize-ensurer.reset-size4.size8 {\r\n  font-size: 1.8em;\r\n}\r\n.katex .sizing.reset-size4.size9,\r\n.katex .fontsize-ensurer.reset-size4.size9 {\r\n  font-size: 2.16em;\r\n}\r\n.katex .sizing.reset-size4.size10,\r\n.katex .fontsize-ensurer.reset-size4.size10 {\r\n  font-size: 2.5925em;\r\n}\r\n.katex .sizing.reset-size4.size11,\r\n.katex .fontsize-ensurer.reset-size4.size11 {\r\n  font-size: 3.11em;\r\n}\r\n.katex .sizing.reset-size5.size1,\r\n.katex .fontsize-ensurer.reset-size5.size1 {\r\n  font-size: 0.55555556em;\r\n}\r\n.katex .sizing.reset-size5.size2,\r\n.katex .fontsize-ensurer.reset-size5.size2 {\r\n  font-size: 0.66666667em;\r\n}\r\n.katex .sizing.reset-size5.size3,\r\n.katex .fontsize-ensurer.reset-size5.size3 {\r\n  font-size: 0.77777778em;\r\n}\r\n.katex .sizing.reset-size5.size4,\r\n.katex .fontsize-ensurer.reset-size5.size4 {\r\n  font-size: 0.88888889em;\r\n}\r\n.katex .sizing.reset-size5.size5,\r\n.katex .fontsize-ensurer.reset-size5.size5 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size5.size6,\r\n.katex .fontsize-ensurer.reset-size5.size6 {\r\n  font-size: 1.11111111em;\r\n}\r\n.katex .sizing.reset-size5.size7,\r\n.katex .fontsize-ensurer.reset-size5.size7 {\r\n  font-size: 1.33333333em;\r\n}\r\n.katex .sizing.reset-size5.size8,\r\n.katex .fontsize-ensurer.reset-size5.size8 {\r\n  font-size: 1.6em;\r\n}\r\n.katex .sizing.reset-size5.size9,\r\n.katex .fontsize-ensurer.reset-size5.size9 {\r\n  font-size: 1.92em;\r\n}\r\n.katex .sizing.reset-size5.size10,\r\n.katex .fontsize-ensurer.reset-size5.size10 {\r\n  font-size: 2.30444444em;\r\n}\r\n.katex .sizing.reset-size5.size11,\r\n.katex .fontsize-ensurer.reset-size5.size11 {\r\n  font-size: 2.76444444em;\r\n}\r\n.katex .sizing.reset-size6.size1,\r\n.katex .fontsize-ensurer.reset-size6.size1 {\r\n  font-size: 0.5em;\r\n}\r\n.katex .sizing.reset-size6.size2,\r\n.katex .fontsize-ensurer.reset-size6.size2 {\r\n  font-size: 0.6em;\r\n}\r\n.katex .sizing.reset-size6.size3,\r\n.katex .fontsize-ensurer.reset-size6.size3 {\r\n  font-size: 0.7em;\r\n}\r\n.katex .sizing.reset-size6.size4,\r\n.katex .fontsize-ensurer.reset-size6.size4 {\r\n  font-size: 0.8em;\r\n}\r\n.katex .sizing.reset-size6.size5,\r\n.katex .fontsize-ensurer.reset-size6.size5 {\r\n  font-size: 0.9em;\r\n}\r\n.katex .sizing.reset-size6.size6,\r\n.katex .fontsize-ensurer.reset-size6.size6 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size6.size7,\r\n.katex .fontsize-ensurer.reset-size6.size7 {\r\n  font-size: 1.2em;\r\n}\r\n.katex .sizing.reset-size6.size8,\r\n.katex .fontsize-ensurer.reset-size6.size8 {\r\n  font-size: 1.44em;\r\n}\r\n.katex .sizing.reset-size6.size9,\r\n.katex .fontsize-ensurer.reset-size6.size9 {\r\n  font-size: 1.728em;\r\n}\r\n.katex .sizing.reset-size6.size10,\r\n.katex .fontsize-ensurer.reset-size6.size10 {\r\n  font-size: 2.074em;\r\n}\r\n.katex .sizing.reset-size6.size11,\r\n.katex .fontsize-ensurer.reset-size6.size11 {\r\n  font-size: 2.488em;\r\n}\r\n.katex .sizing.reset-size7.size1,\r\n.katex .fontsize-ensurer.reset-size7.size1 {\r\n  font-size: 0.41666667em;\r\n}\r\n.katex .sizing.reset-size7.size2,\r\n.katex .fontsize-ensurer.reset-size7.size2 {\r\n  font-size: 0.5em;\r\n}\r\n.katex .sizing.reset-size7.size3,\r\n.katex .fontsize-ensurer.reset-size7.size3 {\r\n  font-size: 0.58333333em;\r\n}\r\n.katex .sizing.reset-size7.size4,\r\n.katex .fontsize-ensurer.reset-size7.size4 {\r\n  font-size: 0.66666667em;\r\n}\r\n.katex .sizing.reset-size7.size5,\r\n.katex .fontsize-ensurer.reset-size7.size5 {\r\n  font-size: 0.75em;\r\n}\r\n.katex .sizing.reset-size7.size6,\r\n.katex .fontsize-ensurer.reset-size7.size6 {\r\n  font-size: 0.83333333em;\r\n}\r\n.katex .sizing.reset-size7.size7,\r\n.katex .fontsize-ensurer.reset-size7.size7 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size7.size8,\r\n.katex .fontsize-ensurer.reset-size7.size8 {\r\n  font-size: 1.2em;\r\n}\r\n.katex .sizing.reset-size7.size9,\r\n.katex .fontsize-ensurer.reset-size7.size9 {\r\n  font-size: 1.44em;\r\n}\r\n.katex .sizing.reset-size7.size10,\r\n.katex .fontsize-ensurer.reset-size7.size10 {\r\n  font-size: 1.72833333em;\r\n}\r\n.katex .sizing.reset-size7.size11,\r\n.katex .fontsize-ensurer.reset-size7.size11 {\r\n  font-size: 2.07333333em;\r\n}\r\n.katex .sizing.reset-size8.size1,\r\n.katex .fontsize-ensurer.reset-size8.size1 {\r\n  font-size: 0.34722222em;\r\n}\r\n.katex .sizing.reset-size8.size2,\r\n.katex .fontsize-ensurer.reset-size8.size2 {\r\n  font-size: 0.41666667em;\r\n}\r\n.katex .sizing.reset-size8.size3,\r\n.katex .fontsize-ensurer.reset-size8.size3 {\r\n  font-size: 0.48611111em;\r\n}\r\n.katex .sizing.reset-size8.size4,\r\n.katex .fontsize-ensurer.reset-size8.size4 {\r\n  font-size: 0.55555556em;\r\n}\r\n.katex .sizing.reset-size8.size5,\r\n.katex .fontsize-ensurer.reset-size8.size5 {\r\n  font-size: 0.625em;\r\n}\r\n.katex .sizing.reset-size8.size6,\r\n.katex .fontsize-ensurer.reset-size8.size6 {\r\n  font-size: 0.69444444em;\r\n}\r\n.katex .sizing.reset-size8.size7,\r\n.katex .fontsize-ensurer.reset-size8.size7 {\r\n  font-size: 0.83333333em;\r\n}\r\n.katex .sizing.reset-size8.size8,\r\n.katex .fontsize-ensurer.reset-size8.size8 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size8.size9,\r\n.katex .fontsize-ensurer.reset-size8.size9 {\r\n  font-size: 1.2em;\r\n}\r\n.katex .sizing.reset-size8.size10,\r\n.katex .fontsize-ensurer.reset-size8.size10 {\r\n  font-size: 1.44027778em;\r\n}\r\n.katex .sizing.reset-size8.size11,\r\n.katex .fontsize-ensurer.reset-size8.size11 {\r\n  font-size: 1.72777778em;\r\n}\r\n.katex .sizing.reset-size9.size1,\r\n.katex .fontsize-ensurer.reset-size9.size1 {\r\n  font-size: 0.28935185em;\r\n}\r\n.katex .sizing.reset-size9.size2,\r\n.katex .fontsize-ensurer.reset-size9.size2 {\r\n  font-size: 0.34722222em;\r\n}\r\n.katex .sizing.reset-size9.size3,\r\n.katex .fontsize-ensurer.reset-size9.size3 {\r\n  font-size: 0.40509259em;\r\n}\r\n.katex .sizing.reset-size9.size4,\r\n.katex .fontsize-ensurer.reset-size9.size4 {\r\n  font-size: 0.46296296em;\r\n}\r\n.katex .sizing.reset-size9.size5,\r\n.katex .fontsize-ensurer.reset-size9.size5 {\r\n  font-size: 0.52083333em;\r\n}\r\n.katex .sizing.reset-size9.size6,\r\n.katex .fontsize-ensurer.reset-size9.size6 {\r\n  font-size: 0.5787037em;\r\n}\r\n.katex .sizing.reset-size9.size7,\r\n.katex .fontsize-ensurer.reset-size9.size7 {\r\n  font-size: 0.69444444em;\r\n}\r\n.katex .sizing.reset-size9.size8,\r\n.katex .fontsize-ensurer.reset-size9.size8 {\r\n  font-size: 0.83333333em;\r\n}\r\n.katex .sizing.reset-size9.size9,\r\n.katex .fontsize-ensurer.reset-size9.size9 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size9.size10,\r\n.katex .fontsize-ensurer.reset-size9.size10 {\r\n  font-size: 1.20023148em;\r\n}\r\n.katex .sizing.reset-size9.size11,\r\n.katex .fontsize-ensurer.reset-size9.size11 {\r\n  font-size: 1.43981481em;\r\n}\r\n.katex .sizing.reset-size10.size1,\r\n.katex .fontsize-ensurer.reset-size10.size1 {\r\n  font-size: 0.24108004em;\r\n}\r\n.katex .sizing.reset-size10.size2,\r\n.katex .fontsize-ensurer.reset-size10.size2 {\r\n  font-size: 0.28929605em;\r\n}\r\n.katex .sizing.reset-size10.size3,\r\n.katex .fontsize-ensurer.reset-size10.size3 {\r\n  font-size: 0.33751205em;\r\n}\r\n.katex .sizing.reset-size10.size4,\r\n.katex .fontsize-ensurer.reset-size10.size4 {\r\n  font-size: 0.38572806em;\r\n}\r\n.katex .sizing.reset-size10.size5,\r\n.katex .fontsize-ensurer.reset-size10.size5 {\r\n  font-size: 0.43394407em;\r\n}\r\n.katex .sizing.reset-size10.size6,\r\n.katex .fontsize-ensurer.reset-size10.size6 {\r\n  font-size: 0.48216008em;\r\n}\r\n.katex .sizing.reset-size10.size7,\r\n.katex .fontsize-ensurer.reset-size10.size7 {\r\n  font-size: 0.57859209em;\r\n}\r\n.katex .sizing.reset-size10.size8,\r\n.katex .fontsize-ensurer.reset-size10.size8 {\r\n  font-size: 0.69431051em;\r\n}\r\n.katex .sizing.reset-size10.size9,\r\n.katex .fontsize-ensurer.reset-size10.size9 {\r\n  font-size: 0.83317261em;\r\n}\r\n.katex .sizing.reset-size10.size10,\r\n.katex .fontsize-ensurer.reset-size10.size10 {\r\n  font-size: 1em;\r\n}\r\n.katex .sizing.reset-size10.size11,\r\n.katex .fontsize-ensurer.reset-size10.size11 {\r\n  font-size: 1.19961427em;\r\n}\r\n.katex .sizing.reset-size11.size1,\r\n.katex .fontsize-ensurer.reset-size11.size1 {\r\n  font-size: 0.20096463em;\r\n}\r\n.katex .sizing.reset-size11.size2,\r\n.katex .fontsize-ensurer.reset-size11.size2 {\r\n  font-size: 0.24115756em;\r\n}\r\n.katex .sizing.reset-size11.size3,\r\n.katex .fontsize-ensurer.reset-size11.size3 {\r\n  font-size: 0.28135048em;\r\n}\r\n.katex .sizing.reset-size11.size4,\r\n.katex .fontsize-ensurer.reset-size11.size4 {\r\n  font-size: 0.32154341em;\r\n}\r\n.katex .sizing.reset-size11.size5,\r\n.katex .fontsize-ensurer.reset-size11.size5 {\r\n  font-size: 0.36173633em;\r\n}\r\n.katex .sizing.reset-size11.size6,\r\n.katex .fontsize-ensurer.reset-size11.size6 {\r\n  font-size: 0.40192926em;\r\n}\r\n.katex .sizing.reset-size11.size7,\r\n.katex .fontsize-ensurer.reset-size11.size7 {\r\n  font-size: 0.48231511em;\r\n}\r\n.katex .sizing.reset-size11.size8,\r\n.katex .fontsize-ensurer.reset-size11.size8 {\r\n  font-size: 0.57877814em;\r\n}\r\n.katex .sizing.reset-size11.size9,\r\n.katex .fontsize-ensurer.reset-size11.size9 {\r\n  font-size: 0.69453376em;\r\n}\r\n.katex .sizing.reset-size11.size10,\r\n.katex .fontsize-ensurer.reset-size11.size10 {\r\n  font-size: 0.83360129em;\r\n}\r\n.katex .sizing.reset-size11.size11,\r\n.katex .fontsize-ensurer.reset-size11.size11 {\r\n  font-size: 1em;\r\n}\r\n.katex .delimsizing.size1 {\r\n  font-family: KaTeX_Size1;\r\n}\r\n.katex .delimsizing.size2 {\r\n  font-family: KaTeX_Size2;\r\n}\r\n.katex .delimsizing.size3 {\r\n  font-family: KaTeX_Size3;\r\n}\r\n.katex .delimsizing.size4 {\r\n  font-family: KaTeX_Size4;\r\n}\r\n.katex .delimsizing.mult .delim-size1 > span {\r\n  font-family: KaTeX_Size1;\r\n}\r\n.katex .delimsizing.mult .delim-size4 > span {\r\n  font-family: KaTeX_Size4;\r\n}\r\n.katex .nulldelimiter {\r\n  display: inline-block;\r\n  width: 0.12em;\r\n}\r\n.katex .delimcenter {\r\n  position: relative;\r\n}\r\n.katex .op-symbol {\r\n  position: relative;\r\n}\r\n.katex .op-symbol.small-op {\r\n  font-family: KaTeX_Size1;\r\n}\r\n.katex .op-symbol.large-op {\r\n  font-family: KaTeX_Size2;\r\n}\r\n.katex .op-limits > .vlist-t {\r\n  text-align: center;\r\n}\r\n.katex .accent > .vlist-t {\r\n  text-align: center;\r\n}\r\n.katex .accent .accent-body {\r\n  position: relative;\r\n}\r\n.katex .accent .accent-body:not(.accent-full) {\r\n  width: 0;\r\n}\r\n.katex .overlay {\r\n  display: block;\r\n}\r\n.katex .mtable .vertical-separator {\r\n  display: inline-block;\r\n  min-width: 1px;\r\n}\r\n.katex .mtable .arraycolsep {\r\n  display: inline-block;\r\n}\r\n.katex .mtable .col-align-c > .vlist-t {\r\n  text-align: center;\r\n}\r\n.katex .mtable .col-align-l > .vlist-t {\r\n  text-align: left;\r\n}\r\n.katex .mtable .col-align-r > .vlist-t {\r\n  text-align: right;\r\n}\r\n.katex .svg-align {\r\n  text-align: left;\r\n}\r\n.katex svg {\r\n  display: block;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: inherit;\r\n  fill: currentColor;\r\n  stroke: currentColor;\r\n  fill-rule: nonzero;\r\n  fill-opacity: 1;\r\n  stroke-width: 1;\r\n  stroke-linecap: butt;\r\n  stroke-linejoin: miter;\r\n  stroke-miterlimit: 4;\r\n  stroke-dasharray: none;\r\n  stroke-dashoffset: 0;\r\n  stroke-opacity: 1;\r\n}\r\n.katex svg path {\r\n  stroke: none;\r\n}\r\n.katex img {\r\n  border-style: none;\r\n  min-width: 0;\r\n  min-height: 0;\r\n  max-width: none;\r\n  max-height: none;\r\n}\r\n.katex .stretchy {\r\n  width: 100%;\r\n  display: block;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.katex .stretchy::before,\r\n.katex .stretchy::after {\r\n  content: "";\r\n}\r\n.katex .hide-tail {\r\n  width: 100%;\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n.katex .halfarrow-left {\r\n  position: absolute;\r\n  left: 0;\r\n  width: 50.2%;\r\n  overflow: hidden;\r\n}\r\n.katex .halfarrow-right {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 50.2%;\r\n  overflow: hidden;\r\n}\r\n.katex .brace-left {\r\n  position: absolute;\r\n  left: 0;\r\n  width: 25.1%;\r\n  overflow: hidden;\r\n}\r\n.katex .brace-center {\r\n  position: absolute;\r\n  left: 25%;\r\n  width: 50%;\r\n  overflow: hidden;\r\n}\r\n.katex .brace-right {\r\n  position: absolute;\r\n  right: 0;\r\n  width: 25.1%;\r\n  overflow: hidden;\r\n}\r\n.katex .x-arrow-pad {\r\n  padding: 0 0.5em;\r\n}\r\n.katex .x-arrow,\r\n.katex .mover,\r\n.katex .munder {\r\n  text-align: center;\r\n}\r\n.katex .boxpad {\r\n  padding: 0 0.3em 0 0.3em;\r\n}\r\n.katex .fbox,\r\n.katex .fcolorbox {\r\n  box-sizing: border-box;\r\n  border: 0.04em solid;\r\n}\r\n.katex .cancel-pad {\r\n  padding: 0 0.2em 0 0.2em;\r\n}\r\n.katex .cancel-lap {\r\n  margin-left: -0.2em;\r\n  margin-right: -0.2em;\r\n}\r\n.katex .sout {\r\n  border-bottom-style: solid;\r\n  border-bottom-width: 0.08em;\r\n}\r\n.katex-display {\r\n  display: block;\r\n  margin: 1em 0;\r\n  text-align: center;\r\n}\r\n.katex-display > .katex {\r\n  display: block;\r\n  text-align: center;\r\n  white-space: nowrap;\r\n}\r\n.katex-display > .katex > .katex-html {\r\n  display: block;\r\n  position: relative;\r\n}\r\n.katex-display > .katex > .katex-html > .tag {\r\n  position: absolute;\r\n  right: 0;\r\n}\r\n.katex-display.leqno > .katex > .katex-html > .tag {\r\n  left: 0;\r\n  right: auto;\r\n}\r\n.katex-display.fleqn > .katex {\r\n  text-align: left;\r\n}\r\n', "" ]);
        },
        "./node_modules/css-loader/dist/runtime/api.js": function(module, exports, __webpack_require__) {
            "use strict";
            module.exports = function(useSourceMap) {
                var list = [];
                return list.toString = function() {
                    return this.map(function(item) {
                        var content = function(item, useSourceMap) {
                            var content = item[1] || "", cssMapping = item[3];
                            if (!cssMapping) return content;
                            if (useSourceMap && "function" == typeof btoa) {
                                var sourceMapping = function(sourceMap) {
                                    return "/*# sourceMappingURL=data:application/json;charset=utf-8;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
                                }(cssMapping), sourceURLs = cssMapping.sources.map(function(source) {
                                    return "/*# sourceURL=" + cssMapping.sourceRoot + source + " */";
                                });
                                return [ content ].concat(sourceURLs).concat([ sourceMapping ]).join("\n");
                            }
                            return [ content ].join("\n");
                        }(item, useSourceMap);
                        return item[2] ? "@media " + item[2] + "{" + content + "}" : content;
                    }).join("");
                }, list.i = function(modules, mediaQuery) {
                    "string" == typeof modules && (modules = [ [ null, modules, "" ] ]);
                    for (var alreadyImportedModules = {}, i = 0; i < this.length; i++) {
                        var id = this[i][0];
                        null != id && (alreadyImportedModules[id] = !0);
                    }
                    for (i = 0; i < modules.length; i++) {
                        var item = modules[i];
                        null != item[0] && alreadyImportedModules[item[0]] || (mediaQuery && !item[2] ? item[2] = mediaQuery : mediaQuery && (item[2] = "(" + item[2] + ") and (" + mediaQuery + ")"), 
                        list.push(item));
                    }
                }, list;
            };
        },
        "./node_modules/css-loader/dist/runtime/url-escape.js": function(module, exports, __webpack_require__) {
            "use strict";
            module.exports = function(url, needQuotes) {
                return "string" != typeof url ? url : (/^['"].*['"]$/.test(url) && (url = url.slice(1, -1)), 
                /["'() \t\n]/.test(url) || needQuotes ? '"' + url.replace(/"/g, '\\"').replace(/\n/g, "\\n") + '"' : url);
            };
        },
        "./node_modules/css-modules-typescript-loader/index.js!./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js!./example/src/app.module.scss": function(module, exports, __webpack_require__) {
            (exports = module.exports = __webpack_require__("./node_modules/css-loader/dist/runtime/api.js")(!1)).push([ module.i, "html {\n  height: 100%; }\n\nbody {\n  height: 100%;\n  margin: 0; }\n\n.XtgO0MYuXWqjGmc-cJBTD {\n  padding-bottom: 40px; }\n  .XtgO0MYuXWqjGmc-cJBTD h1,\n  .XtgO0MYuXWqjGmc-cJBTD ul,\n  .XtgO0MYuXWqjGmc-cJBTD li {\n    margin: 0;\n    padding: 0; }\n  .XtgO0MYuXWqjGmc-cJBTD ul,\n  .XtgO0MYuXWqjGmc-cJBTD li {\n    list-style: none; }\n  .XtgO0MYuXWqjGmc-cJBTD a {\n    color: inherit; }\n  .XtgO0MYuXWqjGmc-cJBTD ._3aRq2oBN9_wczjGDctN5yR {\n    display: flex;\n    justify-content: space-between;\n    height: 80px;\n    line-height: 80px;\n    padding: 0 20px;\n    margin-bottom: 30px;\n    font-size: 18px;\n    color: #fff;\n    background: linear-gradient(160deg, #852178, #019845); }\n  .XtgO0MYuXWqjGmc-cJBTD ._3dObe-fI1yHqYDEcMRbyx9 {\n    width: 90%;\n    max-width: 1400px;\n    margin: 0 auto; }\n", "" ]), 
            exports.locals = {
                main: "XtgO0MYuXWqjGmc-cJBTD",
                top: "_3aRq2oBN9_wczjGDctN5yR",
                editor: "_3dObe-fI1yHqYDEcMRbyx9"
            };
        },
        "./node_modules/highlight.js/lib/highlight.js": function(module, exports, __webpack_require__) {
            var __WEBPACK_AMD_DEFINE_RESULT__;
            !function(factory) {
                var globalObject = "object" == typeof window && window || "object" == typeof self && self;
                exports.nodeType ? globalObject && (globalObject.hljs = factory({}), void 0 === (__WEBPACK_AMD_DEFINE_RESULT__ = function() {
                    return globalObject.hljs;
                }.apply(exports, [])) || (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : factory(exports);
            }(function(hljs) {
                var API_REPLACES, ArrayProto = [], objectKeys = Object.keys, languages = {}, aliases = {}, SAFE_MODE = !0, noHighlightRe = /^(no-?highlight|plain|text)$/i, languagePrefixRe = /\blang(?:uage)?-([\w-]+)\b/i, fixMarkupRe = /((^(<[^>]+>|\t|)+|(?:\n)))/gm, spanEndTag = "</span>", LANGUAGE_NOT_FOUND = "Could not find the language '{}', did you forget to load/include a language module?", options = {
                    classPrefix: "hljs-",
                    tabReplace: null,
                    useBR: !1,
                    languages: void 0
                }, COMMON_KEYWORDS = "of and for in not or if then".split(" ");
                function escape(value) {
                    return value.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
                }
                function tag(node) {
                    return node.nodeName.toLowerCase();
                }
                function isNotHighlighted(language) {
                    return noHighlightRe.test(language);
                }
                function inherit(parent) {
                    var key, result = {}, objects = Array.prototype.slice.call(arguments, 1);
                    for (key in parent) result[key] = parent[key];
                    return objects.forEach(function(obj) {
                        for (key in obj) result[key] = obj[key];
                    }), result;
                }
                function nodeStream(node) {
                    var result = [];
                    return function _nodeStream(node, offset) {
                        for (var child = node.firstChild; child; child = child.nextSibling) 3 === child.nodeType ? offset += child.nodeValue.length : 1 === child.nodeType && (result.push({
                            event: "start",
                            offset: offset,
                            node: child
                        }), offset = _nodeStream(child, offset), tag(child).match(/br|hr|img|input/) || result.push({
                            event: "stop",
                            offset: offset,
                            node: child
                        }));
                        return offset;
                    }(node, 0), result;
                }
                function expand_or_clone_mode(mode) {
                    return mode.variants && !mode.cached_variants && (mode.cached_variants = mode.variants.map(function(variant) {
                        return inherit(mode, {
                            variants: null
                        }, variant);
                    })), mode.cached_variants ? mode.cached_variants : function dependencyOnParent(mode) {
                        return !!mode && (mode.endsWithParent || dependencyOnParent(mode.starts));
                    }(mode) ? [ inherit(mode, {
                        starts: mode.starts ? inherit(mode.starts) : null
                    }) ] : Object.isFrozen(mode) ? [ inherit(mode) ] : [ mode ];
                }
                function restoreLanguageApi(obj) {
                    if (API_REPLACES && !obj.langApiRestored) {
                        for (var key in obj.langApiRestored = !0, API_REPLACES) obj[key] && (obj[API_REPLACES[key]] = obj[key]);
                        (obj.contains || []).concat(obj.variants || []).forEach(restoreLanguageApi);
                    }
                }
                function compileKeywords(rawKeywords, case_insensitive) {
                    var compiled_keywords = {};
                    return "string" == typeof rawKeywords ? splitAndCompile("keyword", rawKeywords) : objectKeys(rawKeywords).forEach(function(className) {
                        splitAndCompile(className, rawKeywords[className]);
                    }), compiled_keywords;
                    function splitAndCompile(className, str) {
                        case_insensitive && (str = str.toLowerCase()), str.split(" ").forEach(function(keyword) {
                            var pair = keyword.split("|");
                            compiled_keywords[pair[0]] = [ className, function(keyword, providedScore) {
                                return providedScore ? Number(providedScore) : function(word) {
                                    return -1 != COMMON_KEYWORDS.indexOf(word.toLowerCase());
                                }(keyword) ? 0 : 1;
                            }(pair[0], pair[1]) ];
                        });
                    }
                }
                function compileLanguage(language) {
                    function reStr(re) {
                        return re && re.source || re;
                    }
                    function langRe(value, global) {
                        return new RegExp(reStr(value), "m" + (language.case_insensitive ? "i" : "") + (global ? "g" : ""));
                    }
                    function buildModeRegex(mode) {
                        var matcherRe, term, matchIndexes = {}, regexes = [], matcher = {}, matchAt = 1;
                        function addRule(rule, regex) {
                            matchIndexes[matchAt] = rule, regexes.push([ rule, regex ]), matchAt += function(re) {
                                return new RegExp(re.toString() + "|").exec("").length - 1;
                            }(regex) + 1;
                        }
                        for (var i = 0; i < mode.contains.length; i++) {
                            addRule(term = mode.contains[i], term.beginKeywords ? "\\.?(?:" + term.begin + ")\\.?" : term.begin);
                        }
                        mode.terminator_end && addRule("end", mode.terminator_end), mode.illegal && addRule("illegal", mode.illegal);
                        var terminators = regexes.map(function(el) {
                            return el[1];
                        });
                        return matcherRe = langRe(function(regexps, separator) {
                            for (var backreferenceRe = /\[(?:[^\\\]]|\\.)*\]|\(\??|\\([1-9][0-9]*)|\\./, numCaptures = 0, ret = "", i = 0; i < regexps.length; i++) {
                                var offset = numCaptures += 1, re = reStr(regexps[i]);
                                for (i > 0 && (ret += separator), ret += "("; re.length > 0; ) {
                                    var match = backreferenceRe.exec(re);
                                    if (null == match) {
                                        ret += re;
                                        break;
                                    }
                                    ret += re.substring(0, match.index), re = re.substring(match.index + match[0].length), 
                                    "\\" == match[0][0] && match[1] ? ret += "\\" + String(Number(match[1]) + offset) : (ret += match[0], 
                                    "(" == match[0] && numCaptures++);
                                }
                                ret += ")";
                            }
                            return ret;
                        }(terminators, "|"), !0), matcher.lastIndex = 0, matcher.exec = function(s) {
                            var rule;
                            if (0 === regexes.length) return null;
                            matcherRe.lastIndex = matcher.lastIndex;
                            var match = matcherRe.exec(s);
                            if (!match) return null;
                            for (var i = 0; i < match.length; i++) if (void 0 != match[i] && void 0 != matchIndexes["" + i]) {
                                rule = matchIndexes["" + i];
                                break;
                            }
                            return "string" == typeof rule ? (match.type = rule, match.extra = [ mode.illegal, mode.terminator_end ]) : (match.type = "begin", 
                            match.rule = rule), match;
                        }, matcher;
                    }
                    if (language.contains && -1 != language.contains.indexOf("self")) {
                        if (!SAFE_MODE) throw new Error("ERR: contains `self` is not supported at the top-level of a language.  See documentation.");
                        language.contains = language.contains.filter(function(mode) {
                            return "self" != mode;
                        });
                    }
                    !function compileMode(mode, parent) {
                        mode.compiled || (mode.compiled = !0, mode.keywords = mode.keywords || mode.beginKeywords, 
                        mode.keywords && (mode.keywords = compileKeywords(mode.keywords, language.case_insensitive)), 
                        mode.lexemesRe = langRe(mode.lexemes || /\w+/, !0), parent && (mode.beginKeywords && (mode.begin = "\\b(" + mode.beginKeywords.split(" ").join("|") + ")\\b"), 
                        mode.begin || (mode.begin = /\B|\b/), mode.beginRe = langRe(mode.begin), mode.endSameAsBegin && (mode.end = mode.begin), 
                        mode.end || mode.endsWithParent || (mode.end = /\B|\b/), mode.end && (mode.endRe = langRe(mode.end)), 
                        mode.terminator_end = reStr(mode.end) || "", mode.endsWithParent && parent.terminator_end && (mode.terminator_end += (mode.end ? "|" : "") + parent.terminator_end)), 
                        mode.illegal && (mode.illegalRe = langRe(mode.illegal)), null == mode.relevance && (mode.relevance = 1), 
                        mode.contains || (mode.contains = []), mode.contains = Array.prototype.concat.apply([], mode.contains.map(function(c) {
                            return expand_or_clone_mode("self" === c ? mode : c);
                        })), mode.contains.forEach(function(c) {
                            compileMode(c, mode);
                        }), mode.starts && compileMode(mode.starts, parent), mode.terminators = buildModeRegex(mode));
                    }(language);
                }
                function highlight(languageName, code, ignore_illegals, continuation) {
                    var codeToHighlight = code;
                    function keywordMatch(mode, match) {
                        var match_str = language.case_insensitive ? match[0].toLowerCase() : match[0];
                        return mode.keywords.hasOwnProperty(match_str) && mode.keywords[match_str];
                    }
                    function buildSpan(className, insideSpan, leaveOpen, noPrefix) {
                        if (!leaveOpen && "" === insideSpan) return "";
                        if (!className) return insideSpan;
                        var openSpan = '<span class="' + (noPrefix ? "" : options.classPrefix);
                        return (openSpan += className + '">') + insideSpan + (leaveOpen ? "" : spanEndTag);
                    }
                    function processBuffer() {
                        result += null != top.subLanguage ? function() {
                            var explicit = "string" == typeof top.subLanguage;
                            if (explicit && !languages[top.subLanguage]) return escape(mode_buffer);
                            var result = explicit ? highlight(top.subLanguage, mode_buffer, !0, continuations[top.subLanguage]) : highlightAuto(mode_buffer, top.subLanguage.length ? top.subLanguage : void 0);
                            return top.relevance > 0 && (relevance += result.relevance), explicit && (continuations[top.subLanguage] = result.top), 
                            buildSpan(result.language, result.value, !1, !0);
                        }() : function() {
                            var keyword_match, last_index, match, result;
                            if (!top.keywords) return escape(mode_buffer);
                            for (result = "", last_index = 0, top.lexemesRe.lastIndex = 0, match = top.lexemesRe.exec(mode_buffer); match; ) result += escape(mode_buffer.substring(last_index, match.index)), 
                            (keyword_match = keywordMatch(top, match)) ? (relevance += keyword_match[1], result += buildSpan(keyword_match[0], escape(match[0]))) : result += escape(match[0]), 
                            last_index = top.lexemesRe.lastIndex, match = top.lexemesRe.exec(mode_buffer);
                            return result + escape(mode_buffer.substr(last_index));
                        }(), mode_buffer = "";
                    }
                    function startNewMode(mode) {
                        result += mode.className ? buildSpan(mode.className, "", !0) : "", top = Object.create(mode, {
                            parent: {
                                value: top
                            }
                        });
                    }
                    function doBeginMatch(match) {
                        var lexeme = match[0], new_mode = match.rule;
                        return new_mode && new_mode.endSameAsBegin && (new_mode.endRe = function(value) {
                            return new RegExp(value.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&"), "m");
                        }(lexeme)), new_mode.skip ? mode_buffer += lexeme : (new_mode.excludeBegin && (mode_buffer += lexeme), 
                        processBuffer(), new_mode.returnBegin || new_mode.excludeBegin || (mode_buffer = lexeme)), 
                        startNewMode(new_mode), new_mode.returnBegin ? 0 : lexeme.length;
                    }
                    function doEndMatch(match) {
                        var lexeme = match[0], matchPlusRemainder = codeToHighlight.substr(match.index), end_mode = function endOfMode(mode, lexeme) {
                            if (function(re, lexeme) {
                                var match = re && re.exec(lexeme);
                                return match && 0 === match.index;
                            }(mode.endRe, lexeme)) {
                                for (;mode.endsParent && mode.parent; ) mode = mode.parent;
                                return mode;
                            }
                            if (mode.endsWithParent) return endOfMode(mode.parent, lexeme);
                        }(top, matchPlusRemainder);
                        if (end_mode) {
                            var origin = top;
                            origin.skip ? mode_buffer += lexeme : (origin.returnEnd || origin.excludeEnd || (mode_buffer += lexeme), 
                            processBuffer(), origin.excludeEnd && (mode_buffer = lexeme));
                            do {
                                top.className && (result += spanEndTag), top.skip || top.subLanguage || (relevance += top.relevance), 
                                top = top.parent;
                            } while (top !== end_mode.parent);
                            return end_mode.starts && (end_mode.endSameAsBegin && (end_mode.starts.endRe = end_mode.endRe), 
                            startNewMode(end_mode.starts)), origin.returnEnd ? 0 : lexeme.length;
                        }
                    }
                    var lastMatch = {};
                    function processLexeme(text_before_match, match) {
                        var lexeme = match && match[0];
                        if (mode_buffer += text_before_match, null == lexeme) return processBuffer(), 0;
                        if ("begin" == lastMatch.type && "end" == match.type && lastMatch.index == match.index && "" === lexeme) return mode_buffer += codeToHighlight.slice(match.index, match.index + 1), 
                        1;
                        if (lastMatch = match, "begin" === match.type) return doBeginMatch(match);
                        if ("illegal" === match.type && !ignore_illegals) throw new Error('Illegal lexeme "' + lexeme + '" for mode "' + (top.className || "<unnamed>") + '"');
                        if ("end" === match.type) {
                            var processed = doEndMatch(match);
                            if (void 0 != processed) return processed;
                        }
                        return mode_buffer += lexeme, lexeme.length;
                    }
                    var language = getLanguage(languageName);
                    if (!language) throw console.error(LANGUAGE_NOT_FOUND.replace("{}", languageName)), 
                    new Error('Unknown language: "' + languageName + '"');
                    compileLanguage(language);
                    var current, top = continuation || language, continuations = {}, result = "";
                    for (current = top; current !== language; current = current.parent) current.className && (result = buildSpan(current.className, "", !0) + result);
                    var mode_buffer = "", relevance = 0;
                    try {
                        for (var match, count, index = 0; top.terminators.lastIndex = index, match = top.terminators.exec(codeToHighlight); ) count = processLexeme(codeToHighlight.substring(index, match.index), match), 
                        index = match.index + count;
                        for (processLexeme(codeToHighlight.substr(index)), current = top; current.parent; current = current.parent) current.className && (result += spanEndTag);
                        return {
                            relevance: relevance,
                            value: result,
                            illegal: !1,
                            language: languageName,
                            top: top
                        };
                    } catch (err) {
                        if (err.message && -1 !== err.message.indexOf("Illegal")) return {
                            illegal: !0,
                            relevance: 0,
                            value: escape(codeToHighlight)
                        };
                        if (SAFE_MODE) return {
                            relevance: 0,
                            value: escape(codeToHighlight),
                            language: languageName,
                            top: top,
                            errorRaised: err
                        };
                        throw err;
                    }
                }
                function highlightAuto(code, languageSubset) {
                    languageSubset = languageSubset || options.languages || objectKeys(languages);
                    var result = {
                        relevance: 0,
                        value: escape(code)
                    }, second_best = result;
                    return languageSubset.filter(getLanguage).filter(autoDetection).forEach(function(name) {
                        var current = highlight(name, code, !1);
                        current.language = name, current.relevance > second_best.relevance && (second_best = current), 
                        current.relevance > result.relevance && (second_best = result, result = current);
                    }), second_best.language && (result.second_best = second_best), result;
                }
                function fixMarkup(value) {
                    return options.tabReplace || options.useBR ? value.replace(fixMarkupRe, function(match, p1) {
                        return options.useBR && "\n" === match ? "<br>" : options.tabReplace ? p1.replace(/\t/g, options.tabReplace) : "";
                    }) : value;
                }
                function highlightBlock(block) {
                    var node, originalStream, result, resultNode, text, language = function(block) {
                        var i, match, length, _class, classes = block.className + " ";
                        if (classes += block.parentNode ? block.parentNode.className : "", match = languagePrefixRe.exec(classes)) {
                            var language = getLanguage(match[1]);
                            return language || (console.warn(LANGUAGE_NOT_FOUND.replace("{}", match[1])), console.warn("Falling back to no-highlight mode for this block.", block)), 
                            language ? match[1] : "no-highlight";
                        }
                        for (i = 0, length = (classes = classes.split(/\s+/)).length; i < length; i++) if (isNotHighlighted(_class = classes[i]) || getLanguage(_class)) return _class;
                    }(block);
                    isNotHighlighted(language) || (options.useBR ? (node = document.createElement("div")).innerHTML = block.innerHTML.replace(/\n/g, "").replace(/<br[ \/]*>/g, "\n") : node = block, 
                    text = node.textContent, result = language ? highlight(language, text, !0) : highlightAuto(text), 
                    (originalStream = nodeStream(node)).length && ((resultNode = document.createElement("div")).innerHTML = result.value, 
                    result.value = function(original, highlighted, value) {
                        var processed = 0, result = "", nodeStack = [];
                        function selectStream() {
                            return original.length && highlighted.length ? original[0].offset !== highlighted[0].offset ? original[0].offset < highlighted[0].offset ? original : highlighted : "start" === highlighted[0].event ? original : highlighted : original.length ? original : highlighted;
                        }
                        function open(node) {
                            result += "<" + tag(node) + ArrayProto.map.call(node.attributes, function(a) {
                                return " " + a.nodeName + '="' + escape(a.value).replace(/"/g, "&quot;") + '"';
                            }).join("") + ">";
                        }
                        function close(node) {
                            result += "</" + tag(node) + ">";
                        }
                        function render(event) {
                            ("start" === event.event ? open : close)(event.node);
                        }
                        for (;original.length || highlighted.length; ) {
                            var stream = selectStream();
                            if (result += escape(value.substring(processed, stream[0].offset)), processed = stream[0].offset, 
                            stream === original) {
                                nodeStack.reverse().forEach(close);
                                do {
                                    render(stream.splice(0, 1)[0]), stream = selectStream();
                                } while (stream === original && stream.length && stream[0].offset === processed);
                                nodeStack.reverse().forEach(open);
                            } else "start" === stream[0].event ? nodeStack.push(stream[0].node) : nodeStack.pop(), 
                            render(stream.splice(0, 1)[0]);
                        }
                        return result + escape(value.substr(processed));
                    }(originalStream, nodeStream(resultNode), text)), result.value = fixMarkup(result.value), 
                    block.innerHTML = result.value, block.className = function(prevClassName, currentLang, resultLang) {
                        var language = currentLang ? aliases[currentLang] : resultLang, result = [ prevClassName.trim() ];
                        return prevClassName.match(/\bhljs\b/) || result.push("hljs"), -1 === prevClassName.indexOf(language) && result.push(language), 
                        result.join(" ").trim();
                    }(block.className, language, result.language), block.result = {
                        language: result.language,
                        re: result.relevance
                    }, result.second_best && (block.second_best = {
                        language: result.second_best.language,
                        re: result.second_best.relevance
                    }));
                }
                function initHighlighting() {
                    if (!initHighlighting.called) {
                        initHighlighting.called = !0;
                        var blocks = document.querySelectorAll("pre code");
                        ArrayProto.forEach.call(blocks, highlightBlock);
                    }
                }
                var PLAINTEXT_LANGUAGE = {
                    disableAutodetect: !0
                };
                function getLanguage(name) {
                    return name = (name || "").toLowerCase(), languages[name] || languages[aliases[name]];
                }
                function autoDetection(name) {
                    var lang = getLanguage(name);
                    return lang && !lang.disableAutodetect;
                }
                return hljs.highlight = highlight, hljs.highlightAuto = highlightAuto, hljs.fixMarkup = fixMarkup, 
                hljs.highlightBlock = highlightBlock, hljs.configure = function(user_options) {
                    options = inherit(options, user_options);
                }, hljs.initHighlighting = initHighlighting, hljs.initHighlightingOnLoad = function() {
                    window.addEventListener("DOMContentLoaded", initHighlighting, !1), window.addEventListener("load", initHighlighting, !1);
                }, hljs.registerLanguage = function(name, language) {
                    var lang;
                    try {
                        lang = language(hljs);
                    } catch (error) {
                        if (console.error("Language definition for '{}' could not be registered.".replace("{}", name)), 
                        !SAFE_MODE) throw error;
                        console.error(error), lang = PLAINTEXT_LANGUAGE;
                    }
                    languages[name] = lang, restoreLanguageApi(lang), lang.rawDefinition = language.bind(null, hljs), 
                    lang.aliases && lang.aliases.forEach(function(alias) {
                        aliases[alias] = name;
                    });
                }, hljs.listLanguages = function() {
                    return objectKeys(languages);
                }, hljs.getLanguage = getLanguage, hljs.requireLanguage = function(name) {
                    var lang = getLanguage(name);
                    if (lang) return lang;
                    throw new Error("The '{}' language is required, but not loaded.".replace("{}", name));
                }, hljs.autoDetection = autoDetection, hljs.inherit = inherit, hljs.debugMode = function() {
                    SAFE_MODE = !1;
                }, hljs.IDENT_RE = "[a-zA-Z]\\w*", hljs.UNDERSCORE_IDENT_RE = "[a-zA-Z_]\\w*", hljs.NUMBER_RE = "\\b\\d+(\\.\\d+)?", 
                hljs.C_NUMBER_RE = "(-?)(\\b0[xX][a-fA-F0-9]+|(\\b\\d+(\\.\\d*)?|\\.\\d+)([eE][-+]?\\d+)?)", 
                hljs.BINARY_NUMBER_RE = "\\b(0b[01]+)", hljs.RE_STARTERS_RE = "!|!=|!==|%|%=|&|&&|&=|\\*|\\*=|\\+|\\+=|,|-|-=|/=|/|:|;|<<|<<=|<=|<|===|==|=|>>>=|>>=|>=|>>>|>>|>|\\?|\\[|\\{|\\(|\\^|\\^=|\\||\\|=|\\|\\||~", 
                hljs.BACKSLASH_ESCAPE = {
                    begin: "\\\\[\\s\\S]",
                    relevance: 0
                }, hljs.APOS_STRING_MODE = {
                    className: "string",
                    begin: "'",
                    end: "'",
                    illegal: "\\n",
                    contains: [ hljs.BACKSLASH_ESCAPE ]
                }, hljs.QUOTE_STRING_MODE = {
                    className: "string",
                    begin: '"',
                    end: '"',
                    illegal: "\\n",
                    contains: [ hljs.BACKSLASH_ESCAPE ]
                }, hljs.PHRASAL_WORDS_MODE = {
                    begin: /\b(a|an|the|are|I'm|isn't|don't|doesn't|won't|but|just|should|pretty|simply|enough|gonna|going|wtf|so|such|will|you|your|they|like|more)\b/
                }, hljs.COMMENT = function(begin, end, inherits) {
                    var mode = hljs.inherit({
                        className: "comment",
                        begin: begin,
                        end: end,
                        contains: []
                    }, inherits || {});
                    return mode.contains.push(hljs.PHRASAL_WORDS_MODE), mode.contains.push({
                        className: "doctag",
                        begin: "(?:TODO|FIXME|NOTE|BUG|XXX):",
                        relevance: 0
                    }), mode;
                }, hljs.C_LINE_COMMENT_MODE = hljs.COMMENT("//", "$"), hljs.C_BLOCK_COMMENT_MODE = hljs.COMMENT("/\\*", "\\*/"), 
                hljs.HASH_COMMENT_MODE = hljs.COMMENT("#", "$"), hljs.NUMBER_MODE = {
                    className: "number",
                    begin: hljs.NUMBER_RE,
                    relevance: 0
                }, hljs.C_NUMBER_MODE = {
                    className: "number",
                    begin: hljs.C_NUMBER_RE,
                    relevance: 0
                }, hljs.BINARY_NUMBER_MODE = {
                    className: "number",
                    begin: hljs.BINARY_NUMBER_RE,
                    relevance: 0
                }, hljs.CSS_NUMBER_MODE = {
                    className: "number",
                    begin: hljs.NUMBER_RE + "(%|em|ex|ch|rem|vw|vh|vmin|vmax|cm|mm|in|pt|pc|px|deg|grad|rad|turn|s|ms|Hz|kHz|dpi|dpcm|dppx)?",
                    relevance: 0
                }, hljs.REGEXP_MODE = {
                    className: "regexp",
                    begin: /\//,
                    end: /\/[gimuy]*/,
                    illegal: /\n/,
                    contains: [ hljs.BACKSLASH_ESCAPE, {
                        begin: /\[/,
                        end: /\]/,
                        relevance: 0,
                        contains: [ hljs.BACKSLASH_ESCAPE ]
                    } ]
                }, hljs.TITLE_MODE = {
                    className: "title",
                    begin: hljs.IDENT_RE,
                    relevance: 0
                }, hljs.UNDERSCORE_TITLE_MODE = {
                    className: "title",
                    begin: hljs.UNDERSCORE_IDENT_RE,
                    relevance: 0
                }, hljs.METHOD_GUARD = {
                    begin: "\\.\\s*" + hljs.UNDERSCORE_IDENT_RE,
                    relevance: 0
                }, [ hljs.BACKSLASH_ESCAPE, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.PHRASAL_WORDS_MODE, hljs.COMMENT, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.HASH_COMMENT_MODE, hljs.NUMBER_MODE, hljs.C_NUMBER_MODE, hljs.BINARY_NUMBER_MODE, hljs.CSS_NUMBER_MODE, hljs.REGEXP_MODE, hljs.TITLE_MODE, hljs.UNDERSCORE_TITLE_MODE, hljs.METHOD_GUARD ].forEach(function(obj) {
                    !function deepFreeze(o) {
                        Object.freeze(o);
                        var objIsFunction = "function" == typeof o;
                        Object.getOwnPropertyNames(o).forEach(function(prop) {
                            !o.hasOwnProperty(prop) || null === o[prop] || "object" != typeof o[prop] && "function" != typeof o[prop] || objIsFunction && ("caller" === prop || "callee" === prop || "arguments" === prop) || Object.isFrozen(o[prop]) || deepFreeze(o[prop]);
                        });
                        return o;
                    }(obj);
                }), hljs;
            });
        },
        "./node_modules/highlight.js/lib/languages/css.js": function(module, exports) {
            module.exports = function(hljs) {
                var RULE = {
                    begin: /(?:[A-Z\_\.\-]+|--[a-zA-Z0-9_-]+)\s*:/,
                    returnBegin: !0,
                    end: ";",
                    endsWithParent: !0,
                    contains: [ {
                        className: "attribute",
                        begin: /\S/,
                        end: ":",
                        excludeEnd: !0,
                        starts: {
                            endsWithParent: !0,
                            excludeEnd: !0,
                            contains: [ {
                                begin: /[\w-]+\(/,
                                returnBegin: !0,
                                contains: [ {
                                    className: "built_in",
                                    begin: /[\w-]+/
                                }, {
                                    begin: /\(/,
                                    end: /\)/,
                                    contains: [ hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE ]
                                } ]
                            }, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE, {
                                className: "number",
                                begin: "#[0-9A-Fa-f]+"
                            }, {
                                className: "meta",
                                begin: "!important"
                            } ]
                        }
                    } ]
                };
                return {
                    case_insensitive: !0,
                    illegal: /[=\/|'\$]/,
                    contains: [ hljs.C_BLOCK_COMMENT_MODE, {
                        className: "selector-id",
                        begin: /#[A-Za-z0-9_-]+/
                    }, {
                        className: "selector-class",
                        begin: /\.[A-Za-z0-9_-]+/
                    }, {
                        className: "selector-attr",
                        begin: /\[/,
                        end: /\]/,
                        illegal: "$",
                        contains: [ hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE ]
                    }, {
                        className: "selector-pseudo",
                        begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
                    }, {
                        begin: "@(page|font-face)",
                        lexemes: "@[a-z-]+",
                        keywords: "@page @font-face"
                    }, {
                        begin: "@",
                        end: "[{;]",
                        illegal: /:/,
                        returnBegin: !0,
                        contains: [ {
                            className: "keyword",
                            begin: /@\-?\w[\w]*(\-\w+)*/
                        }, {
                            begin: /\s/,
                            endsWithParent: !0,
                            excludeEnd: !0,
                            relevance: 0,
                            keywords: "and or not only",
                            contains: [ {
                                begin: /[a-z-]+:/,
                                className: "attribute"
                            }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, hljs.CSS_NUMBER_MODE ]
                        } ]
                    }, {
                        className: "selector-tag",
                        begin: "[a-zA-Z-][a-zA-Z0-9_-]*",
                        relevance: 0
                    }, {
                        begin: "{",
                        end: "}",
                        illegal: /\S/,
                        contains: [ hljs.C_BLOCK_COMMENT_MODE, RULE ]
                    } ]
                };
            };
        },
        "./node_modules/highlight.js/lib/languages/go.js": function(module, exports) {
            module.exports = function(hljs) {
                var GO_KEYWORDS = {
                    keyword: "break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune",
                    literal: "true false iota nil",
                    built_in: "append cap close complex copy imag len make new panic print println real recover delete"
                };
                return {
                    aliases: [ "golang" ],
                    keywords: GO_KEYWORDS,
                    illegal: "</",
                    contains: [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {
                        className: "string",
                        variants: [ hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, {
                            begin: "`",
                            end: "`"
                        } ]
                    }, {
                        className: "number",
                        variants: [ {
                            begin: hljs.C_NUMBER_RE + "[i]",
                            relevance: 1
                        }, hljs.C_NUMBER_MODE ]
                    }, {
                        begin: /:=/
                    }, {
                        className: "function",
                        beginKeywords: "func",
                        end: "\\s*(\\{|$)",
                        excludeEnd: !0,
                        contains: [ hljs.TITLE_MODE, {
                            className: "params",
                            begin: /\(/,
                            end: /\)/,
                            keywords: GO_KEYWORDS,
                            illegal: /["']/
                        } ]
                    } ]
                };
            };
        },
        "./node_modules/highlight.js/lib/languages/javascript.js": function(module, exports) {
            module.exports = function(hljs) {
                var FRAGMENT_begin = "<>", FRAGMENT_end = "</>", XML_TAG = {
                    begin: /<[A-Za-z0-9\\._:-]+/,
                    end: /\/[A-Za-z0-9\\._:-]+>|\/>/
                }, IDENT_RE = "[A-Za-z$_][0-9A-Za-z$_]*", KEYWORDS = {
                    keyword: "in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as",
                    literal: "true false null undefined NaN Infinity",
                    built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise"
                }, NUMBER = {
                    className: "number",
                    variants: [ {
                        begin: "\\b(0[bB][01]+)n?"
                    }, {
                        begin: "\\b(0[oO][0-7]+)n?"
                    }, {
                        begin: hljs.C_NUMBER_RE + "n?"
                    } ],
                    relevance: 0
                }, SUBST = {
                    className: "subst",
                    begin: "\\$\\{",
                    end: "\\}",
                    keywords: KEYWORDS,
                    contains: []
                }, HTML_TEMPLATE = {
                    begin: "html`",
                    end: "",
                    starts: {
                        end: "`",
                        returnEnd: !1,
                        contains: [ hljs.BACKSLASH_ESCAPE, SUBST ],
                        subLanguage: "xml"
                    }
                }, CSS_TEMPLATE = {
                    begin: "css`",
                    end: "",
                    starts: {
                        end: "`",
                        returnEnd: !1,
                        contains: [ hljs.BACKSLASH_ESCAPE, SUBST ],
                        subLanguage: "css"
                    }
                }, TEMPLATE_STRING = {
                    className: "string",
                    begin: "`",
                    end: "`",
                    contains: [ hljs.BACKSLASH_ESCAPE, SUBST ]
                };
                SUBST.contains = [ hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, TEMPLATE_STRING, NUMBER, hljs.REGEXP_MODE ];
                var PARAMS_CONTAINS = SUBST.contains.concat([ hljs.C_BLOCK_COMMENT_MODE, hljs.C_LINE_COMMENT_MODE ]);
                return {
                    aliases: [ "js", "jsx", "mjs", "cjs" ],
                    keywords: KEYWORDS,
                    contains: [ {
                        className: "meta",
                        relevance: 10,
                        begin: /^\s*['"]use (strict|asm)['"]/
                    }, {
                        className: "meta",
                        begin: /^#!/,
                        end: /$/
                    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, TEMPLATE_STRING, hljs.C_LINE_COMMENT_MODE, hljs.COMMENT("/\\*\\*", "\\*/", {
                        relevance: 0,
                        contains: [ {
                            className: "doctag",
                            begin: "@[A-Za-z]+",
                            contains: [ {
                                className: "type",
                                begin: "\\{",
                                end: "\\}",
                                relevance: 0
                            }, {
                                className: "variable",
                                begin: IDENT_RE + "(?=\\s*(-)|$)",
                                endsParent: !0,
                                relevance: 0
                            }, {
                                begin: /(?=[^\n])\s/,
                                relevance: 0
                            } ]
                        } ]
                    }), hljs.C_BLOCK_COMMENT_MODE, NUMBER, {
                        begin: /[{,\n]\s*/,
                        relevance: 0,
                        contains: [ {
                            begin: IDENT_RE + "\\s*:",
                            returnBegin: !0,
                            relevance: 0,
                            contains: [ {
                                className: "attr",
                                begin: IDENT_RE,
                                relevance: 0
                            } ]
                        } ]
                    }, {
                        begin: "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
                        keywords: "return throw case",
                        contains: [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {
                            className: "function",
                            begin: "(\\(.*?\\)|" + IDENT_RE + ")\\s*=>",
                            returnBegin: !0,
                            end: "\\s*=>",
                            contains: [ {
                                className: "params",
                                variants: [ {
                                    begin: IDENT_RE
                                }, {
                                    begin: /\(\s*\)/
                                }, {
                                    begin: /\(/,
                                    end: /\)/,
                                    excludeBegin: !0,
                                    excludeEnd: !0,
                                    keywords: KEYWORDS,
                                    contains: PARAMS_CONTAINS
                                } ]
                            } ]
                        }, {
                            className: "",
                            begin: /\s/,
                            end: /\s*/,
                            skip: !0
                        }, {
                            variants: [ {
                                begin: FRAGMENT_begin,
                                end: FRAGMENT_end
                            }, {
                                begin: XML_TAG.begin,
                                end: XML_TAG.end
                            } ],
                            subLanguage: "xml",
                            contains: [ {
                                begin: XML_TAG.begin,
                                end: XML_TAG.end,
                                skip: !0,
                                contains: [ "self" ]
                            } ]
                        } ],
                        relevance: 0
                    }, {
                        className: "function",
                        beginKeywords: "function",
                        end: /\{/,
                        excludeEnd: !0,
                        contains: [ hljs.inherit(hljs.TITLE_MODE, {
                            begin: IDENT_RE
                        }), {
                            className: "params",
                            begin: /\(/,
                            end: /\)/,
                            excludeBegin: !0,
                            excludeEnd: !0,
                            contains: PARAMS_CONTAINS
                        } ],
                        illegal: /\[|%/
                    }, {
                        begin: /\$[(.]/
                    }, hljs.METHOD_GUARD, {
                        className: "class",
                        beginKeywords: "class",
                        end: /[{;=]/,
                        excludeEnd: !0,
                        illegal: /[:"\[\]]/,
                        contains: [ {
                            beginKeywords: "extends"
                        }, hljs.UNDERSCORE_TITLE_MODE ]
                    }, {
                        beginKeywords: "constructor get set",
                        end: /\{/,
                        excludeEnd: !0
                    } ],
                    illegal: /#(?!!)/
                };
            };
        },
        "./node_modules/highlight.js/lib/languages/json.js": function(module, exports) {
            module.exports = function(hljs) {
                var LITERALS = {
                    literal: "true false null"
                }, ALLOWED_COMMENTS = [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE ], TYPES = [ hljs.QUOTE_STRING_MODE, hljs.C_NUMBER_MODE ], VALUE_CONTAINER = {
                    end: ",",
                    endsWithParent: !0,
                    excludeEnd: !0,
                    contains: TYPES,
                    keywords: LITERALS
                }, OBJECT = {
                    begin: "{",
                    end: "}",
                    contains: [ {
                        className: "attr",
                        begin: /"/,
                        end: /"/,
                        contains: [ hljs.BACKSLASH_ESCAPE ],
                        illegal: "\\n"
                    }, hljs.inherit(VALUE_CONTAINER, {
                        begin: /:/
                    }) ].concat(ALLOWED_COMMENTS),
                    illegal: "\\S"
                }, ARRAY = {
                    begin: "\\[",
                    end: "\\]",
                    contains: [ hljs.inherit(VALUE_CONTAINER) ],
                    illegal: "\\S"
                };
                return TYPES.push(OBJECT, ARRAY), ALLOWED_COMMENTS.forEach(function(rule) {
                    TYPES.push(rule);
                }), {
                    contains: TYPES,
                    keywords: LITERALS,
                    illegal: "\\S"
                };
            };
        },
        "./node_modules/highlight.js/lib/languages/less.js": function(module, exports) {
            module.exports = function(hljs) {
                var INTERP_IDENT_RE = "([\\w-]+|@{[\\w-]+})", RULES = [], VALUE = [], STRING_MODE = function(c) {
                    return {
                        className: "string",
                        begin: "~?" + c + ".*?" + c
                    };
                }, IDENT_MODE = function(name, begin, relevance) {
                    return {
                        className: name,
                        begin: begin,
                        relevance: relevance
                    };
                }, PARENS_MODE = {
                    begin: "\\(",
                    end: "\\)",
                    contains: VALUE,
                    relevance: 0
                };
                VALUE.push(hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, STRING_MODE("'"), STRING_MODE('"'), hljs.CSS_NUMBER_MODE, {
                    begin: "(url|data-uri)\\(",
                    starts: {
                        className: "string",
                        end: "[\\)\\n]",
                        excludeEnd: !0
                    }
                }, IDENT_MODE("number", "#[0-9A-Fa-f]+\\b"), PARENS_MODE, IDENT_MODE("variable", "@@?[\\w-]+", 10), IDENT_MODE("variable", "@{[\\w-]+}"), IDENT_MODE("built_in", "~?`[^`]*?`"), {
                    className: "attribute",
                    begin: "[\\w-]+\\s*:",
                    end: ":",
                    returnBegin: !0,
                    excludeEnd: !0
                }, {
                    className: "meta",
                    begin: "!important"
                });
                var VALUE_WITH_RULESETS = VALUE.concat({
                    begin: "{",
                    end: "}",
                    contains: RULES
                }), MIXIN_GUARD_MODE = {
                    beginKeywords: "when",
                    endsWithParent: !0,
                    contains: [ {
                        beginKeywords: "and not"
                    } ].concat(VALUE)
                }, RULE_MODE = {
                    begin: INTERP_IDENT_RE + "\\s*:",
                    returnBegin: !0,
                    end: "[;}]",
                    relevance: 0,
                    contains: [ {
                        className: "attribute",
                        begin: INTERP_IDENT_RE,
                        end: ":",
                        excludeEnd: !0,
                        starts: {
                            endsWithParent: !0,
                            illegal: "[<=$]",
                            relevance: 0,
                            contains: VALUE
                        }
                    } ]
                }, AT_RULE_MODE = {
                    className: "keyword",
                    begin: "@(import|media|charset|font-face|(-[a-z]+-)?keyframes|supports|document|namespace|page|viewport|host)\\b",
                    starts: {
                        end: "[;{}]",
                        returnEnd: !0,
                        contains: VALUE,
                        relevance: 0
                    }
                }, VAR_RULE_MODE = {
                    className: "variable",
                    variants: [ {
                        begin: "@[\\w-]+\\s*:",
                        relevance: 15
                    }, {
                        begin: "@[\\w-]+"
                    } ],
                    starts: {
                        end: "[;}]",
                        returnEnd: !0,
                        contains: VALUE_WITH_RULESETS
                    }
                }, SELECTOR_MODE = {
                    variants: [ {
                        begin: "[\\.#:&\\[>]",
                        end: "[;{}]"
                    }, {
                        begin: INTERP_IDENT_RE,
                        end: "{"
                    } ],
                    returnBegin: !0,
                    returnEnd: !0,
                    illegal: "[<='$\"]",
                    relevance: 0,
                    contains: [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, MIXIN_GUARD_MODE, IDENT_MODE("keyword", "all\\b"), IDENT_MODE("variable", "@{[\\w-]+}"), IDENT_MODE("selector-tag", INTERP_IDENT_RE + "%?", 0), IDENT_MODE("selector-id", "#" + INTERP_IDENT_RE), IDENT_MODE("selector-class", "\\." + INTERP_IDENT_RE, 0), IDENT_MODE("selector-tag", "&", 0), {
                        className: "selector-attr",
                        begin: "\\[",
                        end: "\\]"
                    }, {
                        className: "selector-pseudo",
                        begin: /:(:)?[a-zA-Z0-9\_\-\+\(\)"'.]+/
                    }, {
                        begin: "\\(",
                        end: "\\)",
                        contains: VALUE_WITH_RULESETS
                    }, {
                        begin: "!important"
                    } ]
                };
                return RULES.push(hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, AT_RULE_MODE, VAR_RULE_MODE, RULE_MODE, SELECTOR_MODE), 
                {
                    case_insensitive: !0,
                    illegal: "[=>'/<($\"]",
                    contains: RULES
                };
            };
        },
        "./node_modules/highlight.js/lib/languages/scss.js": function(module, exports) {
            module.exports = function(hljs) {
                var VARIABLE = {
                    className: "variable",
                    begin: "(\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\b"
                }, HEXCOLOR = {
                    className: "number",
                    begin: "#[0-9A-Fa-f]+"
                };
                hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.C_BLOCK_COMMENT_MODE;
                return {
                    case_insensitive: !0,
                    illegal: "[=/|']",
                    contains: [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, {
                        className: "selector-id",
                        begin: "\\#[A-Za-z0-9_-]+",
                        relevance: 0
                    }, {
                        className: "selector-class",
                        begin: "\\.[A-Za-z0-9_-]+",
                        relevance: 0
                    }, {
                        className: "selector-attr",
                        begin: "\\[",
                        end: "\\]",
                        illegal: "$"
                    }, {
                        className: "selector-tag",
                        begin: "\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\b",
                        relevance: 0
                    }, {
                        className: "selector-pseudo",
                        begin: ":(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)"
                    }, {
                        className: "selector-pseudo",
                        begin: "::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)"
                    }, VARIABLE, {
                        className: "attribute",
                        begin: "\\b(src|z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\b",
                        illegal: "[^\\s]"
                    }, {
                        begin: "\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\b"
                    }, {
                        begin: ":",
                        end: ";",
                        contains: [ VARIABLE, HEXCOLOR, hljs.CSS_NUMBER_MODE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, {
                            className: "meta",
                            begin: "!important"
                        } ]
                    }, {
                        begin: "@(page|font-face)",
                        lexemes: "@[a-z-]+",
                        keywords: "@page @font-face"
                    }, {
                        begin: "@",
                        end: "[{;]",
                        returnBegin: !0,
                        keywords: "and or not only",
                        contains: [ {
                            begin: "@[a-z-]+",
                            className: "keyword"
                        }, VARIABLE, hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, HEXCOLOR, hljs.CSS_NUMBER_MODE ]
                    } ]
                };
            };
        },
        "./node_modules/highlight.js/lib/languages/typescript.js": function(module, exports) {
            module.exports = function(hljs) {
                var KEYWORDS = {
                    keyword: "in if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const class public private protected get set super static implements enum export import declare type namespace abstract as from extends async await",
                    literal: "true false null undefined NaN Infinity",
                    built_in: "eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document any number boolean string void Promise"
                }, DECORATOR = {
                    className: "meta",
                    begin: "@[A-Za-z$_][0-9A-Za-z$_]*"
                }, ARGS = {
                    begin: "\\(",
                    end: /\)/,
                    keywords: KEYWORDS,
                    contains: [ "self", hljs.QUOTE_STRING_MODE, hljs.APOS_STRING_MODE, hljs.NUMBER_MODE ]
                }, PARAMS = {
                    className: "params",
                    begin: /\(/,
                    end: /\)/,
                    excludeBegin: !0,
                    excludeEnd: !0,
                    keywords: KEYWORDS,
                    contains: [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, DECORATOR, ARGS ]
                }, NUMBER = {
                    className: "number",
                    variants: [ {
                        begin: "\\b(0[bB][01]+)n?"
                    }, {
                        begin: "\\b(0[oO][0-7]+)n?"
                    }, {
                        begin: hljs.C_NUMBER_RE + "n?"
                    } ],
                    relevance: 0
                }, SUBST = {
                    className: "subst",
                    begin: "\\$\\{",
                    end: "\\}",
                    keywords: KEYWORDS,
                    contains: []
                }, HTML_TEMPLATE = {
                    begin: "html`",
                    end: "",
                    starts: {
                        end: "`",
                        returnEnd: !1,
                        contains: [ hljs.BACKSLASH_ESCAPE, SUBST ],
                        subLanguage: "xml"
                    }
                }, CSS_TEMPLATE = {
                    begin: "css`",
                    end: "",
                    starts: {
                        end: "`",
                        returnEnd: !1,
                        contains: [ hljs.BACKSLASH_ESCAPE, SUBST ],
                        subLanguage: "css"
                    }
                }, TEMPLATE_STRING = {
                    className: "string",
                    begin: "`",
                    end: "`",
                    contains: [ hljs.BACKSLASH_ESCAPE, SUBST ]
                };
                return SUBST.contains = [ hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, TEMPLATE_STRING, NUMBER, hljs.REGEXP_MODE ], 
                {
                    aliases: [ "ts" ],
                    keywords: KEYWORDS,
                    contains: [ {
                        className: "meta",
                        begin: /^\s*['"]use strict['"]/
                    }, hljs.APOS_STRING_MODE, hljs.QUOTE_STRING_MODE, HTML_TEMPLATE, CSS_TEMPLATE, TEMPLATE_STRING, hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, NUMBER, {
                        begin: "(" + hljs.RE_STARTERS_RE + "|\\b(case|return|throw)\\b)\\s*",
                        keywords: "return throw case",
                        contains: [ hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE, hljs.REGEXP_MODE, {
                            className: "function",
                            begin: "(\\(.*?\\)|" + hljs.IDENT_RE + ")\\s*=>",
                            returnBegin: !0,
                            end: "\\s*=>",
                            contains: [ {
                                className: "params",
                                variants: [ {
                                    begin: hljs.IDENT_RE
                                }, {
                                    begin: /\(\s*\)/
                                }, {
                                    begin: /\(/,
                                    end: /\)/,
                                    excludeBegin: !0,
                                    excludeEnd: !0,
                                    keywords: KEYWORDS,
                                    contains: [ "self", hljs.C_LINE_COMMENT_MODE, hljs.C_BLOCK_COMMENT_MODE ]
                                } ]
                            } ]
                        } ],
                        relevance: 0
                    }, {
                        className: "function",
                        beginKeywords: "function",
                        end: /[\{;]/,
                        excludeEnd: !0,
                        keywords: KEYWORDS,
                        contains: [ "self", hljs.inherit(hljs.TITLE_MODE, {
                            begin: "[A-Za-z$_][0-9A-Za-z$_]*"
                        }), PARAMS ],
                        illegal: /%/,
                        relevance: 0
                    }, {
                        beginKeywords: "constructor",
                        end: /[\{;]/,
                        excludeEnd: !0,
                        contains: [ "self", PARAMS ]
                    }, {
                        begin: /module\./,
                        keywords: {
                            built_in: "module"
                        },
                        relevance: 0
                    }, {
                        beginKeywords: "module",
                        end: /\{/,
                        excludeEnd: !0
                    }, {
                        beginKeywords: "interface",
                        end: /\{/,
                        excludeEnd: !0,
                        keywords: "interface extends"
                    }, {
                        begin: /\$[(.]/
                    }, {
                        begin: "\\." + hljs.IDENT_RE,
                        relevance: 0
                    }, DECORATOR, ARGS ]
                };
            };
        },
        "./node_modules/highlight.js/styles/tomorrow.css": function(module, exports, __webpack_require__) {
            var content = __webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/highlight.js/styles/tomorrow.css");
            "string" == typeof content && (content = [ [ module.i, content, "" ] ]);
            var options = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
            content.locals && (module.exports = content.locals);
        },
        "./node_modules/katex/dist/katex.js": function(module, exports, __webpack_require__) {
            !function(root, factory) {
                module.exports = factory();
            }("undefined" != typeof self && self, function() {
                return function(modules) {
                    var installedModules = {};
                    function __webpack_require__(moduleId) {
                        if (installedModules[moduleId]) return installedModules[moduleId].exports;
                        var module = installedModules[moduleId] = {
                            i: moduleId,
                            l: !1,
                            exports: {}
                        };
                        return modules[moduleId].call(module.exports, module, module.exports, __webpack_require__), 
                        module.l = !0, module.exports;
                    }
                    return __webpack_require__.m = modules, __webpack_require__.c = installedModules, 
                    __webpack_require__.d = function(exports, name, getter) {
                        __webpack_require__.o(exports, name) || Object.defineProperty(exports, name, {
                            enumerable: !0,
                            get: getter
                        });
                    }, __webpack_require__.r = function(exports) {
                        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(exports, Symbol.toStringTag, {
                            value: "Module"
                        }), Object.defineProperty(exports, "__esModule", {
                            value: !0
                        });
                    }, __webpack_require__.t = function(value, mode) {
                        if (1 & mode && (value = __webpack_require__(value)), 8 & mode) return value;
                        if (4 & mode && "object" == typeof value && value && value.__esModule) return value;
                        var ns = Object.create(null);
                        if (__webpack_require__.r(ns), Object.defineProperty(ns, "default", {
                            enumerable: !0,
                            value: value
                        }), 2 & mode && "string" != typeof value) for (var key in value) __webpack_require__.d(ns, key, function(key) {
                            return value[key];
                        }.bind(null, key));
                        return ns;
                    }, __webpack_require__.n = function(module) {
                        var getter = module && module.__esModule ? function() {
                            return module.default;
                        } : function() {
                            return module;
                        };
                        return __webpack_require__.d(getter, "a", getter), getter;
                    }, __webpack_require__.o = function(object, property) {
                        return Object.prototype.hasOwnProperty.call(object, property);
                    }, __webpack_require__.p = "", __webpack_require__(__webpack_require__.s = 1);
                }([ function(module, exports, __webpack_require__) {}, function(module, __webpack_exports__, __webpack_require__) {
                    "use strict";
                    __webpack_require__.r(__webpack_exports__);
                    __webpack_require__(0);
                    var SourceLocation = function() {
                        function SourceLocation(lexer, start, end) {
                            this.lexer = void 0, this.start = void 0, this.end = void 0, this.lexer = lexer, 
                            this.start = start, this.end = end;
                        }
                        return SourceLocation.range = function(first, second) {
                            return second ? first && first.loc && second.loc && first.loc.lexer === second.loc.lexer ? new SourceLocation(first.loc.lexer, first.loc.start, second.loc.end) : null : first && first.loc;
                        }, SourceLocation;
                    }(), Token_Token = function() {
                        function Token(text, loc) {
                            this.text = void 0, this.loc = void 0, this.text = text, this.loc = loc;
                        }
                        return Token.prototype.range = function(endToken, text) {
                            return new Token(text, SourceLocation.range(this, endToken));
                        }, Token;
                    }(), ParseError = function ParseError(message, token) {
                        this.position = void 0;
                        var start, error = "KaTeX parse error: " + message, loc = token && token.loc;
                        if (loc && loc.start <= loc.end) {
                            var input = loc.lexer.input;
                            start = loc.start;
                            var end = loc.end;
                            start === input.length ? error += " at end of input: " : error += " at position " + (start + 1) + ": ";
                            var underlined = input.slice(start, end).replace(/[^]/g, "$&̲");
                            error += (start > 15 ? "…" + input.slice(start - 15, start) : input.slice(0, start)) + underlined + (end + 15 < input.length ? input.slice(end, end + 15) + "…" : input.slice(end));
                        }
                        var self = new Error(error);
                        return self.name = "ParseError", self.__proto__ = ParseError.prototype, self.position = start, 
                        self;
                    };
                    ParseError.prototype.__proto__ = Error.prototype;
                    var src_ParseError = ParseError, uppercase = /([A-Z])/g, ESCAPE_LOOKUP = {
                        "&": "&amp;",
                        ">": "&gt;",
                        "<": "&lt;",
                        '"': "&quot;",
                        "'": "&#x27;"
                    }, ESCAPE_REGEX = /[&><"']/g;
                    var getBaseElem = function getBaseElem(group) {
                        return "ordgroup" === group.type ? 1 === group.body.length ? getBaseElem(group.body[0]) : group : "color" === group.type ? 1 === group.body.length ? getBaseElem(group.body[0]) : group : "font" === group.type ? getBaseElem(group.body) : group;
                    }, utils = {
                        contains: function(list, elem) {
                            return -1 !== list.indexOf(elem);
                        },
                        deflt: function(setting, defaultIfUndefined) {
                            return void 0 === setting ? defaultIfUndefined : setting;
                        },
                        escape: function(text) {
                            return String(text).replace(ESCAPE_REGEX, function(match) {
                                return ESCAPE_LOOKUP[match];
                            });
                        },
                        hyphenate: function(str) {
                            return str.replace(uppercase, "-$1").toLowerCase();
                        },
                        getBaseElem: getBaseElem,
                        isCharacterBox: function(group) {
                            var baseElem = getBaseElem(group);
                            return "mathord" === baseElem.type || "textord" === baseElem.type || "atom" === baseElem.type;
                        },
                        protocolFromUrl: function(url) {
                            var protocol = /^\s*([^\\/#]*?)(?::|&#0*58|&#x0*3a)/i.exec(url);
                            return null != protocol ? protocol[1] : "_relative";
                        }
                    }, Settings_Settings = function() {
                        function Settings(options) {
                            this.displayMode = void 0, this.output = void 0, this.leqno = void 0, this.fleqn = void 0, 
                            this.throwOnError = void 0, this.errorColor = void 0, this.macros = void 0, this.minRuleThickness = void 0, 
                            this.colorIsTextColor = void 0, this.strict = void 0, this.trust = void 0, this.maxSize = void 0, 
                            this.maxExpand = void 0, options = options || {}, this.displayMode = utils.deflt(options.displayMode, !1), 
                            this.output = utils.deflt(options.output, "htmlAndMathml"), this.leqno = utils.deflt(options.leqno, !1), 
                            this.fleqn = utils.deflt(options.fleqn, !1), this.throwOnError = utils.deflt(options.throwOnError, !0), 
                            this.errorColor = utils.deflt(options.errorColor, "#cc0000"), this.macros = options.macros || {}, 
                            this.minRuleThickness = Math.max(0, utils.deflt(options.minRuleThickness, 0)), this.colorIsTextColor = utils.deflt(options.colorIsTextColor, !1), 
                            this.strict = utils.deflt(options.strict, "warn"), this.trust = utils.deflt(options.trust, !1), 
                            this.maxSize = Math.max(0, utils.deflt(options.maxSize, 1 / 0)), this.maxExpand = Math.max(0, utils.deflt(options.maxExpand, 1e3));
                        }
                        var _proto = Settings.prototype;
                        return _proto.reportNonstrict = function(errorCode, errorMsg, token) {
                            var strict = this.strict;
                            if ("function" == typeof strict && (strict = strict(errorCode, errorMsg, token)), 
                            strict && "ignore" !== strict) {
                                if (!0 === strict || "error" === strict) throw new src_ParseError("LaTeX-incompatible input and strict mode is set to 'error': " + errorMsg + " [" + errorCode + "]", token);
                                "warn" === strict ? "undefined" != typeof console && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + errorMsg + " [" + errorCode + "]") : "undefined" != typeof console && console.warn("LaTeX-incompatible input and strict mode is set to unrecognized '" + strict + "': " + errorMsg + " [" + errorCode + "]");
                            }
                        }, _proto.useStrictBehavior = function(errorCode, errorMsg, token) {
                            var strict = this.strict;
                            if ("function" == typeof strict) try {
                                strict = strict(errorCode, errorMsg, token);
                            } catch (error) {
                                strict = "error";
                            }
                            return !(!strict || "ignore" === strict) && (!0 === strict || "error" === strict || ("warn" === strict ? ("undefined" != typeof console && console.warn("LaTeX-incompatible input and strict mode is set to 'warn': " + errorMsg + " [" + errorCode + "]"), 
                            !1) : ("undefined" != typeof console && console.warn("LaTeX-incompatible input and strict mode is set to unrecognized '" + strict + "': " + errorMsg + " [" + errorCode + "]"), 
                            !1)));
                        }, _proto.isTrusted = function(context) {
                            context.url && !context.protocol && (context.protocol = utils.protocolFromUrl(context.url));
                            var trust = "function" == typeof this.trust ? this.trust(context) : this.trust;
                            return Boolean(trust);
                        }, Settings;
                    }(), Style = function() {
                        function Style(id, size, cramped) {
                            this.id = void 0, this.size = void 0, this.cramped = void 0, this.id = id, this.size = size, 
                            this.cramped = cramped;
                        }
                        var _proto = Style.prototype;
                        return _proto.sup = function() {
                            return Style_styles[_sup[this.id]];
                        }, _proto.sub = function() {
                            return Style_styles[_sub[this.id]];
                        }, _proto.fracNum = function() {
                            return Style_styles[_fracNum[this.id]];
                        }, _proto.fracDen = function() {
                            return Style_styles[_fracDen[this.id]];
                        }, _proto.cramp = function() {
                            return Style_styles[_cramp[this.id]];
                        }, _proto.text = function() {
                            return Style_styles[_text[this.id]];
                        }, _proto.isTight = function() {
                            return this.size >= 2;
                        }, Style;
                    }(), Style_styles = [ new Style(0, 0, !1), new Style(1, 0, !0), new Style(2, 1, !1), new Style(3, 1, !0), new Style(4, 2, !1), new Style(5, 2, !0), new Style(6, 3, !1), new Style(7, 3, !0) ], _sup = [ 4, 5, 4, 5, 6, 7, 6, 7 ], _sub = [ 5, 5, 5, 5, 7, 7, 7, 7 ], _fracNum = [ 2, 3, 4, 5, 6, 7, 6, 7 ], _fracDen = [ 3, 3, 5, 5, 7, 7, 7, 7 ], _cramp = [ 1, 1, 3, 3, 5, 5, 7, 7 ], _text = [ 0, 1, 2, 3, 2, 3, 2, 3 ], src_Style = {
                        DISPLAY: Style_styles[0],
                        TEXT: Style_styles[2],
                        SCRIPT: Style_styles[4],
                        SCRIPTSCRIPT: Style_styles[6]
                    }, scriptData = [ {
                        name: "latin",
                        blocks: [ [ 256, 591 ], [ 768, 879 ] ]
                    }, {
                        name: "cyrillic",
                        blocks: [ [ 1024, 1279 ] ]
                    }, {
                        name: "brahmic",
                        blocks: [ [ 2304, 4255 ] ]
                    }, {
                        name: "georgian",
                        blocks: [ [ 4256, 4351 ] ]
                    }, {
                        name: "cjk",
                        blocks: [ [ 12288, 12543 ], [ 19968, 40879 ], [ 65280, 65376 ] ]
                    }, {
                        name: "hangul",
                        blocks: [ [ 44032, 55215 ] ]
                    } ];
                    var allBlocks = [];
                    function supportedCodepoint(codepoint) {
                        for (var i = 0; i < allBlocks.length; i += 2) if (codepoint >= allBlocks[i] && codepoint <= allBlocks[i + 1]) return !0;
                        return !1;
                    }
                    scriptData.forEach(function(s) {
                        return s.blocks.forEach(function(b) {
                            return allBlocks.push.apply(allBlocks, b);
                        });
                    });
                    var svgGeometry_path = {
                        doubleleftarrow: "M262 157\nl10-10c34-36 62.7-77 86-123 3.3-8 5-13.3 5-16 0-5.3-6.7-8-20-8-7.3\n 0-12.2.5-14.5 1.5-2.3 1-4.8 4.5-7.5 10.5-49.3 97.3-121.7 169.3-217 216-28\n 14-57.3 25-88 33-6.7 2-11 3.8-13 5.5-2 1.7-3 4.2-3 7.5s1 5.8 3 7.5\nc2 1.7 6.3 3.5 13 5.5 68 17.3 128.2 47.8 180.5 91.5 52.3 43.7 93.8 96.2 124.5\n 157.5 9.3 8 15.3 12.3 18 13h6c12-.7 18-4 18-10 0-2-1.7-7-5-15-23.3-46-52-87\n-86-123l-10-10h399738v-40H218c328 0 0 0 0 0l-10-8c-26.7-20-65.7-43-117-69 2.7\n-2 6-3.7 10-5 36.7-16 72.3-37.3 107-64l10-8h399782v-40z\nm8 0v40h399730v-40zm0 194v40h399730v-40z",
                        doublerightarrow: "M399738 392l\n-10 10c-34 36-62.7 77-86 123-3.3 8-5 13.3-5 16 0 5.3 6.7 8 20 8 7.3 0 12.2-.5\n 14.5-1.5 2.3-1 4.8-4.5 7.5-10.5 49.3-97.3 121.7-169.3 217-216 28-14 57.3-25 88\n-33 6.7-2 11-3.8 13-5.5 2-1.7 3-4.2 3-7.5s-1-5.8-3-7.5c-2-1.7-6.3-3.5-13-5.5-68\n-17.3-128.2-47.8-180.5-91.5-52.3-43.7-93.8-96.2-124.5-157.5-9.3-8-15.3-12.3-18\n-13h-6c-12 .7-18 4-18 10 0 2 1.7 7 5 15 23.3 46 52 87 86 123l10 10H0v40h399782\nc-328 0 0 0 0 0l10 8c26.7 20 65.7 43 117 69-2.7 2-6 3.7-10 5-36.7 16-72.3 37.3\n-107 64l-10 8H0v40zM0 157v40h399730v-40zm0 194v40h399730v-40z",
                        leftarrow: "M400000 241H110l3-3c68.7-52.7 113.7-120\n 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8\n-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247\nc-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208\n 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3\n 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202\n l-3-3h399890zM100 241v40h399900v-40z",
                        leftbrace: "M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117\n-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7\n 5-6 9-10 13-.7 1-7.3 1-20 1H6z",
                        leftbraceunder: "M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13\n 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688\n 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7\n-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z",
                        leftgroup: "M400000 80\nH435C64 80 168.3 229.4 21 260c-5.9 1.2-18 0-18 0-2 0-3-1-3-3v-38C76 61 257 0\n 435 0h399565z",
                        leftgroupunder: "M400000 262\nH435C64 262 168.3 112.6 21 82c-5.9-1.2-18 0-18 0-2 0-3 1-3 3v38c76 158 257 219\n 435 219h399565z",
                        leftharpoon: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3\n-3.3 10.2-9.5 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5\n-18.3 3-21-1.3-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7\n-196 228-6.7 4.7-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40z",
                        leftharpoonplus: "M0 267c.7 5.3 3 10 7 14h399993v-40H93c3.3-3.3 10.2-9.5\n 20.5-18.5s17.8-15.8 22.5-20.5c50.7-52 88-110.3 112-175 4-11.3 5-18.3 3-21-1.3\n-4-7.3-6-18-6-8 0-13 .7-15 2s-4.7 6.7-8 16c-42 98.7-107.3 174.7-196 228-6.7 4.7\n-10.7 8-12 10-1.3 2-2 5.7-2 11zm100-26v40h399900v-40zM0 435v40h400000v-40z\nm0 0v40h400000v-40z",
                        leftharpoondown: "M7 241c-4 4-6.333 8.667-7 14 0 5.333.667 9 2 11s5.333\n 5.333 12 10c90.667 54 156 130 196 228 3.333 10.667 6.333 16.333 9 17 2 .667 5\n 1 9 1h5c10.667 0 16.667-2 18-6 2-2.667 1-9.667-3-21-32-87.333-82.667-157.667\n-152-211l-3-3h399907v-40zM93 281 H400000 v-40L7 241z",
                        leftharpoondownplus: "M7 435c-4 4-6.3 8.7-7 14 0 5.3.7 9 2 11s5.3 5.3 12\n 10c90.7 54 156 130 196 228 3.3 10.7 6.3 16.3 9 17 2 .7 5 1 9 1h5c10.7 0 16.7\n-2 18-6 2-2.7 1-9.7-3-21-32-87.3-82.7-157.7-152-211l-3-3h399907v-40H7zm93 0\nv40h399900v-40zM0 241v40h399900v-40zm0 0v40h399900v-40z",
                        lefthook: "M400000 281 H103s-33-11.2-61-33.5S0 197.3 0 164s14.2-61.2 42.5\n-83.5C70.8 58.2 104 47 142 47 c16.7 0 25 6.7 25 20 0 12-8.7 18.7-26 20-40 3.3\n-68.7 15.7-86 37-10 12-15 25.3-15 40 0 22.7 9.8 40.7 29.5 54 19.7 13.3 43.5 21\n 71.5 23h399859zM103 281v-40h399897v40z",
                        leftlinesegment: "M40 281 V428 H0 V94 H40 V241 H400000 v40z\nM40 281 V428 H0 V94 H40 V241 H400000 v40z",
                        leftmapsto: "M40 281 V448H0V74H40V241H400000v40z\nM40 281 V448H0V74H40V241H400000v40z",
                        leftToFrom: "M0 147h400000v40H0zm0 214c68 40 115.7 95.7 143 167h22c15.3 0 23\n-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69-70-101l-7-8h399905v-40H95l7-8\nc28.7-32 52-65.7 70-101 10.7-23.3 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 265.3\n 68 321 0 361zm0-174v-40h399900v40zm100 154v40h399900v-40z",
                        longequal: "M0 50 h400000 v40H0z m0 194h40000v40H0z\nM0 50 h400000 v40H0z m0 194h40000v40H0z",
                        midbrace: "M200428 334\nc-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14\n-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7\n 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11\n 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z",
                        midbraceunder: "M199572 214\nc100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14\n 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3\n 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0\n-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z",
                        oiintSize1: "M512.6 71.6c272.6 0 320.3 106.8 320.3 178.2 0 70.8-47.7 177.6\n-320.3 177.6S193.1 320.6 193.1 249.8c0-71.4 46.9-178.2 319.5-178.2z\nm368.1 178.2c0-86.4-60.9-215.4-368.1-215.4-306.4 0-367.3 129-367.3 215.4 0 85.8\n60.9 214.8 367.3 214.8 307.2 0 368.1-129 368.1-214.8z",
                        oiintSize2: "M757.8 100.1c384.7 0 451.1 137.6 451.1 230 0 91.3-66.4 228.8\n-451.1 228.8-386.3 0-452.7-137.5-452.7-228.8 0-92.4 66.4-230 452.7-230z\nm502.4 230c0-111.2-82.4-277.2-502.4-277.2s-504 166-504 277.2\nc0 110 84 276 504 276s502.4-166 502.4-276z",
                        oiiintSize1: "M681.4 71.6c408.9 0 480.5 106.8 480.5 178.2 0 70.8-71.6 177.6\n-480.5 177.6S202.1 320.6 202.1 249.8c0-71.4 70.5-178.2 479.3-178.2z\nm525.8 178.2c0-86.4-86.8-215.4-525.7-215.4-437.9 0-524.7 129-524.7 215.4 0\n85.8 86.8 214.8 524.7 214.8 438.9 0 525.7-129 525.7-214.8z",
                        oiiintSize2: "M1021.2 53c603.6 0 707.8 165.8 707.8 277.2 0 110-104.2 275.8\n-707.8 275.8-606 0-710.2-165.8-710.2-275.8C311 218.8 415.2 53 1021.2 53z\nm770.4 277.1c0-131.2-126.4-327.6-770.5-327.6S248.4 198.9 248.4 330.1\nc0 130 128.8 326.4 772.7 326.4s770.5-196.4 770.5-326.4z",
                        rightarrow: "M0 241v40h399891c-47.3 35.3-84 78-110 128\n-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20\n 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7\n 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85\n-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n 151.7 139 205zm0 0v40h399900v-40z",
                        rightbrace: "M400000 542l\n-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5\ns-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1\nc124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z",
                        rightbraceunder: "M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3\n 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237\n-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z",
                        rightgroup: "M0 80h399565c371 0 266.7 149.4 414 180 5.9 1.2 18 0 18 0 2 0\n 3-1 3-3v-38c-76-158-257-219-435-219H0z",
                        rightgroupunder: "M0 262h399565c371 0 266.7-149.4 414-180 5.9-1.2 18 0 18\n 0 2 0 3 1 3 3v38c-76 158-257 219-435 219H0z",
                        rightharpoon: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3\n-3.7-15.3-11-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2\n-10.7 0-16.7 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58\n 69.2 92 94.5zm0 0v40h399900v-40z",
                        rightharpoonplus: "M0 241v40h399993c4.7-4.7 7-9.3 7-14 0-9.3-3.7-15.3-11\n-18-92.7-56.7-159-133.7-199-231-3.3-9.3-6-14.7-8-16-2-1.3-7-2-15-2-10.7 0-16.7\n 2-18 6-2 2.7-1 9.7 3 21 15.3 42 36.7 81.8 64 119.5 27.3 37.7 58 69.2 92 94.5z\nm0 0v40h399900v-40z m100 194v40h399900v-40zm0 0v40h399900v-40z",
                        rightharpoondown: "M399747 511c0 7.3 6.7 11 20 11 8 0 13-.8 15-2.5s4.7-6.8\n 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3 8.5-5.8 9.5\n-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3-64.7 57-92 95\n-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 241v40h399900v-40z",
                        rightharpoondownplus: "M399747 705c0 7.3 6.7 11 20 11 8 0 13-.8\n 15-2.5s4.7-6.8 8-15.5c40-94 99.3-166.3 178-217 13.3-8 20.3-12.3 21-13 5.3-3.3\n 8.5-5.8 9.5-7.5 1-1.7 1.5-5.2 1.5-10.5s-2.3-10.3-7-15H0v40h399908c-34 25.3\n-64.7 57-92 95-27.3 38-48.7 77.7-64 119-3.3 8.7-5 14-5 16zM0 435v40h399900v-40z\nm0-194v40h400000v-40zm0 0v40h400000v-40z",
                        righthook: "M399859 241c-764 0 0 0 0 0 40-3.3 68.7-15.7 86-37 10-12 15-25.3\n 15-40 0-22.7-9.8-40.7-29.5-54-19.7-13.3-43.5-21-71.5-23-17.3-1.3-26-8-26-20 0\n-13.3 8.7-20 26-20 38 0 71 11.2 99 33.5 0 0 7 5.6 21 16.7 14 11.2 21 33.5 21\n 66.8s-14 61.2-42 83.5c-28 22.3-61 33.5-99 33.5L0 241z M0 281v-40h399859v40z",
                        rightlinesegment: "M399960 241 V94 h40 V428 h-40 V281 H0 v-40z\nM399960 241 V94 h40 V428 h-40 V281 H0 v-40z",
                        rightToFrom: "M400000 167c-70.7-42-118-97.7-142-167h-23c-15.3 0-23 .3-23\n 1 0 1.3 5.3 13.7 16 37 18 35.3 41.3 69 70 101l7 8H0v40h399905l-7 8c-28.7 32\n-52 65.7-70 101-10.7 23.3-16 35.7-16 37 0 .7 7.7 1 23 1h23c24-69.3 71.3-125 142\n-167z M100 147v40h399900v-40zM0 341v40h399900v-40z",
                        twoheadleftarrow: "M0 167c68 40\n 115.7 95.7 143 167h22c15.3 0 23-.3 23-1 0-1.3-5.3-13.7-16-37-18-35.3-41.3-69\n-70-101l-7-8h125l9 7c50.7 39.3 85 86 103 140h46c0-4.7-6.3-18.7-19-42-18-35.3\n-40-67.3-66-96l-9-9h399716v-40H284l9-9c26-28.7 48-60.7 66-96 12.7-23.333 19\n-37.333 19-42h-46c-18 54-52.3 100.7-103 140l-9 7H95l7-8c28.7-32 52-65.7 70-101\n 10.7-23.333 16-35.7 16-37 0-.7-7.7-1-23-1h-22C115.7 71.3 68 127 0 167z",
                        twoheadrightarrow: "M400000 167\nc-68-40-115.7-95.7-143-167h-22c-15.3 0-23 .3-23 1 0 1.3 5.3 13.7 16 37 18 35.3\n 41.3 69 70 101l7 8h-125l-9-7c-50.7-39.3-85-86-103-140h-46c0 4.7 6.3 18.7 19 42\n 18 35.3 40 67.3 66 96l9 9H0v40h399716l-9 9c-26 28.7-48 60.7-66 96-12.7 23.333\n-19 37.333-19 42h46c18-54 52.3-100.7 103-140l9-7h125l-7 8c-28.7 32-52 65.7-70\n 101-10.7 23.333-16 35.7-16 37 0 .7 7.7 1 23 1h22c27.3-71.3 75-127 143-167z",
                        tilde1: "M200 55.538c-77 0-168 73.953-177 73.953-3 0-7\n-2.175-9-5.437L2 97c-1-2-2-4-2-6 0-4 2-7 5-9l20-12C116 12 171 0 207 0c86 0\n 114 68 191 68 78 0 168-68 177-68 4 0 7 2 9 5l12 19c1 2.175 2 4.35 2 6.525 0\n 4.35-2 7.613-5 9.788l-19 13.05c-92 63.077-116.937 75.308-183 76.128\n-68.267.847-113-73.952-191-73.952z",
                        tilde2: "M344 55.266c-142 0-300.638 81.316-311.5 86.418\n-8.01 3.762-22.5 10.91-23.5 5.562L1 120c-1-2-1-3-1-4 0-5 3-9 8-10l18.4-9C160.9\n 31.9 283 0 358 0c148 0 188 122 331 122s314-97 326-97c4 0 8 2 10 7l7 21.114\nc1 2.14 1 3.21 1 4.28 0 5.347-3 9.626-7 10.696l-22.3 12.622C852.6 158.372 751\n 181.476 676 181.476c-149 0-189-126.21-332-126.21z",
                        tilde3: "M786 59C457 59 32 175.242 13 175.242c-6 0-10-3.457\n-11-10.37L.15 138c-1-7 3-12 10-13l19.2-6.4C378.4 40.7 634.3 0 804.3 0c337 0\n 411.8 157 746.8 157 328 0 754-112 773-112 5 0 10 3 11 9l1 14.075c1 8.066-.697\n 16.595-6.697 17.492l-21.052 7.31c-367.9 98.146-609.15 122.696-778.15 122.696\n -338 0-409-156.573-744-156.573z",
                        tilde4: "M786 58C457 58 32 177.487 13 177.487c-6 0-10-3.345\n-11-10.035L.15 143c-1-7 3-12 10-13l22-6.7C381.2 35 637.15 0 807.15 0c337 0 409\n 177 744 177 328 0 754-127 773-127 5 0 10 3 11 9l1 14.794c1 7.805-3 13.38-9\n 14.495l-20.7 5.574c-366.85 99.79-607.3 139.372-776.3 139.372-338 0-409\n -175.236-744-175.236z",
                        vec: "M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 5\n3.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 11\n10.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63\n-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1\n-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59\nH213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359\nc-16-25.333-24-45-24-59z",
                        widehat1: "M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22\nc-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z",
                        widehat2: "M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
                        widehat3: "M1181 0h2l1171 236c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 280h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
                        widehat4: "M1181 0h2l1171 296c6 0 10 5 10 11l-2 23c-1 6-5 10\n-11 10h-1L1182 67 15 340h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z",
                        widecheck1: "M529,159h5l519,-115c5,-1,9,-5,9,-10c0,-1,-1,-2,-1,-3l-4,-22c-1,\n-5,-5,-9,-11,-9h-2l-512,92l-513,-92h-2c-5,0,-9,4,-11,9l-5,22c-1,6,2,12,8,13z",
                        widecheck2: "M1181,220h2l1171,-176c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,153l-1167,-153h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
                        widecheck3: "M1181,280h2l1171,-236c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,213l-1167,-213h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
                        widecheck4: "M1181,340h2l1171,-296c6,0,10,-5,10,-11l-2,-23c-1,-6,-5,-10,\n-11,-10h-1l-1168,273l-1167,-273h-1c-6,0,-10,4,-11,10l-2,23c-1,6,4,11,10,11z",
                        baraboveleftarrow: "M400000 620h-399890l3 -3c68.7 -52.7 113.7 -120 135 -202\nc4 -14.7 6 -23 6 -25c0 -7.3 -7 -11 -21 -11c-8 0 -13.2 0.8 -15.5 2.5\nc-2.3 1.7 -4.2 5.8 -5.5 12.5c-1.3 4.7 -2.7 10.3 -4 17c-12 48.7 -34.8 92 -68.5 130\ns-74.2 66.3 -121.5 85c-10 4 -16 7.7 -18 11c0 8.7 6 14.3 18 17c47.3 18.7 87.8 47\n121.5 85s56.5 81.3 68.5 130c0.7 2 1.3 5 2 9s1.2 6.7 1.5 8c0.3 1.3 1 3.3 2 6\ns2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21 -3.7 21 -11\nc0 -2 -2 -10.3 -6 -25c-20 -79.3 -65 -146.7 -135 -202l-3 -3h399890z\nM100 620v40h399900v-40z M0 241v40h399900v-40zM0 241v40h399900v-40z",
                        rightarrowabovebar: "M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32\n-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0\n13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39\n-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5\n-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5\n-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67\n151.7 139 205zm96 379h399894v40H0zm0 0h399904v40H0z",
                        baraboveshortleftharpoon: "M507,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17\nc2,0.7,5,1,9,1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21\nc-32,-87.3,-82.7,-157.7,-152,-211c0,0,-3,-3,-3,-3l399351,0l0,-40\nc-398570,0,-399437,0,-399437,0z M593 435 v40 H399500 v-40z\nM0 281 v-40 H399908 v40z M0 281 v-40 H399908 v40z",
                        rightharpoonaboveshortbar: "M0,241 l0,40c399126,0,399993,0,399993,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM0 241 v40 H399908 v-40z M0 475 v-40 H399500 v40z M0 475 v-40 H399500 v40z",
                        shortbaraboveleftharpoon: "M7,435c-4,4,-6.3,8.7,-7,14c0,5.3,0.7,9,2,11\nc1.3,2,5.3,5.3,12,10c90.7,54,156,130,196,228c3.3,10.7,6.3,16.3,9,17c2,0.7,5,1,9,\n1c0,0,5,0,5,0c10.7,0,16.7,-2,18,-6c2,-2.7,1,-9.7,-3,-21c-32,-87.3,-82.7,-157.7,\n-152,-211c0,0,-3,-3,-3,-3l399907,0l0,-40c-399126,0,-399993,0,-399993,0z\nM93 435 v40 H400000 v-40z M500 241 v40 H400000 v-40z M500 241 v40 H400000 v-40z",
                        shortrightharpoonabovebar: "M53,241l0,40c398570,0,399437,0,399437,0\nc4.7,-4.7,7,-9.3,7,-14c0,-9.3,-3.7,-15.3,-11,-18c-92.7,-56.7,-159,-133.7,-199,\n-231c-3.3,-9.3,-6,-14.7,-8,-16c-2,-1.3,-7,-2,-15,-2c-10.7,0,-16.7,2,-18,6\nc-2,2.7,-1,9.7,3,21c15.3,42,36.7,81.8,64,119.5c27.3,37.7,58,69.2,92,94.5z\nM500 241 v40 H399408 v-40z M500 435 v40 H400000 v-40z"
                    }, tree_DocumentFragment = function() {
                        function DocumentFragment(children) {
                            this.children = void 0, this.classes = void 0, this.height = void 0, this.depth = void 0, 
                            this.maxFontSize = void 0, this.style = void 0, this.children = children, this.classes = [], 
                            this.height = 0, this.depth = 0, this.maxFontSize = 0, this.style = {};
                        }
                        var _proto = DocumentFragment.prototype;
                        return _proto.hasClass = function(className) {
                            return utils.contains(this.classes, className);
                        }, _proto.toNode = function() {
                            for (var frag = document.createDocumentFragment(), i = 0; i < this.children.length; i++) frag.appendChild(this.children[i].toNode());
                            return frag;
                        }, _proto.toMarkup = function() {
                            for (var markup = "", i = 0; i < this.children.length; i++) markup += this.children[i].toMarkup();
                            return markup;
                        }, _proto.toText = function() {
                            var toText = function(child) {
                                return child.toText();
                            };
                            return this.children.map(toText).join("");
                        }, DocumentFragment;
                    }(), createClass = function(classes) {
                        return classes.filter(function(cls) {
                            return cls;
                        }).join(" ");
                    }, initNode = function(classes, options, style) {
                        if (this.classes = classes || [], this.attributes = {}, this.height = 0, this.depth = 0, 
                        this.maxFontSize = 0, this.style = style || {}, options) {
                            options.style.isTight() && this.classes.push("mtight");
                            var color = options.getColor();
                            color && (this.style.color = color);
                        }
                    }, _toNode = function(tagName) {
                        var node = document.createElement(tagName);
                        for (var style in node.className = createClass(this.classes), this.style) this.style.hasOwnProperty(style) && (node.style[style] = this.style[style]);
                        for (var attr in this.attributes) this.attributes.hasOwnProperty(attr) && node.setAttribute(attr, this.attributes[attr]);
                        for (var i = 0; i < this.children.length; i++) node.appendChild(this.children[i].toNode());
                        return node;
                    }, _toMarkup = function(tagName) {
                        var markup = "<" + tagName;
                        this.classes.length && (markup += ' class="' + utils.escape(createClass(this.classes)) + '"');
                        var styles = "";
                        for (var style in this.style) this.style.hasOwnProperty(style) && (styles += utils.hyphenate(style) + ":" + this.style[style] + ";");
                        for (var attr in styles && (markup += ' style="' + utils.escape(styles) + '"'), 
                        this.attributes) this.attributes.hasOwnProperty(attr) && (markup += " " + attr + '="' + utils.escape(this.attributes[attr]) + '"');
                        markup += ">";
                        for (var i = 0; i < this.children.length; i++) markup += this.children[i].toMarkup();
                        return markup += "</" + tagName + ">";
                    }, domTree_Span = function() {
                        function Span(classes, children, options, style) {
                            this.children = void 0, this.attributes = void 0, this.classes = void 0, this.height = void 0, 
                            this.depth = void 0, this.width = void 0, this.maxFontSize = void 0, this.style = void 0, 
                            initNode.call(this, classes, options, style), this.children = children || [];
                        }
                        var _proto = Span.prototype;
                        return _proto.setAttribute = function(attribute, value) {
                            this.attributes[attribute] = value;
                        }, _proto.hasClass = function(className) {
                            return utils.contains(this.classes, className);
                        }, _proto.toNode = function() {
                            return _toNode.call(this, "span");
                        }, _proto.toMarkup = function() {
                            return _toMarkup.call(this, "span");
                        }, Span;
                    }(), domTree_Anchor = function() {
                        function Anchor(href, classes, children, options) {
                            this.children = void 0, this.attributes = void 0, this.classes = void 0, this.height = void 0, 
                            this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, initNode.call(this, classes, options), 
                            this.children = children || [], this.setAttribute("href", href);
                        }
                        var _proto2 = Anchor.prototype;
                        return _proto2.setAttribute = function(attribute, value) {
                            this.attributes[attribute] = value;
                        }, _proto2.hasClass = function(className) {
                            return utils.contains(this.classes, className);
                        }, _proto2.toNode = function() {
                            return _toNode.call(this, "a");
                        }, _proto2.toMarkup = function() {
                            return _toMarkup.call(this, "a");
                        }, Anchor;
                    }(), domTree_Img = function() {
                        function Img(src, alt, style) {
                            this.src = void 0, this.alt = void 0, this.classes = void 0, this.height = void 0, 
                            this.depth = void 0, this.maxFontSize = void 0, this.style = void 0, this.alt = alt, 
                            this.src = src, this.classes = [ "mord" ], this.style = style;
                        }
                        var _proto3 = Img.prototype;
                        return _proto3.hasClass = function(className) {
                            return utils.contains(this.classes, className);
                        }, _proto3.toNode = function() {
                            var node = document.createElement("img");
                            for (var style in node.src = this.src, node.alt = this.alt, node.className = "mord", 
                            this.style) this.style.hasOwnProperty(style) && (node.style[style] = this.style[style]);
                            return node;
                        }, _proto3.toMarkup = function() {
                            var markup = "<img  src='" + this.src + " 'alt='" + this.alt + "' ", styles = "";
                            for (var style in this.style) this.style.hasOwnProperty(style) && (styles += utils.hyphenate(style) + ":" + this.style[style] + ";");
                            return styles && (markup += ' style="' + utils.escape(styles) + '"'), markup += "'/>";
                        }, Img;
                    }(), iCombinations = {
                        "î": "ı̂",
                        "ï": "ı̈",
                        "í": "ı́",
                        "ì": "ı̀"
                    }, domTree_SymbolNode = function() {
                        function SymbolNode(text, height, depth, italic, skew, width, classes, style) {
                            this.text = void 0, this.height = void 0, this.depth = void 0, this.italic = void 0, 
                            this.skew = void 0, this.width = void 0, this.maxFontSize = void 0, this.classes = void 0, 
                            this.style = void 0, this.text = text, this.height = height || 0, this.depth = depth || 0, 
                            this.italic = italic || 0, this.skew = skew || 0, this.width = width || 0, this.classes = classes || [], 
                            this.style = style || {}, this.maxFontSize = 0;
                            var script = function(codepoint) {
                                for (var i = 0; i < scriptData.length; i++) for (var script = scriptData[i], _i = 0; _i < script.blocks.length; _i++) {
                                    var block = script.blocks[_i];
                                    if (codepoint >= block[0] && codepoint <= block[1]) return script.name;
                                }
                                return null;
                            }(this.text.charCodeAt(0));
                            script && this.classes.push(script + "_fallback"), /[îïíì]/.test(this.text) && (this.text = iCombinations[this.text]);
                        }
                        var _proto4 = SymbolNode.prototype;
                        return _proto4.hasClass = function(className) {
                            return utils.contains(this.classes, className);
                        }, _proto4.toNode = function() {
                            var node = document.createTextNode(this.text), span = null;
                            for (var style in this.italic > 0 && ((span = document.createElement("span")).style.marginRight = this.italic + "em"), 
                            this.classes.length > 0 && ((span = span || document.createElement("span")).className = createClass(this.classes)), 
                            this.style) this.style.hasOwnProperty(style) && ((span = span || document.createElement("span")).style[style] = this.style[style]);
                            return span ? (span.appendChild(node), span) : node;
                        }, _proto4.toMarkup = function() {
                            var needsSpan = !1, markup = "<span";
                            this.classes.length && (needsSpan = !0, markup += ' class="', markup += utils.escape(createClass(this.classes)), 
                            markup += '"');
                            var styles = "";
                            for (var style in this.italic > 0 && (styles += "margin-right:" + this.italic + "em;"), 
                            this.style) this.style.hasOwnProperty(style) && (styles += utils.hyphenate(style) + ":" + this.style[style] + ";");
                            styles && (needsSpan = !0, markup += ' style="' + utils.escape(styles) + '"');
                            var escaped = utils.escape(this.text);
                            return needsSpan ? (markup += ">", markup += escaped, markup += "</span>") : escaped;
                        }, SymbolNode;
                    }(), SvgNode = function() {
                        function SvgNode(children, attributes) {
                            this.children = void 0, this.attributes = void 0, this.children = children || [], 
                            this.attributes = attributes || {};
                        }
                        var _proto5 = SvgNode.prototype;
                        return _proto5.toNode = function() {
                            var node = document.createElementNS("http://www.w3.org/2000/svg", "svg");
                            for (var attr in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, attr) && node.setAttribute(attr, this.attributes[attr]);
                            for (var i = 0; i < this.children.length; i++) node.appendChild(this.children[i].toNode());
                            return node;
                        }, _proto5.toMarkup = function() {
                            var markup = "<svg";
                            for (var attr in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, attr) && (markup += " " + attr + "='" + this.attributes[attr] + "'");
                            markup += ">";
                            for (var i = 0; i < this.children.length; i++) markup += this.children[i].toMarkup();
                            return markup += "</svg>";
                        }, SvgNode;
                    }(), domTree_PathNode = function() {
                        function PathNode(pathName, alternate) {
                            this.pathName = void 0, this.alternate = void 0, this.pathName = pathName, this.alternate = alternate;
                        }
                        var _proto6 = PathNode.prototype;
                        return _proto6.toNode = function() {
                            var node = document.createElementNS("http://www.w3.org/2000/svg", "path");
                            return this.alternate ? node.setAttribute("d", this.alternate) : node.setAttribute("d", svgGeometry_path[this.pathName]), 
                            node;
                        }, _proto6.toMarkup = function() {
                            return this.alternate ? "<path d='" + this.alternate + "'/>" : "<path d='" + svgGeometry_path[this.pathName] + "'/>";
                        }, PathNode;
                    }(), LineNode = function() {
                        function LineNode(attributes) {
                            this.attributes = void 0, this.attributes = attributes || {};
                        }
                        var _proto7 = LineNode.prototype;
                        return _proto7.toNode = function() {
                            var node = document.createElementNS("http://www.w3.org/2000/svg", "line");
                            for (var attr in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, attr) && node.setAttribute(attr, this.attributes[attr]);
                            return node;
                        }, _proto7.toMarkup = function() {
                            var markup = "<line";
                            for (var attr in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, attr) && (markup += " " + attr + "='" + this.attributes[attr] + "'");
                            return markup += "/>";
                        }, LineNode;
                    }();
                    function assertSymbolDomNode(group) {
                        if (group instanceof domTree_SymbolNode) return group;
                        throw new Error("Expected symbolNode but got " + String(group) + ".");
                    }
                    var fontMetricsData = {
                        "AMS-Regular": {
                            65: [ 0, .68889, 0, 0, .72222 ],
                            66: [ 0, .68889, 0, 0, .66667 ],
                            67: [ 0, .68889, 0, 0, .72222 ],
                            68: [ 0, .68889, 0, 0, .72222 ],
                            69: [ 0, .68889, 0, 0, .66667 ],
                            70: [ 0, .68889, 0, 0, .61111 ],
                            71: [ 0, .68889, 0, 0, .77778 ],
                            72: [ 0, .68889, 0, 0, .77778 ],
                            73: [ 0, .68889, 0, 0, .38889 ],
                            74: [ .16667, .68889, 0, 0, .5 ],
                            75: [ 0, .68889, 0, 0, .77778 ],
                            76: [ 0, .68889, 0, 0, .66667 ],
                            77: [ 0, .68889, 0, 0, .94445 ],
                            78: [ 0, .68889, 0, 0, .72222 ],
                            79: [ .16667, .68889, 0, 0, .77778 ],
                            80: [ 0, .68889, 0, 0, .61111 ],
                            81: [ .16667, .68889, 0, 0, .77778 ],
                            82: [ 0, .68889, 0, 0, .72222 ],
                            83: [ 0, .68889, 0, 0, .55556 ],
                            84: [ 0, .68889, 0, 0, .66667 ],
                            85: [ 0, .68889, 0, 0, .72222 ],
                            86: [ 0, .68889, 0, 0, .72222 ],
                            87: [ 0, .68889, 0, 0, 1 ],
                            88: [ 0, .68889, 0, 0, .72222 ],
                            89: [ 0, .68889, 0, 0, .72222 ],
                            90: [ 0, .68889, 0, 0, .66667 ],
                            107: [ 0, .68889, 0, 0, .55556 ],
                            165: [ 0, .675, .025, 0, .75 ],
                            174: [ .15559, .69224, 0, 0, .94666 ],
                            240: [ 0, .68889, 0, 0, .55556 ],
                            295: [ 0, .68889, 0, 0, .54028 ],
                            710: [ 0, .825, 0, 0, 2.33334 ],
                            732: [ 0, .9, 0, 0, 2.33334 ],
                            770: [ 0, .825, 0, 0, 2.33334 ],
                            771: [ 0, .9, 0, 0, 2.33334 ],
                            989: [ .08167, .58167, 0, 0, .77778 ],
                            1008: [ 0, .43056, .04028, 0, .66667 ],
                            8245: [ 0, .54986, 0, 0, .275 ],
                            8463: [ 0, .68889, 0, 0, .54028 ],
                            8487: [ 0, .68889, 0, 0, .72222 ],
                            8498: [ 0, .68889, 0, 0, .55556 ],
                            8502: [ 0, .68889, 0, 0, .66667 ],
                            8503: [ 0, .68889, 0, 0, .44445 ],
                            8504: [ 0, .68889, 0, 0, .66667 ],
                            8513: [ 0, .68889, 0, 0, .63889 ],
                            8592: [ -.03598, .46402, 0, 0, .5 ],
                            8594: [ -.03598, .46402, 0, 0, .5 ],
                            8602: [ -.13313, .36687, 0, 0, 1 ],
                            8603: [ -.13313, .36687, 0, 0, 1 ],
                            8606: [ .01354, .52239, 0, 0, 1 ],
                            8608: [ .01354, .52239, 0, 0, 1 ],
                            8610: [ .01354, .52239, 0, 0, 1.11111 ],
                            8611: [ .01354, .52239, 0, 0, 1.11111 ],
                            8619: [ 0, .54986, 0, 0, 1 ],
                            8620: [ 0, .54986, 0, 0, 1 ],
                            8621: [ -.13313, .37788, 0, 0, 1.38889 ],
                            8622: [ -.13313, .36687, 0, 0, 1 ],
                            8624: [ 0, .69224, 0, 0, .5 ],
                            8625: [ 0, .69224, 0, 0, .5 ],
                            8630: [ 0, .43056, 0, 0, 1 ],
                            8631: [ 0, .43056, 0, 0, 1 ],
                            8634: [ .08198, .58198, 0, 0, .77778 ],
                            8635: [ .08198, .58198, 0, 0, .77778 ],
                            8638: [ .19444, .69224, 0, 0, .41667 ],
                            8639: [ .19444, .69224, 0, 0, .41667 ],
                            8642: [ .19444, .69224, 0, 0, .41667 ],
                            8643: [ .19444, .69224, 0, 0, .41667 ],
                            8644: [ .1808, .675, 0, 0, 1 ],
                            8646: [ .1808, .675, 0, 0, 1 ],
                            8647: [ .1808, .675, 0, 0, 1 ],
                            8648: [ .19444, .69224, 0, 0, .83334 ],
                            8649: [ .1808, .675, 0, 0, 1 ],
                            8650: [ .19444, .69224, 0, 0, .83334 ],
                            8651: [ .01354, .52239, 0, 0, 1 ],
                            8652: [ .01354, .52239, 0, 0, 1 ],
                            8653: [ -.13313, .36687, 0, 0, 1 ],
                            8654: [ -.13313, .36687, 0, 0, 1 ],
                            8655: [ -.13313, .36687, 0, 0, 1 ],
                            8666: [ .13667, .63667, 0, 0, 1 ],
                            8667: [ .13667, .63667, 0, 0, 1 ],
                            8669: [ -.13313, .37788, 0, 0, 1 ],
                            8672: [ -.064, .437, 0, 0, 1.334 ],
                            8674: [ -.064, .437, 0, 0, 1.334 ],
                            8705: [ 0, .825, 0, 0, .5 ],
                            8708: [ 0, .68889, 0, 0, .55556 ],
                            8709: [ .08167, .58167, 0, 0, .77778 ],
                            8717: [ 0, .43056, 0, 0, .42917 ],
                            8722: [ -.03598, .46402, 0, 0, .5 ],
                            8724: [ .08198, .69224, 0, 0, .77778 ],
                            8726: [ .08167, .58167, 0, 0, .77778 ],
                            8733: [ 0, .69224, 0, 0, .77778 ],
                            8736: [ 0, .69224, 0, 0, .72222 ],
                            8737: [ 0, .69224, 0, 0, .72222 ],
                            8738: [ .03517, .52239, 0, 0, .72222 ],
                            8739: [ .08167, .58167, 0, 0, .22222 ],
                            8740: [ .25142, .74111, 0, 0, .27778 ],
                            8741: [ .08167, .58167, 0, 0, .38889 ],
                            8742: [ .25142, .74111, 0, 0, .5 ],
                            8756: [ 0, .69224, 0, 0, .66667 ],
                            8757: [ 0, .69224, 0, 0, .66667 ],
                            8764: [ -.13313, .36687, 0, 0, .77778 ],
                            8765: [ -.13313, .37788, 0, 0, .77778 ],
                            8769: [ -.13313, .36687, 0, 0, .77778 ],
                            8770: [ -.03625, .46375, 0, 0, .77778 ],
                            8774: [ .30274, .79383, 0, 0, .77778 ],
                            8776: [ -.01688, .48312, 0, 0, .77778 ],
                            8778: [ .08167, .58167, 0, 0, .77778 ],
                            8782: [ .06062, .54986, 0, 0, .77778 ],
                            8783: [ .06062, .54986, 0, 0, .77778 ],
                            8785: [ .08198, .58198, 0, 0, .77778 ],
                            8786: [ .08198, .58198, 0, 0, .77778 ],
                            8787: [ .08198, .58198, 0, 0, .77778 ],
                            8790: [ 0, .69224, 0, 0, .77778 ],
                            8791: [ .22958, .72958, 0, 0, .77778 ],
                            8796: [ .08198, .91667, 0, 0, .77778 ],
                            8806: [ .25583, .75583, 0, 0, .77778 ],
                            8807: [ .25583, .75583, 0, 0, .77778 ],
                            8808: [ .25142, .75726, 0, 0, .77778 ],
                            8809: [ .25142, .75726, 0, 0, .77778 ],
                            8812: [ .25583, .75583, 0, 0, .5 ],
                            8814: [ .20576, .70576, 0, 0, .77778 ],
                            8815: [ .20576, .70576, 0, 0, .77778 ],
                            8816: [ .30274, .79383, 0, 0, .77778 ],
                            8817: [ .30274, .79383, 0, 0, .77778 ],
                            8818: [ .22958, .72958, 0, 0, .77778 ],
                            8819: [ .22958, .72958, 0, 0, .77778 ],
                            8822: [ .1808, .675, 0, 0, .77778 ],
                            8823: [ .1808, .675, 0, 0, .77778 ],
                            8828: [ .13667, .63667, 0, 0, .77778 ],
                            8829: [ .13667, .63667, 0, 0, .77778 ],
                            8830: [ .22958, .72958, 0, 0, .77778 ],
                            8831: [ .22958, .72958, 0, 0, .77778 ],
                            8832: [ .20576, .70576, 0, 0, .77778 ],
                            8833: [ .20576, .70576, 0, 0, .77778 ],
                            8840: [ .30274, .79383, 0, 0, .77778 ],
                            8841: [ .30274, .79383, 0, 0, .77778 ],
                            8842: [ .13597, .63597, 0, 0, .77778 ],
                            8843: [ .13597, .63597, 0, 0, .77778 ],
                            8847: [ .03517, .54986, 0, 0, .77778 ],
                            8848: [ .03517, .54986, 0, 0, .77778 ],
                            8858: [ .08198, .58198, 0, 0, .77778 ],
                            8859: [ .08198, .58198, 0, 0, .77778 ],
                            8861: [ .08198, .58198, 0, 0, .77778 ],
                            8862: [ 0, .675, 0, 0, .77778 ],
                            8863: [ 0, .675, 0, 0, .77778 ],
                            8864: [ 0, .675, 0, 0, .77778 ],
                            8865: [ 0, .675, 0, 0, .77778 ],
                            8872: [ 0, .69224, 0, 0, .61111 ],
                            8873: [ 0, .69224, 0, 0, .72222 ],
                            8874: [ 0, .69224, 0, 0, .88889 ],
                            8876: [ 0, .68889, 0, 0, .61111 ],
                            8877: [ 0, .68889, 0, 0, .61111 ],
                            8878: [ 0, .68889, 0, 0, .72222 ],
                            8879: [ 0, .68889, 0, 0, .72222 ],
                            8882: [ .03517, .54986, 0, 0, .77778 ],
                            8883: [ .03517, .54986, 0, 0, .77778 ],
                            8884: [ .13667, .63667, 0, 0, .77778 ],
                            8885: [ .13667, .63667, 0, 0, .77778 ],
                            8888: [ 0, .54986, 0, 0, 1.11111 ],
                            8890: [ .19444, .43056, 0, 0, .55556 ],
                            8891: [ .19444, .69224, 0, 0, .61111 ],
                            8892: [ .19444, .69224, 0, 0, .61111 ],
                            8901: [ 0, .54986, 0, 0, .27778 ],
                            8903: [ .08167, .58167, 0, 0, .77778 ],
                            8905: [ .08167, .58167, 0, 0, .77778 ],
                            8906: [ .08167, .58167, 0, 0, .77778 ],
                            8907: [ 0, .69224, 0, 0, .77778 ],
                            8908: [ 0, .69224, 0, 0, .77778 ],
                            8909: [ -.03598, .46402, 0, 0, .77778 ],
                            8910: [ 0, .54986, 0, 0, .76042 ],
                            8911: [ 0, .54986, 0, 0, .76042 ],
                            8912: [ .03517, .54986, 0, 0, .77778 ],
                            8913: [ .03517, .54986, 0, 0, .77778 ],
                            8914: [ 0, .54986, 0, 0, .66667 ],
                            8915: [ 0, .54986, 0, 0, .66667 ],
                            8916: [ 0, .69224, 0, 0, .66667 ],
                            8918: [ .0391, .5391, 0, 0, .77778 ],
                            8919: [ .0391, .5391, 0, 0, .77778 ],
                            8920: [ .03517, .54986, 0, 0, 1.33334 ],
                            8921: [ .03517, .54986, 0, 0, 1.33334 ],
                            8922: [ .38569, .88569, 0, 0, .77778 ],
                            8923: [ .38569, .88569, 0, 0, .77778 ],
                            8926: [ .13667, .63667, 0, 0, .77778 ],
                            8927: [ .13667, .63667, 0, 0, .77778 ],
                            8928: [ .30274, .79383, 0, 0, .77778 ],
                            8929: [ .30274, .79383, 0, 0, .77778 ],
                            8934: [ .23222, .74111, 0, 0, .77778 ],
                            8935: [ .23222, .74111, 0, 0, .77778 ],
                            8936: [ .23222, .74111, 0, 0, .77778 ],
                            8937: [ .23222, .74111, 0, 0, .77778 ],
                            8938: [ .20576, .70576, 0, 0, .77778 ],
                            8939: [ .20576, .70576, 0, 0, .77778 ],
                            8940: [ .30274, .79383, 0, 0, .77778 ],
                            8941: [ .30274, .79383, 0, 0, .77778 ],
                            8994: [ .19444, .69224, 0, 0, .77778 ],
                            8995: [ .19444, .69224, 0, 0, .77778 ],
                            9416: [ .15559, .69224, 0, 0, .90222 ],
                            9484: [ 0, .69224, 0, 0, .5 ],
                            9488: [ 0, .69224, 0, 0, .5 ],
                            9492: [ 0, .37788, 0, 0, .5 ],
                            9496: [ 0, .37788, 0, 0, .5 ],
                            9585: [ .19444, .68889, 0, 0, .88889 ],
                            9586: [ .19444, .74111, 0, 0, .88889 ],
                            9632: [ 0, .675, 0, 0, .77778 ],
                            9633: [ 0, .675, 0, 0, .77778 ],
                            9650: [ 0, .54986, 0, 0, .72222 ],
                            9651: [ 0, .54986, 0, 0, .72222 ],
                            9654: [ .03517, .54986, 0, 0, .77778 ],
                            9660: [ 0, .54986, 0, 0, .72222 ],
                            9661: [ 0, .54986, 0, 0, .72222 ],
                            9664: [ .03517, .54986, 0, 0, .77778 ],
                            9674: [ .11111, .69224, 0, 0, .66667 ],
                            9733: [ .19444, .69224, 0, 0, .94445 ],
                            10003: [ 0, .69224, 0, 0, .83334 ],
                            10016: [ 0, .69224, 0, 0, .83334 ],
                            10731: [ .11111, .69224, 0, 0, .66667 ],
                            10846: [ .19444, .75583, 0, 0, .61111 ],
                            10877: [ .13667, .63667, 0, 0, .77778 ],
                            10878: [ .13667, .63667, 0, 0, .77778 ],
                            10885: [ .25583, .75583, 0, 0, .77778 ],
                            10886: [ .25583, .75583, 0, 0, .77778 ],
                            10887: [ .13597, .63597, 0, 0, .77778 ],
                            10888: [ .13597, .63597, 0, 0, .77778 ],
                            10889: [ .26167, .75726, 0, 0, .77778 ],
                            10890: [ .26167, .75726, 0, 0, .77778 ],
                            10891: [ .48256, .98256, 0, 0, .77778 ],
                            10892: [ .48256, .98256, 0, 0, .77778 ],
                            10901: [ .13667, .63667, 0, 0, .77778 ],
                            10902: [ .13667, .63667, 0, 0, .77778 ],
                            10933: [ .25142, .75726, 0, 0, .77778 ],
                            10934: [ .25142, .75726, 0, 0, .77778 ],
                            10935: [ .26167, .75726, 0, 0, .77778 ],
                            10936: [ .26167, .75726, 0, 0, .77778 ],
                            10937: [ .26167, .75726, 0, 0, .77778 ],
                            10938: [ .26167, .75726, 0, 0, .77778 ],
                            10949: [ .25583, .75583, 0, 0, .77778 ],
                            10950: [ .25583, .75583, 0, 0, .77778 ],
                            10955: [ .28481, .79383, 0, 0, .77778 ],
                            10956: [ .28481, .79383, 0, 0, .77778 ],
                            57350: [ .08167, .58167, 0, 0, .22222 ],
                            57351: [ .08167, .58167, 0, 0, .38889 ],
                            57352: [ .08167, .58167, 0, 0, .77778 ],
                            57353: [ 0, .43056, .04028, 0, .66667 ],
                            57356: [ .25142, .75726, 0, 0, .77778 ],
                            57357: [ .25142, .75726, 0, 0, .77778 ],
                            57358: [ .41951, .91951, 0, 0, .77778 ],
                            57359: [ .30274, .79383, 0, 0, .77778 ],
                            57360: [ .30274, .79383, 0, 0, .77778 ],
                            57361: [ .41951, .91951, 0, 0, .77778 ],
                            57366: [ .25142, .75726, 0, 0, .77778 ],
                            57367: [ .25142, .75726, 0, 0, .77778 ],
                            57368: [ .25142, .75726, 0, 0, .77778 ],
                            57369: [ .25142, .75726, 0, 0, .77778 ],
                            57370: [ .13597, .63597, 0, 0, .77778 ],
                            57371: [ .13597, .63597, 0, 0, .77778 ]
                        },
                        "Caligraphic-Regular": {
                            48: [ 0, .43056, 0, 0, .5 ],
                            49: [ 0, .43056, 0, 0, .5 ],
                            50: [ 0, .43056, 0, 0, .5 ],
                            51: [ .19444, .43056, 0, 0, .5 ],
                            52: [ .19444, .43056, 0, 0, .5 ],
                            53: [ .19444, .43056, 0, 0, .5 ],
                            54: [ 0, .64444, 0, 0, .5 ],
                            55: [ .19444, .43056, 0, 0, .5 ],
                            56: [ 0, .64444, 0, 0, .5 ],
                            57: [ .19444, .43056, 0, 0, .5 ],
                            65: [ 0, .68333, 0, .19445, .79847 ],
                            66: [ 0, .68333, .03041, .13889, .65681 ],
                            67: [ 0, .68333, .05834, .13889, .52653 ],
                            68: [ 0, .68333, .02778, .08334, .77139 ],
                            69: [ 0, .68333, .08944, .11111, .52778 ],
                            70: [ 0, .68333, .09931, .11111, .71875 ],
                            71: [ .09722, .68333, .0593, .11111, .59487 ],
                            72: [ 0, .68333, .00965, .11111, .84452 ],
                            73: [ 0, .68333, .07382, 0, .54452 ],
                            74: [ .09722, .68333, .18472, .16667, .67778 ],
                            75: [ 0, .68333, .01445, .05556, .76195 ],
                            76: [ 0, .68333, 0, .13889, .68972 ],
                            77: [ 0, .68333, 0, .13889, 1.2009 ],
                            78: [ 0, .68333, .14736, .08334, .82049 ],
                            79: [ 0, .68333, .02778, .11111, .79611 ],
                            80: [ 0, .68333, .08222, .08334, .69556 ],
                            81: [ .09722, .68333, 0, .11111, .81667 ],
                            82: [ 0, .68333, 0, .08334, .8475 ],
                            83: [ 0, .68333, .075, .13889, .60556 ],
                            84: [ 0, .68333, .25417, 0, .54464 ],
                            85: [ 0, .68333, .09931, .08334, .62583 ],
                            86: [ 0, .68333, .08222, 0, .61278 ],
                            87: [ 0, .68333, .08222, .08334, .98778 ],
                            88: [ 0, .68333, .14643, .13889, .7133 ],
                            89: [ .09722, .68333, .08222, .08334, .66834 ],
                            90: [ 0, .68333, .07944, .13889, .72473 ]
                        },
                        "Fraktur-Regular": {
                            33: [ 0, .69141, 0, 0, .29574 ],
                            34: [ 0, .69141, 0, 0, .21471 ],
                            38: [ 0, .69141, 0, 0, .73786 ],
                            39: [ 0, .69141, 0, 0, .21201 ],
                            40: [ .24982, .74947, 0, 0, .38865 ],
                            41: [ .24982, .74947, 0, 0, .38865 ],
                            42: [ 0, .62119, 0, 0, .27764 ],
                            43: [ .08319, .58283, 0, 0, .75623 ],
                            44: [ 0, .10803, 0, 0, .27764 ],
                            45: [ .08319, .58283, 0, 0, .75623 ],
                            46: [ 0, .10803, 0, 0, .27764 ],
                            47: [ .24982, .74947, 0, 0, .50181 ],
                            48: [ 0, .47534, 0, 0, .50181 ],
                            49: [ 0, .47534, 0, 0, .50181 ],
                            50: [ 0, .47534, 0, 0, .50181 ],
                            51: [ .18906, .47534, 0, 0, .50181 ],
                            52: [ .18906, .47534, 0, 0, .50181 ],
                            53: [ .18906, .47534, 0, 0, .50181 ],
                            54: [ 0, .69141, 0, 0, .50181 ],
                            55: [ .18906, .47534, 0, 0, .50181 ],
                            56: [ 0, .69141, 0, 0, .50181 ],
                            57: [ .18906, .47534, 0, 0, .50181 ],
                            58: [ 0, .47534, 0, 0, .21606 ],
                            59: [ .12604, .47534, 0, 0, .21606 ],
                            61: [ -.13099, .36866, 0, 0, .75623 ],
                            63: [ 0, .69141, 0, 0, .36245 ],
                            65: [ 0, .69141, 0, 0, .7176 ],
                            66: [ 0, .69141, 0, 0, .88397 ],
                            67: [ 0, .69141, 0, 0, .61254 ],
                            68: [ 0, .69141, 0, 0, .83158 ],
                            69: [ 0, .69141, 0, 0, .66278 ],
                            70: [ .12604, .69141, 0, 0, .61119 ],
                            71: [ 0, .69141, 0, 0, .78539 ],
                            72: [ .06302, .69141, 0, 0, .7203 ],
                            73: [ 0, .69141, 0, 0, .55448 ],
                            74: [ .12604, .69141, 0, 0, .55231 ],
                            75: [ 0, .69141, 0, 0, .66845 ],
                            76: [ 0, .69141, 0, 0, .66602 ],
                            77: [ 0, .69141, 0, 0, 1.04953 ],
                            78: [ 0, .69141, 0, 0, .83212 ],
                            79: [ 0, .69141, 0, 0, .82699 ],
                            80: [ .18906, .69141, 0, 0, .82753 ],
                            81: [ .03781, .69141, 0, 0, .82699 ],
                            82: [ 0, .69141, 0, 0, .82807 ],
                            83: [ 0, .69141, 0, 0, .82861 ],
                            84: [ 0, .69141, 0, 0, .66899 ],
                            85: [ 0, .69141, 0, 0, .64576 ],
                            86: [ 0, .69141, 0, 0, .83131 ],
                            87: [ 0, .69141, 0, 0, 1.04602 ],
                            88: [ 0, .69141, 0, 0, .71922 ],
                            89: [ .18906, .69141, 0, 0, .83293 ],
                            90: [ .12604, .69141, 0, 0, .60201 ],
                            91: [ .24982, .74947, 0, 0, .27764 ],
                            93: [ .24982, .74947, 0, 0, .27764 ],
                            94: [ 0, .69141, 0, 0, .49965 ],
                            97: [ 0, .47534, 0, 0, .50046 ],
                            98: [ 0, .69141, 0, 0, .51315 ],
                            99: [ 0, .47534, 0, 0, .38946 ],
                            100: [ 0, .62119, 0, 0, .49857 ],
                            101: [ 0, .47534, 0, 0, .40053 ],
                            102: [ .18906, .69141, 0, 0, .32626 ],
                            103: [ .18906, .47534, 0, 0, .5037 ],
                            104: [ .18906, .69141, 0, 0, .52126 ],
                            105: [ 0, .69141, 0, 0, .27899 ],
                            106: [ 0, .69141, 0, 0, .28088 ],
                            107: [ 0, .69141, 0, 0, .38946 ],
                            108: [ 0, .69141, 0, 0, .27953 ],
                            109: [ 0, .47534, 0, 0, .76676 ],
                            110: [ 0, .47534, 0, 0, .52666 ],
                            111: [ 0, .47534, 0, 0, .48885 ],
                            112: [ .18906, .52396, 0, 0, .50046 ],
                            113: [ .18906, .47534, 0, 0, .48912 ],
                            114: [ 0, .47534, 0, 0, .38919 ],
                            115: [ 0, .47534, 0, 0, .44266 ],
                            116: [ 0, .62119, 0, 0, .33301 ],
                            117: [ 0, .47534, 0, 0, .5172 ],
                            118: [ 0, .52396, 0, 0, .5118 ],
                            119: [ 0, .52396, 0, 0, .77351 ],
                            120: [ .18906, .47534, 0, 0, .38865 ],
                            121: [ .18906, .47534, 0, 0, .49884 ],
                            122: [ .18906, .47534, 0, 0, .39054 ],
                            8216: [ 0, .69141, 0, 0, .21471 ],
                            8217: [ 0, .69141, 0, 0, .21471 ],
                            58112: [ 0, .62119, 0, 0, .49749 ],
                            58113: [ 0, .62119, 0, 0, .4983 ],
                            58114: [ .18906, .69141, 0, 0, .33328 ],
                            58115: [ .18906, .69141, 0, 0, .32923 ],
                            58116: [ .18906, .47534, 0, 0, .50343 ],
                            58117: [ 0, .69141, 0, 0, .33301 ],
                            58118: [ 0, .62119, 0, 0, .33409 ],
                            58119: [ 0, .47534, 0, 0, .50073 ]
                        },
                        "Main-Bold": {
                            33: [ 0, .69444, 0, 0, .35 ],
                            34: [ 0, .69444, 0, 0, .60278 ],
                            35: [ .19444, .69444, 0, 0, .95833 ],
                            36: [ .05556, .75, 0, 0, .575 ],
                            37: [ .05556, .75, 0, 0, .95833 ],
                            38: [ 0, .69444, 0, 0, .89444 ],
                            39: [ 0, .69444, 0, 0, .31944 ],
                            40: [ .25, .75, 0, 0, .44722 ],
                            41: [ .25, .75, 0, 0, .44722 ],
                            42: [ 0, .75, 0, 0, .575 ],
                            43: [ .13333, .63333, 0, 0, .89444 ],
                            44: [ .19444, .15556, 0, 0, .31944 ],
                            45: [ 0, .44444, 0, 0, .38333 ],
                            46: [ 0, .15556, 0, 0, .31944 ],
                            47: [ .25, .75, 0, 0, .575 ],
                            48: [ 0, .64444, 0, 0, .575 ],
                            49: [ 0, .64444, 0, 0, .575 ],
                            50: [ 0, .64444, 0, 0, .575 ],
                            51: [ 0, .64444, 0, 0, .575 ],
                            52: [ 0, .64444, 0, 0, .575 ],
                            53: [ 0, .64444, 0, 0, .575 ],
                            54: [ 0, .64444, 0, 0, .575 ],
                            55: [ 0, .64444, 0, 0, .575 ],
                            56: [ 0, .64444, 0, 0, .575 ],
                            57: [ 0, .64444, 0, 0, .575 ],
                            58: [ 0, .44444, 0, 0, .31944 ],
                            59: [ .19444, .44444, 0, 0, .31944 ],
                            60: [ .08556, .58556, 0, 0, .89444 ],
                            61: [ -.10889, .39111, 0, 0, .89444 ],
                            62: [ .08556, .58556, 0, 0, .89444 ],
                            63: [ 0, .69444, 0, 0, .54305 ],
                            64: [ 0, .69444, 0, 0, .89444 ],
                            65: [ 0, .68611, 0, 0, .86944 ],
                            66: [ 0, .68611, 0, 0, .81805 ],
                            67: [ 0, .68611, 0, 0, .83055 ],
                            68: [ 0, .68611, 0, 0, .88194 ],
                            69: [ 0, .68611, 0, 0, .75555 ],
                            70: [ 0, .68611, 0, 0, .72361 ],
                            71: [ 0, .68611, 0, 0, .90416 ],
                            72: [ 0, .68611, 0, 0, .9 ],
                            73: [ 0, .68611, 0, 0, .43611 ],
                            74: [ 0, .68611, 0, 0, .59444 ],
                            75: [ 0, .68611, 0, 0, .90138 ],
                            76: [ 0, .68611, 0, 0, .69166 ],
                            77: [ 0, .68611, 0, 0, 1.09166 ],
                            78: [ 0, .68611, 0, 0, .9 ],
                            79: [ 0, .68611, 0, 0, .86388 ],
                            80: [ 0, .68611, 0, 0, .78611 ],
                            81: [ .19444, .68611, 0, 0, .86388 ],
                            82: [ 0, .68611, 0, 0, .8625 ],
                            83: [ 0, .68611, 0, 0, .63889 ],
                            84: [ 0, .68611, 0, 0, .8 ],
                            85: [ 0, .68611, 0, 0, .88472 ],
                            86: [ 0, .68611, .01597, 0, .86944 ],
                            87: [ 0, .68611, .01597, 0, 1.18888 ],
                            88: [ 0, .68611, 0, 0, .86944 ],
                            89: [ 0, .68611, .02875, 0, .86944 ],
                            90: [ 0, .68611, 0, 0, .70277 ],
                            91: [ .25, .75, 0, 0, .31944 ],
                            92: [ .25, .75, 0, 0, .575 ],
                            93: [ .25, .75, 0, 0, .31944 ],
                            94: [ 0, .69444, 0, 0, .575 ],
                            95: [ .31, .13444, .03194, 0, .575 ],
                            97: [ 0, .44444, 0, 0, .55902 ],
                            98: [ 0, .69444, 0, 0, .63889 ],
                            99: [ 0, .44444, 0, 0, .51111 ],
                            100: [ 0, .69444, 0, 0, .63889 ],
                            101: [ 0, .44444, 0, 0, .52708 ],
                            102: [ 0, .69444, .10903, 0, .35139 ],
                            103: [ .19444, .44444, .01597, 0, .575 ],
                            104: [ 0, .69444, 0, 0, .63889 ],
                            105: [ 0, .69444, 0, 0, .31944 ],
                            106: [ .19444, .69444, 0, 0, .35139 ],
                            107: [ 0, .69444, 0, 0, .60694 ],
                            108: [ 0, .69444, 0, 0, .31944 ],
                            109: [ 0, .44444, 0, 0, .95833 ],
                            110: [ 0, .44444, 0, 0, .63889 ],
                            111: [ 0, .44444, 0, 0, .575 ],
                            112: [ .19444, .44444, 0, 0, .63889 ],
                            113: [ .19444, .44444, 0, 0, .60694 ],
                            114: [ 0, .44444, 0, 0, .47361 ],
                            115: [ 0, .44444, 0, 0, .45361 ],
                            116: [ 0, .63492, 0, 0, .44722 ],
                            117: [ 0, .44444, 0, 0, .63889 ],
                            118: [ 0, .44444, .01597, 0, .60694 ],
                            119: [ 0, .44444, .01597, 0, .83055 ],
                            120: [ 0, .44444, 0, 0, .60694 ],
                            121: [ .19444, .44444, .01597, 0, .60694 ],
                            122: [ 0, .44444, 0, 0, .51111 ],
                            123: [ .25, .75, 0, 0, .575 ],
                            124: [ .25, .75, 0, 0, .31944 ],
                            125: [ .25, .75, 0, 0, .575 ],
                            126: [ .35, .34444, 0, 0, .575 ],
                            168: [ 0, .69444, 0, 0, .575 ],
                            172: [ 0, .44444, 0, 0, .76666 ],
                            176: [ 0, .69444, 0, 0, .86944 ],
                            177: [ .13333, .63333, 0, 0, .89444 ],
                            184: [ .17014, 0, 0, 0, .51111 ],
                            198: [ 0, .68611, 0, 0, 1.04166 ],
                            215: [ .13333, .63333, 0, 0, .89444 ],
                            216: [ .04861, .73472, 0, 0, .89444 ],
                            223: [ 0, .69444, 0, 0, .59722 ],
                            230: [ 0, .44444, 0, 0, .83055 ],
                            247: [ .13333, .63333, 0, 0, .89444 ],
                            248: [ .09722, .54167, 0, 0, .575 ],
                            305: [ 0, .44444, 0, 0, .31944 ],
                            338: [ 0, .68611, 0, 0, 1.16944 ],
                            339: [ 0, .44444, 0, 0, .89444 ],
                            567: [ .19444, .44444, 0, 0, .35139 ],
                            710: [ 0, .69444, 0, 0, .575 ],
                            711: [ 0, .63194, 0, 0, .575 ],
                            713: [ 0, .59611, 0, 0, .575 ],
                            714: [ 0, .69444, 0, 0, .575 ],
                            715: [ 0, .69444, 0, 0, .575 ],
                            728: [ 0, .69444, 0, 0, .575 ],
                            729: [ 0, .69444, 0, 0, .31944 ],
                            730: [ 0, .69444, 0, 0, .86944 ],
                            732: [ 0, .69444, 0, 0, .575 ],
                            733: [ 0, .69444, 0, 0, .575 ],
                            915: [ 0, .68611, 0, 0, .69166 ],
                            916: [ 0, .68611, 0, 0, .95833 ],
                            920: [ 0, .68611, 0, 0, .89444 ],
                            923: [ 0, .68611, 0, 0, .80555 ],
                            926: [ 0, .68611, 0, 0, .76666 ],
                            928: [ 0, .68611, 0, 0, .9 ],
                            931: [ 0, .68611, 0, 0, .83055 ],
                            933: [ 0, .68611, 0, 0, .89444 ],
                            934: [ 0, .68611, 0, 0, .83055 ],
                            936: [ 0, .68611, 0, 0, .89444 ],
                            937: [ 0, .68611, 0, 0, .83055 ],
                            8211: [ 0, .44444, .03194, 0, .575 ],
                            8212: [ 0, .44444, .03194, 0, 1.14999 ],
                            8216: [ 0, .69444, 0, 0, .31944 ],
                            8217: [ 0, .69444, 0, 0, .31944 ],
                            8220: [ 0, .69444, 0, 0, .60278 ],
                            8221: [ 0, .69444, 0, 0, .60278 ],
                            8224: [ .19444, .69444, 0, 0, .51111 ],
                            8225: [ .19444, .69444, 0, 0, .51111 ],
                            8242: [ 0, .55556, 0, 0, .34444 ],
                            8407: [ 0, .72444, .15486, 0, .575 ],
                            8463: [ 0, .69444, 0, 0, .66759 ],
                            8465: [ 0, .69444, 0, 0, .83055 ],
                            8467: [ 0, .69444, 0, 0, .47361 ],
                            8472: [ .19444, .44444, 0, 0, .74027 ],
                            8476: [ 0, .69444, 0, 0, .83055 ],
                            8501: [ 0, .69444, 0, 0, .70277 ],
                            8592: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8593: [ .19444, .69444, 0, 0, .575 ],
                            8594: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8595: [ .19444, .69444, 0, 0, .575 ],
                            8596: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8597: [ .25, .75, 0, 0, .575 ],
                            8598: [ .19444, .69444, 0, 0, 1.14999 ],
                            8599: [ .19444, .69444, 0, 0, 1.14999 ],
                            8600: [ .19444, .69444, 0, 0, 1.14999 ],
                            8601: [ .19444, .69444, 0, 0, 1.14999 ],
                            8636: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8637: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8640: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8641: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8656: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8657: [ .19444, .69444, 0, 0, .70277 ],
                            8658: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8659: [ .19444, .69444, 0, 0, .70277 ],
                            8660: [ -.10889, .39111, 0, 0, 1.14999 ],
                            8661: [ .25, .75, 0, 0, .70277 ],
                            8704: [ 0, .69444, 0, 0, .63889 ],
                            8706: [ 0, .69444, .06389, 0, .62847 ],
                            8707: [ 0, .69444, 0, 0, .63889 ],
                            8709: [ .05556, .75, 0, 0, .575 ],
                            8711: [ 0, .68611, 0, 0, .95833 ],
                            8712: [ .08556, .58556, 0, 0, .76666 ],
                            8715: [ .08556, .58556, 0, 0, .76666 ],
                            8722: [ .13333, .63333, 0, 0, .89444 ],
                            8723: [ .13333, .63333, 0, 0, .89444 ],
                            8725: [ .25, .75, 0, 0, .575 ],
                            8726: [ .25, .75, 0, 0, .575 ],
                            8727: [ -.02778, .47222, 0, 0, .575 ],
                            8728: [ -.02639, .47361, 0, 0, .575 ],
                            8729: [ -.02639, .47361, 0, 0, .575 ],
                            8730: [ .18, .82, 0, 0, .95833 ],
                            8733: [ 0, .44444, 0, 0, .89444 ],
                            8734: [ 0, .44444, 0, 0, 1.14999 ],
                            8736: [ 0, .69224, 0, 0, .72222 ],
                            8739: [ .25, .75, 0, 0, .31944 ],
                            8741: [ .25, .75, 0, 0, .575 ],
                            8743: [ 0, .55556, 0, 0, .76666 ],
                            8744: [ 0, .55556, 0, 0, .76666 ],
                            8745: [ 0, .55556, 0, 0, .76666 ],
                            8746: [ 0, .55556, 0, 0, .76666 ],
                            8747: [ .19444, .69444, .12778, 0, .56875 ],
                            8764: [ -.10889, .39111, 0, 0, .89444 ],
                            8768: [ .19444, .69444, 0, 0, .31944 ],
                            8771: [ .00222, .50222, 0, 0, .89444 ],
                            8776: [ .02444, .52444, 0, 0, .89444 ],
                            8781: [ .00222, .50222, 0, 0, .89444 ],
                            8801: [ .00222, .50222, 0, 0, .89444 ],
                            8804: [ .19667, .69667, 0, 0, .89444 ],
                            8805: [ .19667, .69667, 0, 0, .89444 ],
                            8810: [ .08556, .58556, 0, 0, 1.14999 ],
                            8811: [ .08556, .58556, 0, 0, 1.14999 ],
                            8826: [ .08556, .58556, 0, 0, .89444 ],
                            8827: [ .08556, .58556, 0, 0, .89444 ],
                            8834: [ .08556, .58556, 0, 0, .89444 ],
                            8835: [ .08556, .58556, 0, 0, .89444 ],
                            8838: [ .19667, .69667, 0, 0, .89444 ],
                            8839: [ .19667, .69667, 0, 0, .89444 ],
                            8846: [ 0, .55556, 0, 0, .76666 ],
                            8849: [ .19667, .69667, 0, 0, .89444 ],
                            8850: [ .19667, .69667, 0, 0, .89444 ],
                            8851: [ 0, .55556, 0, 0, .76666 ],
                            8852: [ 0, .55556, 0, 0, .76666 ],
                            8853: [ .13333, .63333, 0, 0, .89444 ],
                            8854: [ .13333, .63333, 0, 0, .89444 ],
                            8855: [ .13333, .63333, 0, 0, .89444 ],
                            8856: [ .13333, .63333, 0, 0, .89444 ],
                            8857: [ .13333, .63333, 0, 0, .89444 ],
                            8866: [ 0, .69444, 0, 0, .70277 ],
                            8867: [ 0, .69444, 0, 0, .70277 ],
                            8868: [ 0, .69444, 0, 0, .89444 ],
                            8869: [ 0, .69444, 0, 0, .89444 ],
                            8900: [ -.02639, .47361, 0, 0, .575 ],
                            8901: [ -.02639, .47361, 0, 0, .31944 ],
                            8902: [ -.02778, .47222, 0, 0, .575 ],
                            8968: [ .25, .75, 0, 0, .51111 ],
                            8969: [ .25, .75, 0, 0, .51111 ],
                            8970: [ .25, .75, 0, 0, .51111 ],
                            8971: [ .25, .75, 0, 0, .51111 ],
                            8994: [ -.13889, .36111, 0, 0, 1.14999 ],
                            8995: [ -.13889, .36111, 0, 0, 1.14999 ],
                            9651: [ .19444, .69444, 0, 0, 1.02222 ],
                            9657: [ -.02778, .47222, 0, 0, .575 ],
                            9661: [ .19444, .69444, 0, 0, 1.02222 ],
                            9667: [ -.02778, .47222, 0, 0, .575 ],
                            9711: [ .19444, .69444, 0, 0, 1.14999 ],
                            9824: [ .12963, .69444, 0, 0, .89444 ],
                            9825: [ .12963, .69444, 0, 0, .89444 ],
                            9826: [ .12963, .69444, 0, 0, .89444 ],
                            9827: [ .12963, .69444, 0, 0, .89444 ],
                            9837: [ 0, .75, 0, 0, .44722 ],
                            9838: [ .19444, .69444, 0, 0, .44722 ],
                            9839: [ .19444, .69444, 0, 0, .44722 ],
                            10216: [ .25, .75, 0, 0, .44722 ],
                            10217: [ .25, .75, 0, 0, .44722 ],
                            10815: [ 0, .68611, 0, 0, .9 ],
                            10927: [ .19667, .69667, 0, 0, .89444 ],
                            10928: [ .19667, .69667, 0, 0, .89444 ],
                            57376: [ .19444, .69444, 0, 0, 0 ]
                        },
                        "Main-BoldItalic": {
                            33: [ 0, .69444, .11417, 0, .38611 ],
                            34: [ 0, .69444, .07939, 0, .62055 ],
                            35: [ .19444, .69444, .06833, 0, .94444 ],
                            37: [ .05556, .75, .12861, 0, .94444 ],
                            38: [ 0, .69444, .08528, 0, .88555 ],
                            39: [ 0, .69444, .12945, 0, .35555 ],
                            40: [ .25, .75, .15806, 0, .47333 ],
                            41: [ .25, .75, .03306, 0, .47333 ],
                            42: [ 0, .75, .14333, 0, .59111 ],
                            43: [ .10333, .60333, .03306, 0, .88555 ],
                            44: [ .19444, .14722, 0, 0, .35555 ],
                            45: [ 0, .44444, .02611, 0, .41444 ],
                            46: [ 0, .14722, 0, 0, .35555 ],
                            47: [ .25, .75, .15806, 0, .59111 ],
                            48: [ 0, .64444, .13167, 0, .59111 ],
                            49: [ 0, .64444, .13167, 0, .59111 ],
                            50: [ 0, .64444, .13167, 0, .59111 ],
                            51: [ 0, .64444, .13167, 0, .59111 ],
                            52: [ .19444, .64444, .13167, 0, .59111 ],
                            53: [ 0, .64444, .13167, 0, .59111 ],
                            54: [ 0, .64444, .13167, 0, .59111 ],
                            55: [ .19444, .64444, .13167, 0, .59111 ],
                            56: [ 0, .64444, .13167, 0, .59111 ],
                            57: [ 0, .64444, .13167, 0, .59111 ],
                            58: [ 0, .44444, .06695, 0, .35555 ],
                            59: [ .19444, .44444, .06695, 0, .35555 ],
                            61: [ -.10889, .39111, .06833, 0, .88555 ],
                            63: [ 0, .69444, .11472, 0, .59111 ],
                            64: [ 0, .69444, .09208, 0, .88555 ],
                            65: [ 0, .68611, 0, 0, .86555 ],
                            66: [ 0, .68611, .0992, 0, .81666 ],
                            67: [ 0, .68611, .14208, 0, .82666 ],
                            68: [ 0, .68611, .09062, 0, .87555 ],
                            69: [ 0, .68611, .11431, 0, .75666 ],
                            70: [ 0, .68611, .12903, 0, .72722 ],
                            71: [ 0, .68611, .07347, 0, .89527 ],
                            72: [ 0, .68611, .17208, 0, .8961 ],
                            73: [ 0, .68611, .15681, 0, .47166 ],
                            74: [ 0, .68611, .145, 0, .61055 ],
                            75: [ 0, .68611, .14208, 0, .89499 ],
                            76: [ 0, .68611, 0, 0, .69777 ],
                            77: [ 0, .68611, .17208, 0, 1.07277 ],
                            78: [ 0, .68611, .17208, 0, .8961 ],
                            79: [ 0, .68611, .09062, 0, .85499 ],
                            80: [ 0, .68611, .0992, 0, .78721 ],
                            81: [ .19444, .68611, .09062, 0, .85499 ],
                            82: [ 0, .68611, .02559, 0, .85944 ],
                            83: [ 0, .68611, .11264, 0, .64999 ],
                            84: [ 0, .68611, .12903, 0, .7961 ],
                            85: [ 0, .68611, .17208, 0, .88083 ],
                            86: [ 0, .68611, .18625, 0, .86555 ],
                            87: [ 0, .68611, .18625, 0, 1.15999 ],
                            88: [ 0, .68611, .15681, 0, .86555 ],
                            89: [ 0, .68611, .19803, 0, .86555 ],
                            90: [ 0, .68611, .14208, 0, .70888 ],
                            91: [ .25, .75, .1875, 0, .35611 ],
                            93: [ .25, .75, .09972, 0, .35611 ],
                            94: [ 0, .69444, .06709, 0, .59111 ],
                            95: [ .31, .13444, .09811, 0, .59111 ],
                            97: [ 0, .44444, .09426, 0, .59111 ],
                            98: [ 0, .69444, .07861, 0, .53222 ],
                            99: [ 0, .44444, .05222, 0, .53222 ],
                            100: [ 0, .69444, .10861, 0, .59111 ],
                            101: [ 0, .44444, .085, 0, .53222 ],
                            102: [ .19444, .69444, .21778, 0, .4 ],
                            103: [ .19444, .44444, .105, 0, .53222 ],
                            104: [ 0, .69444, .09426, 0, .59111 ],
                            105: [ 0, .69326, .11387, 0, .35555 ],
                            106: [ .19444, .69326, .1672, 0, .35555 ],
                            107: [ 0, .69444, .11111, 0, .53222 ],
                            108: [ 0, .69444, .10861, 0, .29666 ],
                            109: [ 0, .44444, .09426, 0, .94444 ],
                            110: [ 0, .44444, .09426, 0, .64999 ],
                            111: [ 0, .44444, .07861, 0, .59111 ],
                            112: [ .19444, .44444, .07861, 0, .59111 ],
                            113: [ .19444, .44444, .105, 0, .53222 ],
                            114: [ 0, .44444, .11111, 0, .50167 ],
                            115: [ 0, .44444, .08167, 0, .48694 ],
                            116: [ 0, .63492, .09639, 0, .385 ],
                            117: [ 0, .44444, .09426, 0, .62055 ],
                            118: [ 0, .44444, .11111, 0, .53222 ],
                            119: [ 0, .44444, .11111, 0, .76777 ],
                            120: [ 0, .44444, .12583, 0, .56055 ],
                            121: [ .19444, .44444, .105, 0, .56166 ],
                            122: [ 0, .44444, .13889, 0, .49055 ],
                            126: [ .35, .34444, .11472, 0, .59111 ],
                            163: [ 0, .69444, 0, 0, .86853 ],
                            168: [ 0, .69444, .11473, 0, .59111 ],
                            176: [ 0, .69444, 0, 0, .94888 ],
                            184: [ .17014, 0, 0, 0, .53222 ],
                            198: [ 0, .68611, .11431, 0, 1.02277 ],
                            216: [ .04861, .73472, .09062, 0, .88555 ],
                            223: [ .19444, .69444, .09736, 0, .665 ],
                            230: [ 0, .44444, .085, 0, .82666 ],
                            248: [ .09722, .54167, .09458, 0, .59111 ],
                            305: [ 0, .44444, .09426, 0, .35555 ],
                            338: [ 0, .68611, .11431, 0, 1.14054 ],
                            339: [ 0, .44444, .085, 0, .82666 ],
                            567: [ .19444, .44444, .04611, 0, .385 ],
                            710: [ 0, .69444, .06709, 0, .59111 ],
                            711: [ 0, .63194, .08271, 0, .59111 ],
                            713: [ 0, .59444, .10444, 0, .59111 ],
                            714: [ 0, .69444, .08528, 0, .59111 ],
                            715: [ 0, .69444, 0, 0, .59111 ],
                            728: [ 0, .69444, .10333, 0, .59111 ],
                            729: [ 0, .69444, .12945, 0, .35555 ],
                            730: [ 0, .69444, 0, 0, .94888 ],
                            732: [ 0, .69444, .11472, 0, .59111 ],
                            733: [ 0, .69444, .11472, 0, .59111 ],
                            915: [ 0, .68611, .12903, 0, .69777 ],
                            916: [ 0, .68611, 0, 0, .94444 ],
                            920: [ 0, .68611, .09062, 0, .88555 ],
                            923: [ 0, .68611, 0, 0, .80666 ],
                            926: [ 0, .68611, .15092, 0, .76777 ],
                            928: [ 0, .68611, .17208, 0, .8961 ],
                            931: [ 0, .68611, .11431, 0, .82666 ],
                            933: [ 0, .68611, .10778, 0, .88555 ],
                            934: [ 0, .68611, .05632, 0, .82666 ],
                            936: [ 0, .68611, .10778, 0, .88555 ],
                            937: [ 0, .68611, .0992, 0, .82666 ],
                            8211: [ 0, .44444, .09811, 0, .59111 ],
                            8212: [ 0, .44444, .09811, 0, 1.18221 ],
                            8216: [ 0, .69444, .12945, 0, .35555 ],
                            8217: [ 0, .69444, .12945, 0, .35555 ],
                            8220: [ 0, .69444, .16772, 0, .62055 ],
                            8221: [ 0, .69444, .07939, 0, .62055 ]
                        },
                        "Main-Italic": {
                            33: [ 0, .69444, .12417, 0, .30667 ],
                            34: [ 0, .69444, .06961, 0, .51444 ],
                            35: [ .19444, .69444, .06616, 0, .81777 ],
                            37: [ .05556, .75, .13639, 0, .81777 ],
                            38: [ 0, .69444, .09694, 0, .76666 ],
                            39: [ 0, .69444, .12417, 0, .30667 ],
                            40: [ .25, .75, .16194, 0, .40889 ],
                            41: [ .25, .75, .03694, 0, .40889 ],
                            42: [ 0, .75, .14917, 0, .51111 ],
                            43: [ .05667, .56167, .03694, 0, .76666 ],
                            44: [ .19444, .10556, 0, 0, .30667 ],
                            45: [ 0, .43056, .02826, 0, .35778 ],
                            46: [ 0, .10556, 0, 0, .30667 ],
                            47: [ .25, .75, .16194, 0, .51111 ],
                            48: [ 0, .64444, .13556, 0, .51111 ],
                            49: [ 0, .64444, .13556, 0, .51111 ],
                            50: [ 0, .64444, .13556, 0, .51111 ],
                            51: [ 0, .64444, .13556, 0, .51111 ],
                            52: [ .19444, .64444, .13556, 0, .51111 ],
                            53: [ 0, .64444, .13556, 0, .51111 ],
                            54: [ 0, .64444, .13556, 0, .51111 ],
                            55: [ .19444, .64444, .13556, 0, .51111 ],
                            56: [ 0, .64444, .13556, 0, .51111 ],
                            57: [ 0, .64444, .13556, 0, .51111 ],
                            58: [ 0, .43056, .0582, 0, .30667 ],
                            59: [ .19444, .43056, .0582, 0, .30667 ],
                            61: [ -.13313, .36687, .06616, 0, .76666 ],
                            63: [ 0, .69444, .1225, 0, .51111 ],
                            64: [ 0, .69444, .09597, 0, .76666 ],
                            65: [ 0, .68333, 0, 0, .74333 ],
                            66: [ 0, .68333, .10257, 0, .70389 ],
                            67: [ 0, .68333, .14528, 0, .71555 ],
                            68: [ 0, .68333, .09403, 0, .755 ],
                            69: [ 0, .68333, .12028, 0, .67833 ],
                            70: [ 0, .68333, .13305, 0, .65277 ],
                            71: [ 0, .68333, .08722, 0, .77361 ],
                            72: [ 0, .68333, .16389, 0, .74333 ],
                            73: [ 0, .68333, .15806, 0, .38555 ],
                            74: [ 0, .68333, .14028, 0, .525 ],
                            75: [ 0, .68333, .14528, 0, .76888 ],
                            76: [ 0, .68333, 0, 0, .62722 ],
                            77: [ 0, .68333, .16389, 0, .89666 ],
                            78: [ 0, .68333, .16389, 0, .74333 ],
                            79: [ 0, .68333, .09403, 0, .76666 ],
                            80: [ 0, .68333, .10257, 0, .67833 ],
                            81: [ .19444, .68333, .09403, 0, .76666 ],
                            82: [ 0, .68333, .03868, 0, .72944 ],
                            83: [ 0, .68333, .11972, 0, .56222 ],
                            84: [ 0, .68333, .13305, 0, .71555 ],
                            85: [ 0, .68333, .16389, 0, .74333 ],
                            86: [ 0, .68333, .18361, 0, .74333 ],
                            87: [ 0, .68333, .18361, 0, .99888 ],
                            88: [ 0, .68333, .15806, 0, .74333 ],
                            89: [ 0, .68333, .19383, 0, .74333 ],
                            90: [ 0, .68333, .14528, 0, .61333 ],
                            91: [ .25, .75, .1875, 0, .30667 ],
                            93: [ .25, .75, .10528, 0, .30667 ],
                            94: [ 0, .69444, .06646, 0, .51111 ],
                            95: [ .31, .12056, .09208, 0, .51111 ],
                            97: [ 0, .43056, .07671, 0, .51111 ],
                            98: [ 0, .69444, .06312, 0, .46 ],
                            99: [ 0, .43056, .05653, 0, .46 ],
                            100: [ 0, .69444, .10333, 0, .51111 ],
                            101: [ 0, .43056, .07514, 0, .46 ],
                            102: [ .19444, .69444, .21194, 0, .30667 ],
                            103: [ .19444, .43056, .08847, 0, .46 ],
                            104: [ 0, .69444, .07671, 0, .51111 ],
                            105: [ 0, .65536, .1019, 0, .30667 ],
                            106: [ .19444, .65536, .14467, 0, .30667 ],
                            107: [ 0, .69444, .10764, 0, .46 ],
                            108: [ 0, .69444, .10333, 0, .25555 ],
                            109: [ 0, .43056, .07671, 0, .81777 ],
                            110: [ 0, .43056, .07671, 0, .56222 ],
                            111: [ 0, .43056, .06312, 0, .51111 ],
                            112: [ .19444, .43056, .06312, 0, .51111 ],
                            113: [ .19444, .43056, .08847, 0, .46 ],
                            114: [ 0, .43056, .10764, 0, .42166 ],
                            115: [ 0, .43056, .08208, 0, .40889 ],
                            116: [ 0, .61508, .09486, 0, .33222 ],
                            117: [ 0, .43056, .07671, 0, .53666 ],
                            118: [ 0, .43056, .10764, 0, .46 ],
                            119: [ 0, .43056, .10764, 0, .66444 ],
                            120: [ 0, .43056, .12042, 0, .46389 ],
                            121: [ .19444, .43056, .08847, 0, .48555 ],
                            122: [ 0, .43056, .12292, 0, .40889 ],
                            126: [ .35, .31786, .11585, 0, .51111 ],
                            163: [ 0, .69444, 0, 0, .76909 ],
                            168: [ 0, .66786, .10474, 0, .51111 ],
                            176: [ 0, .69444, 0, 0, .83129 ],
                            184: [ .17014, 0, 0, 0, .46 ],
                            198: [ 0, .68333, .12028, 0, .88277 ],
                            216: [ .04861, .73194, .09403, 0, .76666 ],
                            223: [ .19444, .69444, .10514, 0, .53666 ],
                            230: [ 0, .43056, .07514, 0, .71555 ],
                            248: [ .09722, .52778, .09194, 0, .51111 ],
                            305: [ 0, .43056, 0, .02778, .32246 ],
                            338: [ 0, .68333, .12028, 0, .98499 ],
                            339: [ 0, .43056, .07514, 0, .71555 ],
                            567: [ .19444, .43056, 0, .08334, .38403 ],
                            710: [ 0, .69444, .06646, 0, .51111 ],
                            711: [ 0, .62847, .08295, 0, .51111 ],
                            713: [ 0, .56167, .10333, 0, .51111 ],
                            714: [ 0, .69444, .09694, 0, .51111 ],
                            715: [ 0, .69444, 0, 0, .51111 ],
                            728: [ 0, .69444, .10806, 0, .51111 ],
                            729: [ 0, .66786, .11752, 0, .30667 ],
                            730: [ 0, .69444, 0, 0, .83129 ],
                            732: [ 0, .66786, .11585, 0, .51111 ],
                            733: [ 0, .69444, .1225, 0, .51111 ],
                            915: [ 0, .68333, .13305, 0, .62722 ],
                            916: [ 0, .68333, 0, 0, .81777 ],
                            920: [ 0, .68333, .09403, 0, .76666 ],
                            923: [ 0, .68333, 0, 0, .69222 ],
                            926: [ 0, .68333, .15294, 0, .66444 ],
                            928: [ 0, .68333, .16389, 0, .74333 ],
                            931: [ 0, .68333, .12028, 0, .71555 ],
                            933: [ 0, .68333, .11111, 0, .76666 ],
                            934: [ 0, .68333, .05986, 0, .71555 ],
                            936: [ 0, .68333, .11111, 0, .76666 ],
                            937: [ 0, .68333, .10257, 0, .71555 ],
                            8211: [ 0, .43056, .09208, 0, .51111 ],
                            8212: [ 0, .43056, .09208, 0, 1.02222 ],
                            8216: [ 0, .69444, .12417, 0, .30667 ],
                            8217: [ 0, .69444, .12417, 0, .30667 ],
                            8220: [ 0, .69444, .1685, 0, .51444 ],
                            8221: [ 0, .69444, .06961, 0, .51444 ],
                            8463: [ 0, .68889, 0, 0, .54028 ]
                        },
                        "Main-Regular": {
                            32: [ 0, 0, 0, 0, .25 ],
                            33: [ 0, .69444, 0, 0, .27778 ],
                            34: [ 0, .69444, 0, 0, .5 ],
                            35: [ .19444, .69444, 0, 0, .83334 ],
                            36: [ .05556, .75, 0, 0, .5 ],
                            37: [ .05556, .75, 0, 0, .83334 ],
                            38: [ 0, .69444, 0, 0, .77778 ],
                            39: [ 0, .69444, 0, 0, .27778 ],
                            40: [ .25, .75, 0, 0, .38889 ],
                            41: [ .25, .75, 0, 0, .38889 ],
                            42: [ 0, .75, 0, 0, .5 ],
                            43: [ .08333, .58333, 0, 0, .77778 ],
                            44: [ .19444, .10556, 0, 0, .27778 ],
                            45: [ 0, .43056, 0, 0, .33333 ],
                            46: [ 0, .10556, 0, 0, .27778 ],
                            47: [ .25, .75, 0, 0, .5 ],
                            48: [ 0, .64444, 0, 0, .5 ],
                            49: [ 0, .64444, 0, 0, .5 ],
                            50: [ 0, .64444, 0, 0, .5 ],
                            51: [ 0, .64444, 0, 0, .5 ],
                            52: [ 0, .64444, 0, 0, .5 ],
                            53: [ 0, .64444, 0, 0, .5 ],
                            54: [ 0, .64444, 0, 0, .5 ],
                            55: [ 0, .64444, 0, 0, .5 ],
                            56: [ 0, .64444, 0, 0, .5 ],
                            57: [ 0, .64444, 0, 0, .5 ],
                            58: [ 0, .43056, 0, 0, .27778 ],
                            59: [ .19444, .43056, 0, 0, .27778 ],
                            60: [ .0391, .5391, 0, 0, .77778 ],
                            61: [ -.13313, .36687, 0, 0, .77778 ],
                            62: [ .0391, .5391, 0, 0, .77778 ],
                            63: [ 0, .69444, 0, 0, .47222 ],
                            64: [ 0, .69444, 0, 0, .77778 ],
                            65: [ 0, .68333, 0, 0, .75 ],
                            66: [ 0, .68333, 0, 0, .70834 ],
                            67: [ 0, .68333, 0, 0, .72222 ],
                            68: [ 0, .68333, 0, 0, .76389 ],
                            69: [ 0, .68333, 0, 0, .68056 ],
                            70: [ 0, .68333, 0, 0, .65278 ],
                            71: [ 0, .68333, 0, 0, .78472 ],
                            72: [ 0, .68333, 0, 0, .75 ],
                            73: [ 0, .68333, 0, 0, .36111 ],
                            74: [ 0, .68333, 0, 0, .51389 ],
                            75: [ 0, .68333, 0, 0, .77778 ],
                            76: [ 0, .68333, 0, 0, .625 ],
                            77: [ 0, .68333, 0, 0, .91667 ],
                            78: [ 0, .68333, 0, 0, .75 ],
                            79: [ 0, .68333, 0, 0, .77778 ],
                            80: [ 0, .68333, 0, 0, .68056 ],
                            81: [ .19444, .68333, 0, 0, .77778 ],
                            82: [ 0, .68333, 0, 0, .73611 ],
                            83: [ 0, .68333, 0, 0, .55556 ],
                            84: [ 0, .68333, 0, 0, .72222 ],
                            85: [ 0, .68333, 0, 0, .75 ],
                            86: [ 0, .68333, .01389, 0, .75 ],
                            87: [ 0, .68333, .01389, 0, 1.02778 ],
                            88: [ 0, .68333, 0, 0, .75 ],
                            89: [ 0, .68333, .025, 0, .75 ],
                            90: [ 0, .68333, 0, 0, .61111 ],
                            91: [ .25, .75, 0, 0, .27778 ],
                            92: [ .25, .75, 0, 0, .5 ],
                            93: [ .25, .75, 0, 0, .27778 ],
                            94: [ 0, .69444, 0, 0, .5 ],
                            95: [ .31, .12056, .02778, 0, .5 ],
                            97: [ 0, .43056, 0, 0, .5 ],
                            98: [ 0, .69444, 0, 0, .55556 ],
                            99: [ 0, .43056, 0, 0, .44445 ],
                            100: [ 0, .69444, 0, 0, .55556 ],
                            101: [ 0, .43056, 0, 0, .44445 ],
                            102: [ 0, .69444, .07778, 0, .30556 ],
                            103: [ .19444, .43056, .01389, 0, .5 ],
                            104: [ 0, .69444, 0, 0, .55556 ],
                            105: [ 0, .66786, 0, 0, .27778 ],
                            106: [ .19444, .66786, 0, 0, .30556 ],
                            107: [ 0, .69444, 0, 0, .52778 ],
                            108: [ 0, .69444, 0, 0, .27778 ],
                            109: [ 0, .43056, 0, 0, .83334 ],
                            110: [ 0, .43056, 0, 0, .55556 ],
                            111: [ 0, .43056, 0, 0, .5 ],
                            112: [ .19444, .43056, 0, 0, .55556 ],
                            113: [ .19444, .43056, 0, 0, .52778 ],
                            114: [ 0, .43056, 0, 0, .39167 ],
                            115: [ 0, .43056, 0, 0, .39445 ],
                            116: [ 0, .61508, 0, 0, .38889 ],
                            117: [ 0, .43056, 0, 0, .55556 ],
                            118: [ 0, .43056, .01389, 0, .52778 ],
                            119: [ 0, .43056, .01389, 0, .72222 ],
                            120: [ 0, .43056, 0, 0, .52778 ],
                            121: [ .19444, .43056, .01389, 0, .52778 ],
                            122: [ 0, .43056, 0, 0, .44445 ],
                            123: [ .25, .75, 0, 0, .5 ],
                            124: [ .25, .75, 0, 0, .27778 ],
                            125: [ .25, .75, 0, 0, .5 ],
                            126: [ .35, .31786, 0, 0, .5 ],
                            160: [ 0, 0, 0, 0, .25 ],
                            167: [ .19444, .69444, 0, 0, .44445 ],
                            168: [ 0, .66786, 0, 0, .5 ],
                            172: [ 0, .43056, 0, 0, .66667 ],
                            176: [ 0, .69444, 0, 0, .75 ],
                            177: [ .08333, .58333, 0, 0, .77778 ],
                            182: [ .19444, .69444, 0, 0, .61111 ],
                            184: [ .17014, 0, 0, 0, .44445 ],
                            198: [ 0, .68333, 0, 0, .90278 ],
                            215: [ .08333, .58333, 0, 0, .77778 ],
                            216: [ .04861, .73194, 0, 0, .77778 ],
                            223: [ 0, .69444, 0, 0, .5 ],
                            230: [ 0, .43056, 0, 0, .72222 ],
                            247: [ .08333, .58333, 0, 0, .77778 ],
                            248: [ .09722, .52778, 0, 0, .5 ],
                            305: [ 0, .43056, 0, 0, .27778 ],
                            338: [ 0, .68333, 0, 0, 1.01389 ],
                            339: [ 0, .43056, 0, 0, .77778 ],
                            567: [ .19444, .43056, 0, 0, .30556 ],
                            710: [ 0, .69444, 0, 0, .5 ],
                            711: [ 0, .62847, 0, 0, .5 ],
                            713: [ 0, .56778, 0, 0, .5 ],
                            714: [ 0, .69444, 0, 0, .5 ],
                            715: [ 0, .69444, 0, 0, .5 ],
                            728: [ 0, .69444, 0, 0, .5 ],
                            729: [ 0, .66786, 0, 0, .27778 ],
                            730: [ 0, .69444, 0, 0, .75 ],
                            732: [ 0, .66786, 0, 0, .5 ],
                            733: [ 0, .69444, 0, 0, .5 ],
                            915: [ 0, .68333, 0, 0, .625 ],
                            916: [ 0, .68333, 0, 0, .83334 ],
                            920: [ 0, .68333, 0, 0, .77778 ],
                            923: [ 0, .68333, 0, 0, .69445 ],
                            926: [ 0, .68333, 0, 0, .66667 ],
                            928: [ 0, .68333, 0, 0, .75 ],
                            931: [ 0, .68333, 0, 0, .72222 ],
                            933: [ 0, .68333, 0, 0, .77778 ],
                            934: [ 0, .68333, 0, 0, .72222 ],
                            936: [ 0, .68333, 0, 0, .77778 ],
                            937: [ 0, .68333, 0, 0, .72222 ],
                            8211: [ 0, .43056, .02778, 0, .5 ],
                            8212: [ 0, .43056, .02778, 0, 1 ],
                            8216: [ 0, .69444, 0, 0, .27778 ],
                            8217: [ 0, .69444, 0, 0, .27778 ],
                            8220: [ 0, .69444, 0, 0, .5 ],
                            8221: [ 0, .69444, 0, 0, .5 ],
                            8224: [ .19444, .69444, 0, 0, .44445 ],
                            8225: [ .19444, .69444, 0, 0, .44445 ],
                            8230: [ 0, .12, 0, 0, 1.172 ],
                            8242: [ 0, .55556, 0, 0, .275 ],
                            8407: [ 0, .71444, .15382, 0, .5 ],
                            8463: [ 0, .68889, 0, 0, .54028 ],
                            8465: [ 0, .69444, 0, 0, .72222 ],
                            8467: [ 0, .69444, 0, .11111, .41667 ],
                            8472: [ .19444, .43056, 0, .11111, .63646 ],
                            8476: [ 0, .69444, 0, 0, .72222 ],
                            8501: [ 0, .69444, 0, 0, .61111 ],
                            8592: [ -.13313, .36687, 0, 0, 1 ],
                            8593: [ .19444, .69444, 0, 0, .5 ],
                            8594: [ -.13313, .36687, 0, 0, 1 ],
                            8595: [ .19444, .69444, 0, 0, .5 ],
                            8596: [ -.13313, .36687, 0, 0, 1 ],
                            8597: [ .25, .75, 0, 0, .5 ],
                            8598: [ .19444, .69444, 0, 0, 1 ],
                            8599: [ .19444, .69444, 0, 0, 1 ],
                            8600: [ .19444, .69444, 0, 0, 1 ],
                            8601: [ .19444, .69444, 0, 0, 1 ],
                            8614: [ .011, .511, 0, 0, 1 ],
                            8617: [ .011, .511, 0, 0, 1.126 ],
                            8618: [ .011, .511, 0, 0, 1.126 ],
                            8636: [ -.13313, .36687, 0, 0, 1 ],
                            8637: [ -.13313, .36687, 0, 0, 1 ],
                            8640: [ -.13313, .36687, 0, 0, 1 ],
                            8641: [ -.13313, .36687, 0, 0, 1 ],
                            8652: [ .011, .671, 0, 0, 1 ],
                            8656: [ -.13313, .36687, 0, 0, 1 ],
                            8657: [ .19444, .69444, 0, 0, .61111 ],
                            8658: [ -.13313, .36687, 0, 0, 1 ],
                            8659: [ .19444, .69444, 0, 0, .61111 ],
                            8660: [ -.13313, .36687, 0, 0, 1 ],
                            8661: [ .25, .75, 0, 0, .61111 ],
                            8704: [ 0, .69444, 0, 0, .55556 ],
                            8706: [ 0, .69444, .05556, .08334, .5309 ],
                            8707: [ 0, .69444, 0, 0, .55556 ],
                            8709: [ .05556, .75, 0, 0, .5 ],
                            8711: [ 0, .68333, 0, 0, .83334 ],
                            8712: [ .0391, .5391, 0, 0, .66667 ],
                            8715: [ .0391, .5391, 0, 0, .66667 ],
                            8722: [ .08333, .58333, 0, 0, .77778 ],
                            8723: [ .08333, .58333, 0, 0, .77778 ],
                            8725: [ .25, .75, 0, 0, .5 ],
                            8726: [ .25, .75, 0, 0, .5 ],
                            8727: [ -.03472, .46528, 0, 0, .5 ],
                            8728: [ -.05555, .44445, 0, 0, .5 ],
                            8729: [ -.05555, .44445, 0, 0, .5 ],
                            8730: [ .2, .8, 0, 0, .83334 ],
                            8733: [ 0, .43056, 0, 0, .77778 ],
                            8734: [ 0, .43056, 0, 0, 1 ],
                            8736: [ 0, .69224, 0, 0, .72222 ],
                            8739: [ .25, .75, 0, 0, .27778 ],
                            8741: [ .25, .75, 0, 0, .5 ],
                            8743: [ 0, .55556, 0, 0, .66667 ],
                            8744: [ 0, .55556, 0, 0, .66667 ],
                            8745: [ 0, .55556, 0, 0, .66667 ],
                            8746: [ 0, .55556, 0, 0, .66667 ],
                            8747: [ .19444, .69444, .11111, 0, .41667 ],
                            8764: [ -.13313, .36687, 0, 0, .77778 ],
                            8768: [ .19444, .69444, 0, 0, .27778 ],
                            8771: [ -.03625, .46375, 0, 0, .77778 ],
                            8773: [ -.022, .589, 0, 0, 1 ],
                            8776: [ -.01688, .48312, 0, 0, .77778 ],
                            8781: [ -.03625, .46375, 0, 0, .77778 ],
                            8784: [ -.133, .67, 0, 0, .778 ],
                            8801: [ -.03625, .46375, 0, 0, .77778 ],
                            8804: [ .13597, .63597, 0, 0, .77778 ],
                            8805: [ .13597, .63597, 0, 0, .77778 ],
                            8810: [ .0391, .5391, 0, 0, 1 ],
                            8811: [ .0391, .5391, 0, 0, 1 ],
                            8826: [ .0391, .5391, 0, 0, .77778 ],
                            8827: [ .0391, .5391, 0, 0, .77778 ],
                            8834: [ .0391, .5391, 0, 0, .77778 ],
                            8835: [ .0391, .5391, 0, 0, .77778 ],
                            8838: [ .13597, .63597, 0, 0, .77778 ],
                            8839: [ .13597, .63597, 0, 0, .77778 ],
                            8846: [ 0, .55556, 0, 0, .66667 ],
                            8849: [ .13597, .63597, 0, 0, .77778 ],
                            8850: [ .13597, .63597, 0, 0, .77778 ],
                            8851: [ 0, .55556, 0, 0, .66667 ],
                            8852: [ 0, .55556, 0, 0, .66667 ],
                            8853: [ .08333, .58333, 0, 0, .77778 ],
                            8854: [ .08333, .58333, 0, 0, .77778 ],
                            8855: [ .08333, .58333, 0, 0, .77778 ],
                            8856: [ .08333, .58333, 0, 0, .77778 ],
                            8857: [ .08333, .58333, 0, 0, .77778 ],
                            8866: [ 0, .69444, 0, 0, .61111 ],
                            8867: [ 0, .69444, 0, 0, .61111 ],
                            8868: [ 0, .69444, 0, 0, .77778 ],
                            8869: [ 0, .69444, 0, 0, .77778 ],
                            8872: [ .249, .75, 0, 0, .867 ],
                            8900: [ -.05555, .44445, 0, 0, .5 ],
                            8901: [ -.05555, .44445, 0, 0, .27778 ],
                            8902: [ -.03472, .46528, 0, 0, .5 ],
                            8904: [ .005, .505, 0, 0, .9 ],
                            8942: [ .03, .9, 0, 0, .278 ],
                            8943: [ -.19, .31, 0, 0, 1.172 ],
                            8945: [ -.1, .82, 0, 0, 1.282 ],
                            8968: [ .25, .75, 0, 0, .44445 ],
                            8969: [ .25, .75, 0, 0, .44445 ],
                            8970: [ .25, .75, 0, 0, .44445 ],
                            8971: [ .25, .75, 0, 0, .44445 ],
                            8994: [ -.14236, .35764, 0, 0, 1 ],
                            8995: [ -.14236, .35764, 0, 0, 1 ],
                            9136: [ .244, .744, 0, 0, .412 ],
                            9137: [ .244, .744, 0, 0, .412 ],
                            9651: [ .19444, .69444, 0, 0, .88889 ],
                            9657: [ -.03472, .46528, 0, 0, .5 ],
                            9661: [ .19444, .69444, 0, 0, .88889 ],
                            9667: [ -.03472, .46528, 0, 0, .5 ],
                            9711: [ .19444, .69444, 0, 0, 1 ],
                            9824: [ .12963, .69444, 0, 0, .77778 ],
                            9825: [ .12963, .69444, 0, 0, .77778 ],
                            9826: [ .12963, .69444, 0, 0, .77778 ],
                            9827: [ .12963, .69444, 0, 0, .77778 ],
                            9837: [ 0, .75, 0, 0, .38889 ],
                            9838: [ .19444, .69444, 0, 0, .38889 ],
                            9839: [ .19444, .69444, 0, 0, .38889 ],
                            10216: [ .25, .75, 0, 0, .38889 ],
                            10217: [ .25, .75, 0, 0, .38889 ],
                            10222: [ .244, .744, 0, 0, .412 ],
                            10223: [ .244, .744, 0, 0, .412 ],
                            10229: [ .011, .511, 0, 0, 1.609 ],
                            10230: [ .011, .511, 0, 0, 1.638 ],
                            10231: [ .011, .511, 0, 0, 1.859 ],
                            10232: [ .024, .525, 0, 0, 1.609 ],
                            10233: [ .024, .525, 0, 0, 1.638 ],
                            10234: [ .024, .525, 0, 0, 1.858 ],
                            10236: [ .011, .511, 0, 0, 1.638 ],
                            10815: [ 0, .68333, 0, 0, .75 ],
                            10927: [ .13597, .63597, 0, 0, .77778 ],
                            10928: [ .13597, .63597, 0, 0, .77778 ],
                            57376: [ .19444, .69444, 0, 0, 0 ]
                        },
                        "Math-BoldItalic": {
                            65: [ 0, .68611, 0, 0, .86944 ],
                            66: [ 0, .68611, .04835, 0, .8664 ],
                            67: [ 0, .68611, .06979, 0, .81694 ],
                            68: [ 0, .68611, .03194, 0, .93812 ],
                            69: [ 0, .68611, .05451, 0, .81007 ],
                            70: [ 0, .68611, .15972, 0, .68889 ],
                            71: [ 0, .68611, 0, 0, .88673 ],
                            72: [ 0, .68611, .08229, 0, .98229 ],
                            73: [ 0, .68611, .07778, 0, .51111 ],
                            74: [ 0, .68611, .10069, 0, .63125 ],
                            75: [ 0, .68611, .06979, 0, .97118 ],
                            76: [ 0, .68611, 0, 0, .75555 ],
                            77: [ 0, .68611, .11424, 0, 1.14201 ],
                            78: [ 0, .68611, .11424, 0, .95034 ],
                            79: [ 0, .68611, .03194, 0, .83666 ],
                            80: [ 0, .68611, .15972, 0, .72309 ],
                            81: [ .19444, .68611, 0, 0, .86861 ],
                            82: [ 0, .68611, .00421, 0, .87235 ],
                            83: [ 0, .68611, .05382, 0, .69271 ],
                            84: [ 0, .68611, .15972, 0, .63663 ],
                            85: [ 0, .68611, .11424, 0, .80027 ],
                            86: [ 0, .68611, .25555, 0, .67778 ],
                            87: [ 0, .68611, .15972, 0, 1.09305 ],
                            88: [ 0, .68611, .07778, 0, .94722 ],
                            89: [ 0, .68611, .25555, 0, .67458 ],
                            90: [ 0, .68611, .06979, 0, .77257 ],
                            97: [ 0, .44444, 0, 0, .63287 ],
                            98: [ 0, .69444, 0, 0, .52083 ],
                            99: [ 0, .44444, 0, 0, .51342 ],
                            100: [ 0, .69444, 0, 0, .60972 ],
                            101: [ 0, .44444, 0, 0, .55361 ],
                            102: [ .19444, .69444, .11042, 0, .56806 ],
                            103: [ .19444, .44444, .03704, 0, .5449 ],
                            104: [ 0, .69444, 0, 0, .66759 ],
                            105: [ 0, .69326, 0, 0, .4048 ],
                            106: [ .19444, .69326, .0622, 0, .47083 ],
                            107: [ 0, .69444, .01852, 0, .6037 ],
                            108: [ 0, .69444, .0088, 0, .34815 ],
                            109: [ 0, .44444, 0, 0, 1.0324 ],
                            110: [ 0, .44444, 0, 0, .71296 ],
                            111: [ 0, .44444, 0, 0, .58472 ],
                            112: [ .19444, .44444, 0, 0, .60092 ],
                            113: [ .19444, .44444, .03704, 0, .54213 ],
                            114: [ 0, .44444, .03194, 0, .5287 ],
                            115: [ 0, .44444, 0, 0, .53125 ],
                            116: [ 0, .63492, 0, 0, .41528 ],
                            117: [ 0, .44444, 0, 0, .68102 ],
                            118: [ 0, .44444, .03704, 0, .56666 ],
                            119: [ 0, .44444, .02778, 0, .83148 ],
                            120: [ 0, .44444, 0, 0, .65903 ],
                            121: [ .19444, .44444, .03704, 0, .59028 ],
                            122: [ 0, .44444, .04213, 0, .55509 ],
                            915: [ 0, .68611, .15972, 0, .65694 ],
                            916: [ 0, .68611, 0, 0, .95833 ],
                            920: [ 0, .68611, .03194, 0, .86722 ],
                            923: [ 0, .68611, 0, 0, .80555 ],
                            926: [ 0, .68611, .07458, 0, .84125 ],
                            928: [ 0, .68611, .08229, 0, .98229 ],
                            931: [ 0, .68611, .05451, 0, .88507 ],
                            933: [ 0, .68611, .15972, 0, .67083 ],
                            934: [ 0, .68611, 0, 0, .76666 ],
                            936: [ 0, .68611, .11653, 0, .71402 ],
                            937: [ 0, .68611, .04835, 0, .8789 ],
                            945: [ 0, .44444, 0, 0, .76064 ],
                            946: [ .19444, .69444, .03403, 0, .65972 ],
                            947: [ .19444, .44444, .06389, 0, .59003 ],
                            948: [ 0, .69444, .03819, 0, .52222 ],
                            949: [ 0, .44444, 0, 0, .52882 ],
                            950: [ .19444, .69444, .06215, 0, .50833 ],
                            951: [ .19444, .44444, .03704, 0, .6 ],
                            952: [ 0, .69444, .03194, 0, .5618 ],
                            953: [ 0, .44444, 0, 0, .41204 ],
                            954: [ 0, .44444, 0, 0, .66759 ],
                            955: [ 0, .69444, 0, 0, .67083 ],
                            956: [ .19444, .44444, 0, 0, .70787 ],
                            957: [ 0, .44444, .06898, 0, .57685 ],
                            958: [ .19444, .69444, .03021, 0, .50833 ],
                            959: [ 0, .44444, 0, 0, .58472 ],
                            960: [ 0, .44444, .03704, 0, .68241 ],
                            961: [ .19444, .44444, 0, 0, .6118 ],
                            962: [ .09722, .44444, .07917, 0, .42361 ],
                            963: [ 0, .44444, .03704, 0, .68588 ],
                            964: [ 0, .44444, .13472, 0, .52083 ],
                            965: [ 0, .44444, .03704, 0, .63055 ],
                            966: [ .19444, .44444, 0, 0, .74722 ],
                            967: [ .19444, .44444, 0, 0, .71805 ],
                            968: [ .19444, .69444, .03704, 0, .75833 ],
                            969: [ 0, .44444, .03704, 0, .71782 ],
                            977: [ 0, .69444, 0, 0, .69155 ],
                            981: [ .19444, .69444, 0, 0, .7125 ],
                            982: [ 0, .44444, .03194, 0, .975 ],
                            1009: [ .19444, .44444, 0, 0, .6118 ],
                            1013: [ 0, .44444, 0, 0, .48333 ]
                        },
                        "Math-Italic": {
                            65: [ 0, .68333, 0, .13889, .75 ],
                            66: [ 0, .68333, .05017, .08334, .75851 ],
                            67: [ 0, .68333, .07153, .08334, .71472 ],
                            68: [ 0, .68333, .02778, .05556, .82792 ],
                            69: [ 0, .68333, .05764, .08334, .7382 ],
                            70: [ 0, .68333, .13889, .08334, .64306 ],
                            71: [ 0, .68333, 0, .08334, .78625 ],
                            72: [ 0, .68333, .08125, .05556, .83125 ],
                            73: [ 0, .68333, .07847, .11111, .43958 ],
                            74: [ 0, .68333, .09618, .16667, .55451 ],
                            75: [ 0, .68333, .07153, .05556, .84931 ],
                            76: [ 0, .68333, 0, .02778, .68056 ],
                            77: [ 0, .68333, .10903, .08334, .97014 ],
                            78: [ 0, .68333, .10903, .08334, .80347 ],
                            79: [ 0, .68333, .02778, .08334, .76278 ],
                            80: [ 0, .68333, .13889, .08334, .64201 ],
                            81: [ .19444, .68333, 0, .08334, .79056 ],
                            82: [ 0, .68333, .00773, .08334, .75929 ],
                            83: [ 0, .68333, .05764, .08334, .6132 ],
                            84: [ 0, .68333, .13889, .08334, .58438 ],
                            85: [ 0, .68333, .10903, .02778, .68278 ],
                            86: [ 0, .68333, .22222, 0, .58333 ],
                            87: [ 0, .68333, .13889, 0, .94445 ],
                            88: [ 0, .68333, .07847, .08334, .82847 ],
                            89: [ 0, .68333, .22222, 0, .58056 ],
                            90: [ 0, .68333, .07153, .08334, .68264 ],
                            97: [ 0, .43056, 0, 0, .52859 ],
                            98: [ 0, .69444, 0, 0, .42917 ],
                            99: [ 0, .43056, 0, .05556, .43276 ],
                            100: [ 0, .69444, 0, .16667, .52049 ],
                            101: [ 0, .43056, 0, .05556, .46563 ],
                            102: [ .19444, .69444, .10764, .16667, .48959 ],
                            103: [ .19444, .43056, .03588, .02778, .47697 ],
                            104: [ 0, .69444, 0, 0, .57616 ],
                            105: [ 0, .65952, 0, 0, .34451 ],
                            106: [ .19444, .65952, .05724, 0, .41181 ],
                            107: [ 0, .69444, .03148, 0, .5206 ],
                            108: [ 0, .69444, .01968, .08334, .29838 ],
                            109: [ 0, .43056, 0, 0, .87801 ],
                            110: [ 0, .43056, 0, 0, .60023 ],
                            111: [ 0, .43056, 0, .05556, .48472 ],
                            112: [ .19444, .43056, 0, .08334, .50313 ],
                            113: [ .19444, .43056, .03588, .08334, .44641 ],
                            114: [ 0, .43056, .02778, .05556, .45116 ],
                            115: [ 0, .43056, 0, .05556, .46875 ],
                            116: [ 0, .61508, 0, .08334, .36111 ],
                            117: [ 0, .43056, 0, .02778, .57246 ],
                            118: [ 0, .43056, .03588, .02778, .48472 ],
                            119: [ 0, .43056, .02691, .08334, .71592 ],
                            120: [ 0, .43056, 0, .02778, .57153 ],
                            121: [ .19444, .43056, .03588, .05556, .49028 ],
                            122: [ 0, .43056, .04398, .05556, .46505 ],
                            915: [ 0, .68333, .13889, .08334, .61528 ],
                            916: [ 0, .68333, 0, .16667, .83334 ],
                            920: [ 0, .68333, .02778, .08334, .76278 ],
                            923: [ 0, .68333, 0, .16667, .69445 ],
                            926: [ 0, .68333, .07569, .08334, .74236 ],
                            928: [ 0, .68333, .08125, .05556, .83125 ],
                            931: [ 0, .68333, .05764, .08334, .77986 ],
                            933: [ 0, .68333, .13889, .05556, .58333 ],
                            934: [ 0, .68333, 0, .08334, .66667 ],
                            936: [ 0, .68333, .11, .05556, .61222 ],
                            937: [ 0, .68333, .05017, .08334, .7724 ],
                            945: [ 0, .43056, .0037, .02778, .6397 ],
                            946: [ .19444, .69444, .05278, .08334, .56563 ],
                            947: [ .19444, .43056, .05556, 0, .51773 ],
                            948: [ 0, .69444, .03785, .05556, .44444 ],
                            949: [ 0, .43056, 0, .08334, .46632 ],
                            950: [ .19444, .69444, .07378, .08334, .4375 ],
                            951: [ .19444, .43056, .03588, .05556, .49653 ],
                            952: [ 0, .69444, .02778, .08334, .46944 ],
                            953: [ 0, .43056, 0, .05556, .35394 ],
                            954: [ 0, .43056, 0, 0, .57616 ],
                            955: [ 0, .69444, 0, 0, .58334 ],
                            956: [ .19444, .43056, 0, .02778, .60255 ],
                            957: [ 0, .43056, .06366, .02778, .49398 ],
                            958: [ .19444, .69444, .04601, .11111, .4375 ],
                            959: [ 0, .43056, 0, .05556, .48472 ],
                            960: [ 0, .43056, .03588, 0, .57003 ],
                            961: [ .19444, .43056, 0, .08334, .51702 ],
                            962: [ .09722, .43056, .07986, .08334, .36285 ],
                            963: [ 0, .43056, .03588, 0, .57141 ],
                            964: [ 0, .43056, .1132, .02778, .43715 ],
                            965: [ 0, .43056, .03588, .02778, .54028 ],
                            966: [ .19444, .43056, 0, .08334, .65417 ],
                            967: [ .19444, .43056, 0, .05556, .62569 ],
                            968: [ .19444, .69444, .03588, .11111, .65139 ],
                            969: [ 0, .43056, .03588, 0, .62245 ],
                            977: [ 0, .69444, 0, .08334, .59144 ],
                            981: [ .19444, .69444, 0, .08334, .59583 ],
                            982: [ 0, .43056, .02778, 0, .82813 ],
                            1009: [ .19444, .43056, 0, .08334, .51702 ],
                            1013: [ 0, .43056, 0, .05556, .4059 ]
                        },
                        "Math-Regular": {
                            65: [ 0, .68333, 0, .13889, .75 ],
                            66: [ 0, .68333, .05017, .08334, .75851 ],
                            67: [ 0, .68333, .07153, .08334, .71472 ],
                            68: [ 0, .68333, .02778, .05556, .82792 ],
                            69: [ 0, .68333, .05764, .08334, .7382 ],
                            70: [ 0, .68333, .13889, .08334, .64306 ],
                            71: [ 0, .68333, 0, .08334, .78625 ],
                            72: [ 0, .68333, .08125, .05556, .83125 ],
                            73: [ 0, .68333, .07847, .11111, .43958 ],
                            74: [ 0, .68333, .09618, .16667, .55451 ],
                            75: [ 0, .68333, .07153, .05556, .84931 ],
                            76: [ 0, .68333, 0, .02778, .68056 ],
                            77: [ 0, .68333, .10903, .08334, .97014 ],
                            78: [ 0, .68333, .10903, .08334, .80347 ],
                            79: [ 0, .68333, .02778, .08334, .76278 ],
                            80: [ 0, .68333, .13889, .08334, .64201 ],
                            81: [ .19444, .68333, 0, .08334, .79056 ],
                            82: [ 0, .68333, .00773, .08334, .75929 ],
                            83: [ 0, .68333, .05764, .08334, .6132 ],
                            84: [ 0, .68333, .13889, .08334, .58438 ],
                            85: [ 0, .68333, .10903, .02778, .68278 ],
                            86: [ 0, .68333, .22222, 0, .58333 ],
                            87: [ 0, .68333, .13889, 0, .94445 ],
                            88: [ 0, .68333, .07847, .08334, .82847 ],
                            89: [ 0, .68333, .22222, 0, .58056 ],
                            90: [ 0, .68333, .07153, .08334, .68264 ],
                            97: [ 0, .43056, 0, 0, .52859 ],
                            98: [ 0, .69444, 0, 0, .42917 ],
                            99: [ 0, .43056, 0, .05556, .43276 ],
                            100: [ 0, .69444, 0, .16667, .52049 ],
                            101: [ 0, .43056, 0, .05556, .46563 ],
                            102: [ .19444, .69444, .10764, .16667, .48959 ],
                            103: [ .19444, .43056, .03588, .02778, .47697 ],
                            104: [ 0, .69444, 0, 0, .57616 ],
                            105: [ 0, .65952, 0, 0, .34451 ],
                            106: [ .19444, .65952, .05724, 0, .41181 ],
                            107: [ 0, .69444, .03148, 0, .5206 ],
                            108: [ 0, .69444, .01968, .08334, .29838 ],
                            109: [ 0, .43056, 0, 0, .87801 ],
                            110: [ 0, .43056, 0, 0, .60023 ],
                            111: [ 0, .43056, 0, .05556, .48472 ],
                            112: [ .19444, .43056, 0, .08334, .50313 ],
                            113: [ .19444, .43056, .03588, .08334, .44641 ],
                            114: [ 0, .43056, .02778, .05556, .45116 ],
                            115: [ 0, .43056, 0, .05556, .46875 ],
                            116: [ 0, .61508, 0, .08334, .36111 ],
                            117: [ 0, .43056, 0, .02778, .57246 ],
                            118: [ 0, .43056, .03588, .02778, .48472 ],
                            119: [ 0, .43056, .02691, .08334, .71592 ],
                            120: [ 0, .43056, 0, .02778, .57153 ],
                            121: [ .19444, .43056, .03588, .05556, .49028 ],
                            122: [ 0, .43056, .04398, .05556, .46505 ],
                            915: [ 0, .68333, .13889, .08334, .61528 ],
                            916: [ 0, .68333, 0, .16667, .83334 ],
                            920: [ 0, .68333, .02778, .08334, .76278 ],
                            923: [ 0, .68333, 0, .16667, .69445 ],
                            926: [ 0, .68333, .07569, .08334, .74236 ],
                            928: [ 0, .68333, .08125, .05556, .83125 ],
                            931: [ 0, .68333, .05764, .08334, .77986 ],
                            933: [ 0, .68333, .13889, .05556, .58333 ],
                            934: [ 0, .68333, 0, .08334, .66667 ],
                            936: [ 0, .68333, .11, .05556, .61222 ],
                            937: [ 0, .68333, .05017, .08334, .7724 ],
                            945: [ 0, .43056, .0037, .02778, .6397 ],
                            946: [ .19444, .69444, .05278, .08334, .56563 ],
                            947: [ .19444, .43056, .05556, 0, .51773 ],
                            948: [ 0, .69444, .03785, .05556, .44444 ],
                            949: [ 0, .43056, 0, .08334, .46632 ],
                            950: [ .19444, .69444, .07378, .08334, .4375 ],
                            951: [ .19444, .43056, .03588, .05556, .49653 ],
                            952: [ 0, .69444, .02778, .08334, .46944 ],
                            953: [ 0, .43056, 0, .05556, .35394 ],
                            954: [ 0, .43056, 0, 0, .57616 ],
                            955: [ 0, .69444, 0, 0, .58334 ],
                            956: [ .19444, .43056, 0, .02778, .60255 ],
                            957: [ 0, .43056, .06366, .02778, .49398 ],
                            958: [ .19444, .69444, .04601, .11111, .4375 ],
                            959: [ 0, .43056, 0, .05556, .48472 ],
                            960: [ 0, .43056, .03588, 0, .57003 ],
                            961: [ .19444, .43056, 0, .08334, .51702 ],
                            962: [ .09722, .43056, .07986, .08334, .36285 ],
                            963: [ 0, .43056, .03588, 0, .57141 ],
                            964: [ 0, .43056, .1132, .02778, .43715 ],
                            965: [ 0, .43056, .03588, .02778, .54028 ],
                            966: [ .19444, .43056, 0, .08334, .65417 ],
                            967: [ .19444, .43056, 0, .05556, .62569 ],
                            968: [ .19444, .69444, .03588, .11111, .65139 ],
                            969: [ 0, .43056, .03588, 0, .62245 ],
                            977: [ 0, .69444, 0, .08334, .59144 ],
                            981: [ .19444, .69444, 0, .08334, .59583 ],
                            982: [ 0, .43056, .02778, 0, .82813 ],
                            1009: [ .19444, .43056, 0, .08334, .51702 ],
                            1013: [ 0, .43056, 0, .05556, .4059 ]
                        },
                        "SansSerif-Bold": {
                            33: [ 0, .69444, 0, 0, .36667 ],
                            34: [ 0, .69444, 0, 0, .55834 ],
                            35: [ .19444, .69444, 0, 0, .91667 ],
                            36: [ .05556, .75, 0, 0, .55 ],
                            37: [ .05556, .75, 0, 0, 1.02912 ],
                            38: [ 0, .69444, 0, 0, .83056 ],
                            39: [ 0, .69444, 0, 0, .30556 ],
                            40: [ .25, .75, 0, 0, .42778 ],
                            41: [ .25, .75, 0, 0, .42778 ],
                            42: [ 0, .75, 0, 0, .55 ],
                            43: [ .11667, .61667, 0, 0, .85556 ],
                            44: [ .10556, .13056, 0, 0, .30556 ],
                            45: [ 0, .45833, 0, 0, .36667 ],
                            46: [ 0, .13056, 0, 0, .30556 ],
                            47: [ .25, .75, 0, 0, .55 ],
                            48: [ 0, .69444, 0, 0, .55 ],
                            49: [ 0, .69444, 0, 0, .55 ],
                            50: [ 0, .69444, 0, 0, .55 ],
                            51: [ 0, .69444, 0, 0, .55 ],
                            52: [ 0, .69444, 0, 0, .55 ],
                            53: [ 0, .69444, 0, 0, .55 ],
                            54: [ 0, .69444, 0, 0, .55 ],
                            55: [ 0, .69444, 0, 0, .55 ],
                            56: [ 0, .69444, 0, 0, .55 ],
                            57: [ 0, .69444, 0, 0, .55 ],
                            58: [ 0, .45833, 0, 0, .30556 ],
                            59: [ .10556, .45833, 0, 0, .30556 ],
                            61: [ -.09375, .40625, 0, 0, .85556 ],
                            63: [ 0, .69444, 0, 0, .51945 ],
                            64: [ 0, .69444, 0, 0, .73334 ],
                            65: [ 0, .69444, 0, 0, .73334 ],
                            66: [ 0, .69444, 0, 0, .73334 ],
                            67: [ 0, .69444, 0, 0, .70278 ],
                            68: [ 0, .69444, 0, 0, .79445 ],
                            69: [ 0, .69444, 0, 0, .64167 ],
                            70: [ 0, .69444, 0, 0, .61111 ],
                            71: [ 0, .69444, 0, 0, .73334 ],
                            72: [ 0, .69444, 0, 0, .79445 ],
                            73: [ 0, .69444, 0, 0, .33056 ],
                            74: [ 0, .69444, 0, 0, .51945 ],
                            75: [ 0, .69444, 0, 0, .76389 ],
                            76: [ 0, .69444, 0, 0, .58056 ],
                            77: [ 0, .69444, 0, 0, .97778 ],
                            78: [ 0, .69444, 0, 0, .79445 ],
                            79: [ 0, .69444, 0, 0, .79445 ],
                            80: [ 0, .69444, 0, 0, .70278 ],
                            81: [ .10556, .69444, 0, 0, .79445 ],
                            82: [ 0, .69444, 0, 0, .70278 ],
                            83: [ 0, .69444, 0, 0, .61111 ],
                            84: [ 0, .69444, 0, 0, .73334 ],
                            85: [ 0, .69444, 0, 0, .76389 ],
                            86: [ 0, .69444, .01528, 0, .73334 ],
                            87: [ 0, .69444, .01528, 0, 1.03889 ],
                            88: [ 0, .69444, 0, 0, .73334 ],
                            89: [ 0, .69444, .0275, 0, .73334 ],
                            90: [ 0, .69444, 0, 0, .67223 ],
                            91: [ .25, .75, 0, 0, .34306 ],
                            93: [ .25, .75, 0, 0, .34306 ],
                            94: [ 0, .69444, 0, 0, .55 ],
                            95: [ .35, .10833, .03056, 0, .55 ],
                            97: [ 0, .45833, 0, 0, .525 ],
                            98: [ 0, .69444, 0, 0, .56111 ],
                            99: [ 0, .45833, 0, 0, .48889 ],
                            100: [ 0, .69444, 0, 0, .56111 ],
                            101: [ 0, .45833, 0, 0, .51111 ],
                            102: [ 0, .69444, .07639, 0, .33611 ],
                            103: [ .19444, .45833, .01528, 0, .55 ],
                            104: [ 0, .69444, 0, 0, .56111 ],
                            105: [ 0, .69444, 0, 0, .25556 ],
                            106: [ .19444, .69444, 0, 0, .28611 ],
                            107: [ 0, .69444, 0, 0, .53056 ],
                            108: [ 0, .69444, 0, 0, .25556 ],
                            109: [ 0, .45833, 0, 0, .86667 ],
                            110: [ 0, .45833, 0, 0, .56111 ],
                            111: [ 0, .45833, 0, 0, .55 ],
                            112: [ .19444, .45833, 0, 0, .56111 ],
                            113: [ .19444, .45833, 0, 0, .56111 ],
                            114: [ 0, .45833, .01528, 0, .37222 ],
                            115: [ 0, .45833, 0, 0, .42167 ],
                            116: [ 0, .58929, 0, 0, .40417 ],
                            117: [ 0, .45833, 0, 0, .56111 ],
                            118: [ 0, .45833, .01528, 0, .5 ],
                            119: [ 0, .45833, .01528, 0, .74445 ],
                            120: [ 0, .45833, 0, 0, .5 ],
                            121: [ .19444, .45833, .01528, 0, .5 ],
                            122: [ 0, .45833, 0, 0, .47639 ],
                            126: [ .35, .34444, 0, 0, .55 ],
                            168: [ 0, .69444, 0, 0, .55 ],
                            176: [ 0, .69444, 0, 0, .73334 ],
                            180: [ 0, .69444, 0, 0, .55 ],
                            184: [ .17014, 0, 0, 0, .48889 ],
                            305: [ 0, .45833, 0, 0, .25556 ],
                            567: [ .19444, .45833, 0, 0, .28611 ],
                            710: [ 0, .69444, 0, 0, .55 ],
                            711: [ 0, .63542, 0, 0, .55 ],
                            713: [ 0, .63778, 0, 0, .55 ],
                            728: [ 0, .69444, 0, 0, .55 ],
                            729: [ 0, .69444, 0, 0, .30556 ],
                            730: [ 0, .69444, 0, 0, .73334 ],
                            732: [ 0, .69444, 0, 0, .55 ],
                            733: [ 0, .69444, 0, 0, .55 ],
                            915: [ 0, .69444, 0, 0, .58056 ],
                            916: [ 0, .69444, 0, 0, .91667 ],
                            920: [ 0, .69444, 0, 0, .85556 ],
                            923: [ 0, .69444, 0, 0, .67223 ],
                            926: [ 0, .69444, 0, 0, .73334 ],
                            928: [ 0, .69444, 0, 0, .79445 ],
                            931: [ 0, .69444, 0, 0, .79445 ],
                            933: [ 0, .69444, 0, 0, .85556 ],
                            934: [ 0, .69444, 0, 0, .79445 ],
                            936: [ 0, .69444, 0, 0, .85556 ],
                            937: [ 0, .69444, 0, 0, .79445 ],
                            8211: [ 0, .45833, .03056, 0, .55 ],
                            8212: [ 0, .45833, .03056, 0, 1.10001 ],
                            8216: [ 0, .69444, 0, 0, .30556 ],
                            8217: [ 0, .69444, 0, 0, .30556 ],
                            8220: [ 0, .69444, 0, 0, .55834 ],
                            8221: [ 0, .69444, 0, 0, .55834 ]
                        },
                        "SansSerif-Italic": {
                            33: [ 0, .69444, .05733, 0, .31945 ],
                            34: [ 0, .69444, .00316, 0, .5 ],
                            35: [ .19444, .69444, .05087, 0, .83334 ],
                            36: [ .05556, .75, .11156, 0, .5 ],
                            37: [ .05556, .75, .03126, 0, .83334 ],
                            38: [ 0, .69444, .03058, 0, .75834 ],
                            39: [ 0, .69444, .07816, 0, .27778 ],
                            40: [ .25, .75, .13164, 0, .38889 ],
                            41: [ .25, .75, .02536, 0, .38889 ],
                            42: [ 0, .75, .11775, 0, .5 ],
                            43: [ .08333, .58333, .02536, 0, .77778 ],
                            44: [ .125, .08333, 0, 0, .27778 ],
                            45: [ 0, .44444, .01946, 0, .33333 ],
                            46: [ 0, .08333, 0, 0, .27778 ],
                            47: [ .25, .75, .13164, 0, .5 ],
                            48: [ 0, .65556, .11156, 0, .5 ],
                            49: [ 0, .65556, .11156, 0, .5 ],
                            50: [ 0, .65556, .11156, 0, .5 ],
                            51: [ 0, .65556, .11156, 0, .5 ],
                            52: [ 0, .65556, .11156, 0, .5 ],
                            53: [ 0, .65556, .11156, 0, .5 ],
                            54: [ 0, .65556, .11156, 0, .5 ],
                            55: [ 0, .65556, .11156, 0, .5 ],
                            56: [ 0, .65556, .11156, 0, .5 ],
                            57: [ 0, .65556, .11156, 0, .5 ],
                            58: [ 0, .44444, .02502, 0, .27778 ],
                            59: [ .125, .44444, .02502, 0, .27778 ],
                            61: [ -.13, .37, .05087, 0, .77778 ],
                            63: [ 0, .69444, .11809, 0, .47222 ],
                            64: [ 0, .69444, .07555, 0, .66667 ],
                            65: [ 0, .69444, 0, 0, .66667 ],
                            66: [ 0, .69444, .08293, 0, .66667 ],
                            67: [ 0, .69444, .11983, 0, .63889 ],
                            68: [ 0, .69444, .07555, 0, .72223 ],
                            69: [ 0, .69444, .11983, 0, .59722 ],
                            70: [ 0, .69444, .13372, 0, .56945 ],
                            71: [ 0, .69444, .11983, 0, .66667 ],
                            72: [ 0, .69444, .08094, 0, .70834 ],
                            73: [ 0, .69444, .13372, 0, .27778 ],
                            74: [ 0, .69444, .08094, 0, .47222 ],
                            75: [ 0, .69444, .11983, 0, .69445 ],
                            76: [ 0, .69444, 0, 0, .54167 ],
                            77: [ 0, .69444, .08094, 0, .875 ],
                            78: [ 0, .69444, .08094, 0, .70834 ],
                            79: [ 0, .69444, .07555, 0, .73611 ],
                            80: [ 0, .69444, .08293, 0, .63889 ],
                            81: [ .125, .69444, .07555, 0, .73611 ],
                            82: [ 0, .69444, .08293, 0, .64584 ],
                            83: [ 0, .69444, .09205, 0, .55556 ],
                            84: [ 0, .69444, .13372, 0, .68056 ],
                            85: [ 0, .69444, .08094, 0, .6875 ],
                            86: [ 0, .69444, .1615, 0, .66667 ],
                            87: [ 0, .69444, .1615, 0, .94445 ],
                            88: [ 0, .69444, .13372, 0, .66667 ],
                            89: [ 0, .69444, .17261, 0, .66667 ],
                            90: [ 0, .69444, .11983, 0, .61111 ],
                            91: [ .25, .75, .15942, 0, .28889 ],
                            93: [ .25, .75, .08719, 0, .28889 ],
                            94: [ 0, .69444, .0799, 0, .5 ],
                            95: [ .35, .09444, .08616, 0, .5 ],
                            97: [ 0, .44444, .00981, 0, .48056 ],
                            98: [ 0, .69444, .03057, 0, .51667 ],
                            99: [ 0, .44444, .08336, 0, .44445 ],
                            100: [ 0, .69444, .09483, 0, .51667 ],
                            101: [ 0, .44444, .06778, 0, .44445 ],
                            102: [ 0, .69444, .21705, 0, .30556 ],
                            103: [ .19444, .44444, .10836, 0, .5 ],
                            104: [ 0, .69444, .01778, 0, .51667 ],
                            105: [ 0, .67937, .09718, 0, .23889 ],
                            106: [ .19444, .67937, .09162, 0, .26667 ],
                            107: [ 0, .69444, .08336, 0, .48889 ],
                            108: [ 0, .69444, .09483, 0, .23889 ],
                            109: [ 0, .44444, .01778, 0, .79445 ],
                            110: [ 0, .44444, .01778, 0, .51667 ],
                            111: [ 0, .44444, .06613, 0, .5 ],
                            112: [ .19444, .44444, .0389, 0, .51667 ],
                            113: [ .19444, .44444, .04169, 0, .51667 ],
                            114: [ 0, .44444, .10836, 0, .34167 ],
                            115: [ 0, .44444, .0778, 0, .38333 ],
                            116: [ 0, .57143, .07225, 0, .36111 ],
                            117: [ 0, .44444, .04169, 0, .51667 ],
                            118: [ 0, .44444, .10836, 0, .46111 ],
                            119: [ 0, .44444, .10836, 0, .68334 ],
                            120: [ 0, .44444, .09169, 0, .46111 ],
                            121: [ .19444, .44444, .10836, 0, .46111 ],
                            122: [ 0, .44444, .08752, 0, .43472 ],
                            126: [ .35, .32659, .08826, 0, .5 ],
                            168: [ 0, .67937, .06385, 0, .5 ],
                            176: [ 0, .69444, 0, 0, .73752 ],
                            184: [ .17014, 0, 0, 0, .44445 ],
                            305: [ 0, .44444, .04169, 0, .23889 ],
                            567: [ .19444, .44444, .04169, 0, .26667 ],
                            710: [ 0, .69444, .0799, 0, .5 ],
                            711: [ 0, .63194, .08432, 0, .5 ],
                            713: [ 0, .60889, .08776, 0, .5 ],
                            714: [ 0, .69444, .09205, 0, .5 ],
                            715: [ 0, .69444, 0, 0, .5 ],
                            728: [ 0, .69444, .09483, 0, .5 ],
                            729: [ 0, .67937, .07774, 0, .27778 ],
                            730: [ 0, .69444, 0, 0, .73752 ],
                            732: [ 0, .67659, .08826, 0, .5 ],
                            733: [ 0, .69444, .09205, 0, .5 ],
                            915: [ 0, .69444, .13372, 0, .54167 ],
                            916: [ 0, .69444, 0, 0, .83334 ],
                            920: [ 0, .69444, .07555, 0, .77778 ],
                            923: [ 0, .69444, 0, 0, .61111 ],
                            926: [ 0, .69444, .12816, 0, .66667 ],
                            928: [ 0, .69444, .08094, 0, .70834 ],
                            931: [ 0, .69444, .11983, 0, .72222 ],
                            933: [ 0, .69444, .09031, 0, .77778 ],
                            934: [ 0, .69444, .04603, 0, .72222 ],
                            936: [ 0, .69444, .09031, 0, .77778 ],
                            937: [ 0, .69444, .08293, 0, .72222 ],
                            8211: [ 0, .44444, .08616, 0, .5 ],
                            8212: [ 0, .44444, .08616, 0, 1 ],
                            8216: [ 0, .69444, .07816, 0, .27778 ],
                            8217: [ 0, .69444, .07816, 0, .27778 ],
                            8220: [ 0, .69444, .14205, 0, .5 ],
                            8221: [ 0, .69444, .00316, 0, .5 ]
                        },
                        "SansSerif-Regular": {
                            33: [ 0, .69444, 0, 0, .31945 ],
                            34: [ 0, .69444, 0, 0, .5 ],
                            35: [ .19444, .69444, 0, 0, .83334 ],
                            36: [ .05556, .75, 0, 0, .5 ],
                            37: [ .05556, .75, 0, 0, .83334 ],
                            38: [ 0, .69444, 0, 0, .75834 ],
                            39: [ 0, .69444, 0, 0, .27778 ],
                            40: [ .25, .75, 0, 0, .38889 ],
                            41: [ .25, .75, 0, 0, .38889 ],
                            42: [ 0, .75, 0, 0, .5 ],
                            43: [ .08333, .58333, 0, 0, .77778 ],
                            44: [ .125, .08333, 0, 0, .27778 ],
                            45: [ 0, .44444, 0, 0, .33333 ],
                            46: [ 0, .08333, 0, 0, .27778 ],
                            47: [ .25, .75, 0, 0, .5 ],
                            48: [ 0, .65556, 0, 0, .5 ],
                            49: [ 0, .65556, 0, 0, .5 ],
                            50: [ 0, .65556, 0, 0, .5 ],
                            51: [ 0, .65556, 0, 0, .5 ],
                            52: [ 0, .65556, 0, 0, .5 ],
                            53: [ 0, .65556, 0, 0, .5 ],
                            54: [ 0, .65556, 0, 0, .5 ],
                            55: [ 0, .65556, 0, 0, .5 ],
                            56: [ 0, .65556, 0, 0, .5 ],
                            57: [ 0, .65556, 0, 0, .5 ],
                            58: [ 0, .44444, 0, 0, .27778 ],
                            59: [ .125, .44444, 0, 0, .27778 ],
                            61: [ -.13, .37, 0, 0, .77778 ],
                            63: [ 0, .69444, 0, 0, .47222 ],
                            64: [ 0, .69444, 0, 0, .66667 ],
                            65: [ 0, .69444, 0, 0, .66667 ],
                            66: [ 0, .69444, 0, 0, .66667 ],
                            67: [ 0, .69444, 0, 0, .63889 ],
                            68: [ 0, .69444, 0, 0, .72223 ],
                            69: [ 0, .69444, 0, 0, .59722 ],
                            70: [ 0, .69444, 0, 0, .56945 ],
                            71: [ 0, .69444, 0, 0, .66667 ],
                            72: [ 0, .69444, 0, 0, .70834 ],
                            73: [ 0, .69444, 0, 0, .27778 ],
                            74: [ 0, .69444, 0, 0, .47222 ],
                            75: [ 0, .69444, 0, 0, .69445 ],
                            76: [ 0, .69444, 0, 0, .54167 ],
                            77: [ 0, .69444, 0, 0, .875 ],
                            78: [ 0, .69444, 0, 0, .70834 ],
                            79: [ 0, .69444, 0, 0, .73611 ],
                            80: [ 0, .69444, 0, 0, .63889 ],
                            81: [ .125, .69444, 0, 0, .73611 ],
                            82: [ 0, .69444, 0, 0, .64584 ],
                            83: [ 0, .69444, 0, 0, .55556 ],
                            84: [ 0, .69444, 0, 0, .68056 ],
                            85: [ 0, .69444, 0, 0, .6875 ],
                            86: [ 0, .69444, .01389, 0, .66667 ],
                            87: [ 0, .69444, .01389, 0, .94445 ],
                            88: [ 0, .69444, 0, 0, .66667 ],
                            89: [ 0, .69444, .025, 0, .66667 ],
                            90: [ 0, .69444, 0, 0, .61111 ],
                            91: [ .25, .75, 0, 0, .28889 ],
                            93: [ .25, .75, 0, 0, .28889 ],
                            94: [ 0, .69444, 0, 0, .5 ],
                            95: [ .35, .09444, .02778, 0, .5 ],
                            97: [ 0, .44444, 0, 0, .48056 ],
                            98: [ 0, .69444, 0, 0, .51667 ],
                            99: [ 0, .44444, 0, 0, .44445 ],
                            100: [ 0, .69444, 0, 0, .51667 ],
                            101: [ 0, .44444, 0, 0, .44445 ],
                            102: [ 0, .69444, .06944, 0, .30556 ],
                            103: [ .19444, .44444, .01389, 0, .5 ],
                            104: [ 0, .69444, 0, 0, .51667 ],
                            105: [ 0, .67937, 0, 0, .23889 ],
                            106: [ .19444, .67937, 0, 0, .26667 ],
                            107: [ 0, .69444, 0, 0, .48889 ],
                            108: [ 0, .69444, 0, 0, .23889 ],
                            109: [ 0, .44444, 0, 0, .79445 ],
                            110: [ 0, .44444, 0, 0, .51667 ],
                            111: [ 0, .44444, 0, 0, .5 ],
                            112: [ .19444, .44444, 0, 0, .51667 ],
                            113: [ .19444, .44444, 0, 0, .51667 ],
                            114: [ 0, .44444, .01389, 0, .34167 ],
                            115: [ 0, .44444, 0, 0, .38333 ],
                            116: [ 0, .57143, 0, 0, .36111 ],
                            117: [ 0, .44444, 0, 0, .51667 ],
                            118: [ 0, .44444, .01389, 0, .46111 ],
                            119: [ 0, .44444, .01389, 0, .68334 ],
                            120: [ 0, .44444, 0, 0, .46111 ],
                            121: [ .19444, .44444, .01389, 0, .46111 ],
                            122: [ 0, .44444, 0, 0, .43472 ],
                            126: [ .35, .32659, 0, 0, .5 ],
                            168: [ 0, .67937, 0, 0, .5 ],
                            176: [ 0, .69444, 0, 0, .66667 ],
                            184: [ .17014, 0, 0, 0, .44445 ],
                            305: [ 0, .44444, 0, 0, .23889 ],
                            567: [ .19444, .44444, 0, 0, .26667 ],
                            710: [ 0, .69444, 0, 0, .5 ],
                            711: [ 0, .63194, 0, 0, .5 ],
                            713: [ 0, .60889, 0, 0, .5 ],
                            714: [ 0, .69444, 0, 0, .5 ],
                            715: [ 0, .69444, 0, 0, .5 ],
                            728: [ 0, .69444, 0, 0, .5 ],
                            729: [ 0, .67937, 0, 0, .27778 ],
                            730: [ 0, .69444, 0, 0, .66667 ],
                            732: [ 0, .67659, 0, 0, .5 ],
                            733: [ 0, .69444, 0, 0, .5 ],
                            915: [ 0, .69444, 0, 0, .54167 ],
                            916: [ 0, .69444, 0, 0, .83334 ],
                            920: [ 0, .69444, 0, 0, .77778 ],
                            923: [ 0, .69444, 0, 0, .61111 ],
                            926: [ 0, .69444, 0, 0, .66667 ],
                            928: [ 0, .69444, 0, 0, .70834 ],
                            931: [ 0, .69444, 0, 0, .72222 ],
                            933: [ 0, .69444, 0, 0, .77778 ],
                            934: [ 0, .69444, 0, 0, .72222 ],
                            936: [ 0, .69444, 0, 0, .77778 ],
                            937: [ 0, .69444, 0, 0, .72222 ],
                            8211: [ 0, .44444, .02778, 0, .5 ],
                            8212: [ 0, .44444, .02778, 0, 1 ],
                            8216: [ 0, .69444, 0, 0, .27778 ],
                            8217: [ 0, .69444, 0, 0, .27778 ],
                            8220: [ 0, .69444, 0, 0, .5 ],
                            8221: [ 0, .69444, 0, 0, .5 ]
                        },
                        "Script-Regular": {
                            65: [ 0, .7, .22925, 0, .80253 ],
                            66: [ 0, .7, .04087, 0, .90757 ],
                            67: [ 0, .7, .1689, 0, .66619 ],
                            68: [ 0, .7, .09371, 0, .77443 ],
                            69: [ 0, .7, .18583, 0, .56162 ],
                            70: [ 0, .7, .13634, 0, .89544 ],
                            71: [ 0, .7, .17322, 0, .60961 ],
                            72: [ 0, .7, .29694, 0, .96919 ],
                            73: [ 0, .7, .19189, 0, .80907 ],
                            74: [ .27778, .7, .19189, 0, 1.05159 ],
                            75: [ 0, .7, .31259, 0, .91364 ],
                            76: [ 0, .7, .19189, 0, .87373 ],
                            77: [ 0, .7, .15981, 0, 1.08031 ],
                            78: [ 0, .7, .3525, 0, .9015 ],
                            79: [ 0, .7, .08078, 0, .73787 ],
                            80: [ 0, .7, .08078, 0, 1.01262 ],
                            81: [ 0, .7, .03305, 0, .88282 ],
                            82: [ 0, .7, .06259, 0, .85 ],
                            83: [ 0, .7, .19189, 0, .86767 ],
                            84: [ 0, .7, .29087, 0, .74697 ],
                            85: [ 0, .7, .25815, 0, .79996 ],
                            86: [ 0, .7, .27523, 0, .62204 ],
                            87: [ 0, .7, .27523, 0, .80532 ],
                            88: [ 0, .7, .26006, 0, .94445 ],
                            89: [ 0, .7, .2939, 0, .70961 ],
                            90: [ 0, .7, .24037, 0, .8212 ]
                        },
                        "Size1-Regular": {
                            40: [ .35001, .85, 0, 0, .45834 ],
                            41: [ .35001, .85, 0, 0, .45834 ],
                            47: [ .35001, .85, 0, 0, .57778 ],
                            91: [ .35001, .85, 0, 0, .41667 ],
                            92: [ .35001, .85, 0, 0, .57778 ],
                            93: [ .35001, .85, 0, 0, .41667 ],
                            123: [ .35001, .85, 0, 0, .58334 ],
                            125: [ .35001, .85, 0, 0, .58334 ],
                            710: [ 0, .72222, 0, 0, .55556 ],
                            732: [ 0, .72222, 0, 0, .55556 ],
                            770: [ 0, .72222, 0, 0, .55556 ],
                            771: [ 0, .72222, 0, 0, .55556 ],
                            8214: [ -99e-5, .601, 0, 0, .77778 ],
                            8593: [ 1e-5, .6, 0, 0, .66667 ],
                            8595: [ 1e-5, .6, 0, 0, .66667 ],
                            8657: [ 1e-5, .6, 0, 0, .77778 ],
                            8659: [ 1e-5, .6, 0, 0, .77778 ],
                            8719: [ .25001, .75, 0, 0, .94445 ],
                            8720: [ .25001, .75, 0, 0, .94445 ],
                            8721: [ .25001, .75, 0, 0, 1.05556 ],
                            8730: [ .35001, .85, 0, 0, 1 ],
                            8739: [ -.00599, .606, 0, 0, .33333 ],
                            8741: [ -.00599, .606, 0, 0, .55556 ],
                            8747: [ .30612, .805, .19445, 0, .47222 ],
                            8748: [ .306, .805, .19445, 0, .47222 ],
                            8749: [ .306, .805, .19445, 0, .47222 ],
                            8750: [ .30612, .805, .19445, 0, .47222 ],
                            8896: [ .25001, .75, 0, 0, .83334 ],
                            8897: [ .25001, .75, 0, 0, .83334 ],
                            8898: [ .25001, .75, 0, 0, .83334 ],
                            8899: [ .25001, .75, 0, 0, .83334 ],
                            8968: [ .35001, .85, 0, 0, .47222 ],
                            8969: [ .35001, .85, 0, 0, .47222 ],
                            8970: [ .35001, .85, 0, 0, .47222 ],
                            8971: [ .35001, .85, 0, 0, .47222 ],
                            9168: [ -99e-5, .601, 0, 0, .66667 ],
                            10216: [ .35001, .85, 0, 0, .47222 ],
                            10217: [ .35001, .85, 0, 0, .47222 ],
                            10752: [ .25001, .75, 0, 0, 1.11111 ],
                            10753: [ .25001, .75, 0, 0, 1.11111 ],
                            10754: [ .25001, .75, 0, 0, 1.11111 ],
                            10756: [ .25001, .75, 0, 0, .83334 ],
                            10758: [ .25001, .75, 0, 0, .83334 ]
                        },
                        "Size2-Regular": {
                            40: [ .65002, 1.15, 0, 0, .59722 ],
                            41: [ .65002, 1.15, 0, 0, .59722 ],
                            47: [ .65002, 1.15, 0, 0, .81111 ],
                            91: [ .65002, 1.15, 0, 0, .47222 ],
                            92: [ .65002, 1.15, 0, 0, .81111 ],
                            93: [ .65002, 1.15, 0, 0, .47222 ],
                            123: [ .65002, 1.15, 0, 0, .66667 ],
                            125: [ .65002, 1.15, 0, 0, .66667 ],
                            710: [ 0, .75, 0, 0, 1 ],
                            732: [ 0, .75, 0, 0, 1 ],
                            770: [ 0, .75, 0, 0, 1 ],
                            771: [ 0, .75, 0, 0, 1 ],
                            8719: [ .55001, 1.05, 0, 0, 1.27778 ],
                            8720: [ .55001, 1.05, 0, 0, 1.27778 ],
                            8721: [ .55001, 1.05, 0, 0, 1.44445 ],
                            8730: [ .65002, 1.15, 0, 0, 1 ],
                            8747: [ .86225, 1.36, .44445, 0, .55556 ],
                            8748: [ .862, 1.36, .44445, 0, .55556 ],
                            8749: [ .862, 1.36, .44445, 0, .55556 ],
                            8750: [ .86225, 1.36, .44445, 0, .55556 ],
                            8896: [ .55001, 1.05, 0, 0, 1.11111 ],
                            8897: [ .55001, 1.05, 0, 0, 1.11111 ],
                            8898: [ .55001, 1.05, 0, 0, 1.11111 ],
                            8899: [ .55001, 1.05, 0, 0, 1.11111 ],
                            8968: [ .65002, 1.15, 0, 0, .52778 ],
                            8969: [ .65002, 1.15, 0, 0, .52778 ],
                            8970: [ .65002, 1.15, 0, 0, .52778 ],
                            8971: [ .65002, 1.15, 0, 0, .52778 ],
                            10216: [ .65002, 1.15, 0, 0, .61111 ],
                            10217: [ .65002, 1.15, 0, 0, .61111 ],
                            10752: [ .55001, 1.05, 0, 0, 1.51112 ],
                            10753: [ .55001, 1.05, 0, 0, 1.51112 ],
                            10754: [ .55001, 1.05, 0, 0, 1.51112 ],
                            10756: [ .55001, 1.05, 0, 0, 1.11111 ],
                            10758: [ .55001, 1.05, 0, 0, 1.11111 ]
                        },
                        "Size3-Regular": {
                            40: [ .95003, 1.45, 0, 0, .73611 ],
                            41: [ .95003, 1.45, 0, 0, .73611 ],
                            47: [ .95003, 1.45, 0, 0, 1.04445 ],
                            91: [ .95003, 1.45, 0, 0, .52778 ],
                            92: [ .95003, 1.45, 0, 0, 1.04445 ],
                            93: [ .95003, 1.45, 0, 0, .52778 ],
                            123: [ .95003, 1.45, 0, 0, .75 ],
                            125: [ .95003, 1.45, 0, 0, .75 ],
                            710: [ 0, .75, 0, 0, 1.44445 ],
                            732: [ 0, .75, 0, 0, 1.44445 ],
                            770: [ 0, .75, 0, 0, 1.44445 ],
                            771: [ 0, .75, 0, 0, 1.44445 ],
                            8730: [ .95003, 1.45, 0, 0, 1 ],
                            8968: [ .95003, 1.45, 0, 0, .58334 ],
                            8969: [ .95003, 1.45, 0, 0, .58334 ],
                            8970: [ .95003, 1.45, 0, 0, .58334 ],
                            8971: [ .95003, 1.45, 0, 0, .58334 ],
                            10216: [ .95003, 1.45, 0, 0, .75 ],
                            10217: [ .95003, 1.45, 0, 0, .75 ]
                        },
                        "Size4-Regular": {
                            40: [ 1.25003, 1.75, 0, 0, .79167 ],
                            41: [ 1.25003, 1.75, 0, 0, .79167 ],
                            47: [ 1.25003, 1.75, 0, 0, 1.27778 ],
                            91: [ 1.25003, 1.75, 0, 0, .58334 ],
                            92: [ 1.25003, 1.75, 0, 0, 1.27778 ],
                            93: [ 1.25003, 1.75, 0, 0, .58334 ],
                            123: [ 1.25003, 1.75, 0, 0, .80556 ],
                            125: [ 1.25003, 1.75, 0, 0, .80556 ],
                            710: [ 0, .825, 0, 0, 1.8889 ],
                            732: [ 0, .825, 0, 0, 1.8889 ],
                            770: [ 0, .825, 0, 0, 1.8889 ],
                            771: [ 0, .825, 0, 0, 1.8889 ],
                            8730: [ 1.25003, 1.75, 0, 0, 1 ],
                            8968: [ 1.25003, 1.75, 0, 0, .63889 ],
                            8969: [ 1.25003, 1.75, 0, 0, .63889 ],
                            8970: [ 1.25003, 1.75, 0, 0, .63889 ],
                            8971: [ 1.25003, 1.75, 0, 0, .63889 ],
                            9115: [ .64502, 1.155, 0, 0, .875 ],
                            9116: [ 1e-5, .6, 0, 0, .875 ],
                            9117: [ .64502, 1.155, 0, 0, .875 ],
                            9118: [ .64502, 1.155, 0, 0, .875 ],
                            9119: [ 1e-5, .6, 0, 0, .875 ],
                            9120: [ .64502, 1.155, 0, 0, .875 ],
                            9121: [ .64502, 1.155, 0, 0, .66667 ],
                            9122: [ -99e-5, .601, 0, 0, .66667 ],
                            9123: [ .64502, 1.155, 0, 0, .66667 ],
                            9124: [ .64502, 1.155, 0, 0, .66667 ],
                            9125: [ -99e-5, .601, 0, 0, .66667 ],
                            9126: [ .64502, 1.155, 0, 0, .66667 ],
                            9127: [ 1e-5, .9, 0, 0, .88889 ],
                            9128: [ .65002, 1.15, 0, 0, .88889 ],
                            9129: [ .90001, 0, 0, 0, .88889 ],
                            9130: [ 0, .3, 0, 0, .88889 ],
                            9131: [ 1e-5, .9, 0, 0, .88889 ],
                            9132: [ .65002, 1.15, 0, 0, .88889 ],
                            9133: [ .90001, 0, 0, 0, .88889 ],
                            9143: [ .88502, .915, 0, 0, 1.05556 ],
                            10216: [ 1.25003, 1.75, 0, 0, .80556 ],
                            10217: [ 1.25003, 1.75, 0, 0, .80556 ],
                            57344: [ -.00499, .605, 0, 0, 1.05556 ],
                            57345: [ -.00499, .605, 0, 0, 1.05556 ],
                            57680: [ 0, .12, 0, 0, .45 ],
                            57681: [ 0, .12, 0, 0, .45 ],
                            57682: [ 0, .12, 0, 0, .45 ],
                            57683: [ 0, .12, 0, 0, .45 ]
                        },
                        "Typewriter-Regular": {
                            32: [ 0, 0, 0, 0, .525 ],
                            33: [ 0, .61111, 0, 0, .525 ],
                            34: [ 0, .61111, 0, 0, .525 ],
                            35: [ 0, .61111, 0, 0, .525 ],
                            36: [ .08333, .69444, 0, 0, .525 ],
                            37: [ .08333, .69444, 0, 0, .525 ],
                            38: [ 0, .61111, 0, 0, .525 ],
                            39: [ 0, .61111, 0, 0, .525 ],
                            40: [ .08333, .69444, 0, 0, .525 ],
                            41: [ .08333, .69444, 0, 0, .525 ],
                            42: [ 0, .52083, 0, 0, .525 ],
                            43: [ -.08056, .53055, 0, 0, .525 ],
                            44: [ .13889, .125, 0, 0, .525 ],
                            45: [ -.08056, .53055, 0, 0, .525 ],
                            46: [ 0, .125, 0, 0, .525 ],
                            47: [ .08333, .69444, 0, 0, .525 ],
                            48: [ 0, .61111, 0, 0, .525 ],
                            49: [ 0, .61111, 0, 0, .525 ],
                            50: [ 0, .61111, 0, 0, .525 ],
                            51: [ 0, .61111, 0, 0, .525 ],
                            52: [ 0, .61111, 0, 0, .525 ],
                            53: [ 0, .61111, 0, 0, .525 ],
                            54: [ 0, .61111, 0, 0, .525 ],
                            55: [ 0, .61111, 0, 0, .525 ],
                            56: [ 0, .61111, 0, 0, .525 ],
                            57: [ 0, .61111, 0, 0, .525 ],
                            58: [ 0, .43056, 0, 0, .525 ],
                            59: [ .13889, .43056, 0, 0, .525 ],
                            60: [ -.05556, .55556, 0, 0, .525 ],
                            61: [ -.19549, .41562, 0, 0, .525 ],
                            62: [ -.05556, .55556, 0, 0, .525 ],
                            63: [ 0, .61111, 0, 0, .525 ],
                            64: [ 0, .61111, 0, 0, .525 ],
                            65: [ 0, .61111, 0, 0, .525 ],
                            66: [ 0, .61111, 0, 0, .525 ],
                            67: [ 0, .61111, 0, 0, .525 ],
                            68: [ 0, .61111, 0, 0, .525 ],
                            69: [ 0, .61111, 0, 0, .525 ],
                            70: [ 0, .61111, 0, 0, .525 ],
                            71: [ 0, .61111, 0, 0, .525 ],
                            72: [ 0, .61111, 0, 0, .525 ],
                            73: [ 0, .61111, 0, 0, .525 ],
                            74: [ 0, .61111, 0, 0, .525 ],
                            75: [ 0, .61111, 0, 0, .525 ],
                            76: [ 0, .61111, 0, 0, .525 ],
                            77: [ 0, .61111, 0, 0, .525 ],
                            78: [ 0, .61111, 0, 0, .525 ],
                            79: [ 0, .61111, 0, 0, .525 ],
                            80: [ 0, .61111, 0, 0, .525 ],
                            81: [ .13889, .61111, 0, 0, .525 ],
                            82: [ 0, .61111, 0, 0, .525 ],
                            83: [ 0, .61111, 0, 0, .525 ],
                            84: [ 0, .61111, 0, 0, .525 ],
                            85: [ 0, .61111, 0, 0, .525 ],
                            86: [ 0, .61111, 0, 0, .525 ],
                            87: [ 0, .61111, 0, 0, .525 ],
                            88: [ 0, .61111, 0, 0, .525 ],
                            89: [ 0, .61111, 0, 0, .525 ],
                            90: [ 0, .61111, 0, 0, .525 ],
                            91: [ .08333, .69444, 0, 0, .525 ],
                            92: [ .08333, .69444, 0, 0, .525 ],
                            93: [ .08333, .69444, 0, 0, .525 ],
                            94: [ 0, .61111, 0, 0, .525 ],
                            95: [ .09514, 0, 0, 0, .525 ],
                            96: [ 0, .61111, 0, 0, .525 ],
                            97: [ 0, .43056, 0, 0, .525 ],
                            98: [ 0, .61111, 0, 0, .525 ],
                            99: [ 0, .43056, 0, 0, .525 ],
                            100: [ 0, .61111, 0, 0, .525 ],
                            101: [ 0, .43056, 0, 0, .525 ],
                            102: [ 0, .61111, 0, 0, .525 ],
                            103: [ .22222, .43056, 0, 0, .525 ],
                            104: [ 0, .61111, 0, 0, .525 ],
                            105: [ 0, .61111, 0, 0, .525 ],
                            106: [ .22222, .61111, 0, 0, .525 ],
                            107: [ 0, .61111, 0, 0, .525 ],
                            108: [ 0, .61111, 0, 0, .525 ],
                            109: [ 0, .43056, 0, 0, .525 ],
                            110: [ 0, .43056, 0, 0, .525 ],
                            111: [ 0, .43056, 0, 0, .525 ],
                            112: [ .22222, .43056, 0, 0, .525 ],
                            113: [ .22222, .43056, 0, 0, .525 ],
                            114: [ 0, .43056, 0, 0, .525 ],
                            115: [ 0, .43056, 0, 0, .525 ],
                            116: [ 0, .55358, 0, 0, .525 ],
                            117: [ 0, .43056, 0, 0, .525 ],
                            118: [ 0, .43056, 0, 0, .525 ],
                            119: [ 0, .43056, 0, 0, .525 ],
                            120: [ 0, .43056, 0, 0, .525 ],
                            121: [ .22222, .43056, 0, 0, .525 ],
                            122: [ 0, .43056, 0, 0, .525 ],
                            123: [ .08333, .69444, 0, 0, .525 ],
                            124: [ .08333, .69444, 0, 0, .525 ],
                            125: [ .08333, .69444, 0, 0, .525 ],
                            126: [ 0, .61111, 0, 0, .525 ],
                            127: [ 0, .61111, 0, 0, .525 ],
                            160: [ 0, 0, 0, 0, .525 ],
                            176: [ 0, .61111, 0, 0, .525 ],
                            184: [ .19445, 0, 0, 0, .525 ],
                            305: [ 0, .43056, 0, 0, .525 ],
                            567: [ .22222, .43056, 0, 0, .525 ],
                            711: [ 0, .56597, 0, 0, .525 ],
                            713: [ 0, .56555, 0, 0, .525 ],
                            714: [ 0, .61111, 0, 0, .525 ],
                            715: [ 0, .61111, 0, 0, .525 ],
                            728: [ 0, .61111, 0, 0, .525 ],
                            730: [ 0, .61111, 0, 0, .525 ],
                            770: [ 0, .61111, 0, 0, .525 ],
                            771: [ 0, .61111, 0, 0, .525 ],
                            776: [ 0, .61111, 0, 0, .525 ],
                            915: [ 0, .61111, 0, 0, .525 ],
                            916: [ 0, .61111, 0, 0, .525 ],
                            920: [ 0, .61111, 0, 0, .525 ],
                            923: [ 0, .61111, 0, 0, .525 ],
                            926: [ 0, .61111, 0, 0, .525 ],
                            928: [ 0, .61111, 0, 0, .525 ],
                            931: [ 0, .61111, 0, 0, .525 ],
                            933: [ 0, .61111, 0, 0, .525 ],
                            934: [ 0, .61111, 0, 0, .525 ],
                            936: [ 0, .61111, 0, 0, .525 ],
                            937: [ 0, .61111, 0, 0, .525 ],
                            8216: [ 0, .61111, 0, 0, .525 ],
                            8217: [ 0, .61111, 0, 0, .525 ],
                            8242: [ 0, .61111, 0, 0, .525 ],
                            9251: [ .11111, .21944, 0, 0, .525 ]
                        }
                    }, sigmasAndXis = {
                        slant: [ .25, .25, .25 ],
                        space: [ 0, 0, 0 ],
                        stretch: [ 0, 0, 0 ],
                        shrink: [ 0, 0, 0 ],
                        xHeight: [ .431, .431, .431 ],
                        quad: [ 1, 1.171, 1.472 ],
                        extraSpace: [ 0, 0, 0 ],
                        num1: [ .677, .732, .925 ],
                        num2: [ .394, .384, .387 ],
                        num3: [ .444, .471, .504 ],
                        denom1: [ .686, .752, 1.025 ],
                        denom2: [ .345, .344, .532 ],
                        sup1: [ .413, .503, .504 ],
                        sup2: [ .363, .431, .404 ],
                        sup3: [ .289, .286, .294 ],
                        sub1: [ .15, .143, .2 ],
                        sub2: [ .247, .286, .4 ],
                        supDrop: [ .386, .353, .494 ],
                        subDrop: [ .05, .071, .1 ],
                        delim1: [ 2.39, 1.7, 1.98 ],
                        delim2: [ 1.01, 1.157, 1.42 ],
                        axisHeight: [ .25, .25, .25 ],
                        defaultRuleThickness: [ .04, .049, .049 ],
                        bigOpSpacing1: [ .111, .111, .111 ],
                        bigOpSpacing2: [ .166, .166, .166 ],
                        bigOpSpacing3: [ .2, .2, .2 ],
                        bigOpSpacing4: [ .6, .611, .611 ],
                        bigOpSpacing5: [ .1, .143, .143 ],
                        sqrtRuleThickness: [ .04, .04, .04 ],
                        ptPerEm: [ 10, 10, 10 ],
                        doubleRuleSep: [ .2, .2, .2 ],
                        arrayRuleWidth: [ .04, .04, .04 ],
                        fboxsep: [ .3, .3, .3 ],
                        fboxrule: [ .04, .04, .04 ]
                    }, extraCharacterMap = {
                        "Å": "A",
                        "Ç": "C",
                        "Ð": "D",
                        "Þ": "o",
                        "å": "a",
                        "ç": "c",
                        "ð": "d",
                        "þ": "o",
                        "А": "A",
                        "Б": "B",
                        "В": "B",
                        "Г": "F",
                        "Д": "A",
                        "Е": "E",
                        "Ж": "K",
                        "З": "3",
                        "И": "N",
                        "Й": "N",
                        "К": "K",
                        "Л": "N",
                        "М": "M",
                        "Н": "H",
                        "О": "O",
                        "П": "N",
                        "Р": "P",
                        "С": "C",
                        "Т": "T",
                        "У": "y",
                        "Ф": "O",
                        "Х": "X",
                        "Ц": "U",
                        "Ч": "h",
                        "Ш": "W",
                        "Щ": "W",
                        "Ъ": "B",
                        "Ы": "X",
                        "Ь": "B",
                        "Э": "3",
                        "Ю": "X",
                        "Я": "R",
                        "а": "a",
                        "б": "b",
                        "в": "a",
                        "г": "r",
                        "д": "y",
                        "е": "e",
                        "ж": "m",
                        "з": "e",
                        "и": "n",
                        "й": "n",
                        "к": "n",
                        "л": "n",
                        "м": "m",
                        "н": "n",
                        "о": "o",
                        "п": "n",
                        "р": "p",
                        "с": "c",
                        "т": "o",
                        "у": "y",
                        "ф": "b",
                        "х": "x",
                        "ц": "n",
                        "ч": "n",
                        "ш": "w",
                        "щ": "w",
                        "ъ": "a",
                        "ы": "m",
                        "ь": "a",
                        "э": "e",
                        "ю": "m",
                        "я": "r"
                    };
                    function getCharacterMetrics(character, font, mode) {
                        if (!fontMetricsData[font]) throw new Error("Font metrics not found for font: " + font + ".");
                        var ch = character.charCodeAt(0), metrics = fontMetricsData[font][ch];
                        if (!metrics && character[0] in extraCharacterMap && (ch = extraCharacterMap[character[0]].charCodeAt(0), 
                        metrics = fontMetricsData[font][ch]), metrics || "text" !== mode || supportedCodepoint(ch) && (metrics = fontMetricsData[font][77]), 
                        metrics) return {
                            depth: metrics[0],
                            height: metrics[1],
                            italic: metrics[2],
                            skew: metrics[3],
                            width: metrics[4]
                        };
                    }
                    var fontMetricsBySizeIndex = {};
                    var ATOMS = {
                        bin: 1,
                        close: 1,
                        inner: 1,
                        open: 1,
                        punct: 1,
                        rel: 1
                    }, NON_ATOMS = {
                        "accent-token": 1,
                        mathord: 1,
                        "op-token": 1,
                        spacing: 1,
                        textord: 1
                    }, symbols = {
                        math: {},
                        text: {}
                    }, src_symbols = symbols;
                    function defineSymbol(mode, font, group, replace, name, acceptUnicodeChar) {
                        symbols[mode][name] = {
                            font: font,
                            group: group,
                            replace: replace
                        }, acceptUnicodeChar && replace && (symbols[mode][replace] = symbols[mode][name]);
                    }
                    var main = "main", ams = "ams", bin = "bin", mathord = "mathord", op = "op-token", rel = "rel";
                    defineSymbol("math", main, rel, "≡", "\\equiv", !0), defineSymbol("math", main, rel, "≺", "\\prec", !0), 
                    defineSymbol("math", main, rel, "≻", "\\succ", !0), defineSymbol("math", main, rel, "∼", "\\sim", !0), 
                    defineSymbol("math", main, rel, "⊥", "\\perp"), defineSymbol("math", main, rel, "⪯", "\\preceq", !0), 
                    defineSymbol("math", main, rel, "⪰", "\\succeq", !0), defineSymbol("math", main, rel, "≃", "\\simeq", !0), 
                    defineSymbol("math", main, rel, "∣", "\\mid", !0), defineSymbol("math", main, rel, "≪", "\\ll", !0), 
                    defineSymbol("math", main, rel, "≫", "\\gg", !0), defineSymbol("math", main, rel, "≍", "\\asymp", !0), 
                    defineSymbol("math", main, rel, "∥", "\\parallel"), defineSymbol("math", main, rel, "⋈", "\\bowtie", !0), 
                    defineSymbol("math", main, rel, "⌣", "\\smile", !0), defineSymbol("math", main, rel, "⊑", "\\sqsubseteq", !0), 
                    defineSymbol("math", main, rel, "⊒", "\\sqsupseteq", !0), defineSymbol("math", main, rel, "≐", "\\doteq", !0), 
                    defineSymbol("math", main, rel, "⌢", "\\frown", !0), defineSymbol("math", main, rel, "∋", "\\ni", !0), 
                    defineSymbol("math", main, rel, "∝", "\\propto", !0), defineSymbol("math", main, rel, "⊢", "\\vdash", !0), 
                    defineSymbol("math", main, rel, "⊣", "\\dashv", !0), defineSymbol("math", main, rel, "∋", "\\owns"), 
                    defineSymbol("math", main, "punct", ".", "\\ldotp"), defineSymbol("math", main, "punct", "⋅", "\\cdotp"), 
                    defineSymbol("math", main, "textord", "#", "\\#"), defineSymbol("text", main, "textord", "#", "\\#"), 
                    defineSymbol("math", main, "textord", "&", "\\&"), defineSymbol("text", main, "textord", "&", "\\&"), 
                    defineSymbol("math", main, "textord", "ℵ", "\\aleph", !0), defineSymbol("math", main, "textord", "∀", "\\forall", !0), 
                    defineSymbol("math", main, "textord", "ℏ", "\\hbar", !0), defineSymbol("math", main, "textord", "∃", "\\exists", !0), 
                    defineSymbol("math", main, "textord", "∇", "\\nabla", !0), defineSymbol("math", main, "textord", "♭", "\\flat", !0), 
                    defineSymbol("math", main, "textord", "ℓ", "\\ell", !0), defineSymbol("math", main, "textord", "♮", "\\natural", !0), 
                    defineSymbol("math", main, "textord", "♣", "\\clubsuit", !0), defineSymbol("math", main, "textord", "℘", "\\wp", !0), 
                    defineSymbol("math", main, "textord", "♯", "\\sharp", !0), defineSymbol("math", main, "textord", "♢", "\\diamondsuit", !0), 
                    defineSymbol("math", main, "textord", "ℜ", "\\Re", !0), defineSymbol("math", main, "textord", "♡", "\\heartsuit", !0), 
                    defineSymbol("math", main, "textord", "ℑ", "\\Im", !0), defineSymbol("math", main, "textord", "♠", "\\spadesuit", !0), 
                    defineSymbol("text", main, "textord", "§", "\\S", !0), defineSymbol("text", main, "textord", "¶", "\\P", !0), 
                    defineSymbol("math", main, "textord", "†", "\\dag"), defineSymbol("text", main, "textord", "†", "\\dag"), 
                    defineSymbol("text", main, "textord", "†", "\\textdagger"), defineSymbol("math", main, "textord", "‡", "\\ddag"), 
                    defineSymbol("text", main, "textord", "‡", "\\ddag"), defineSymbol("text", main, "textord", "‡", "\\textdaggerdbl"), 
                    defineSymbol("math", main, "close", "⎱", "\\rmoustache", !0), defineSymbol("math", main, "open", "⎰", "\\lmoustache", !0), 
                    defineSymbol("math", main, "close", "⟯", "\\rgroup", !0), defineSymbol("math", main, "open", "⟮", "\\lgroup", !0), 
                    defineSymbol("math", main, bin, "∓", "\\mp", !0), defineSymbol("math", main, bin, "⊖", "\\ominus", !0), 
                    defineSymbol("math", main, bin, "⊎", "\\uplus", !0), defineSymbol("math", main, bin, "⊓", "\\sqcap", !0), 
                    defineSymbol("math", main, bin, "∗", "\\ast"), defineSymbol("math", main, bin, "⊔", "\\sqcup", !0), 
                    defineSymbol("math", main, bin, "◯", "\\bigcirc"), defineSymbol("math", main, bin, "∙", "\\bullet"), 
                    defineSymbol("math", main, bin, "‡", "\\ddagger"), defineSymbol("math", main, bin, "≀", "\\wr", !0), 
                    defineSymbol("math", main, bin, "⨿", "\\amalg"), defineSymbol("math", main, bin, "&", "\\And"), 
                    defineSymbol("math", main, rel, "⟵", "\\longleftarrow", !0), defineSymbol("math", main, rel, "⇐", "\\Leftarrow", !0), 
                    defineSymbol("math", main, rel, "⟸", "\\Longleftarrow", !0), defineSymbol("math", main, rel, "⟶", "\\longrightarrow", !0), 
                    defineSymbol("math", main, rel, "⇒", "\\Rightarrow", !0), defineSymbol("math", main, rel, "⟹", "\\Longrightarrow", !0), 
                    defineSymbol("math", main, rel, "↔", "\\leftrightarrow", !0), defineSymbol("math", main, rel, "⟷", "\\longleftrightarrow", !0), 
                    defineSymbol("math", main, rel, "⇔", "\\Leftrightarrow", !0), defineSymbol("math", main, rel, "⟺", "\\Longleftrightarrow", !0), 
                    defineSymbol("math", main, rel, "↦", "\\mapsto", !0), defineSymbol("math", main, rel, "⟼", "\\longmapsto", !0), 
                    defineSymbol("math", main, rel, "↗", "\\nearrow", !0), defineSymbol("math", main, rel, "↩", "\\hookleftarrow", !0), 
                    defineSymbol("math", main, rel, "↪", "\\hookrightarrow", !0), defineSymbol("math", main, rel, "↘", "\\searrow", !0), 
                    defineSymbol("math", main, rel, "↼", "\\leftharpoonup", !0), defineSymbol("math", main, rel, "⇀", "\\rightharpoonup", !0), 
                    defineSymbol("math", main, rel, "↙", "\\swarrow", !0), defineSymbol("math", main, rel, "↽", "\\leftharpoondown", !0), 
                    defineSymbol("math", main, rel, "⇁", "\\rightharpoondown", !0), defineSymbol("math", main, rel, "↖", "\\nwarrow", !0), 
                    defineSymbol("math", main, rel, "⇌", "\\rightleftharpoons", !0), defineSymbol("math", ams, rel, "≮", "\\nless", !0), 
                    defineSymbol("math", ams, rel, "", "\\@nleqslant"), defineSymbol("math", ams, rel, "", "\\@nleqq"), 
                    defineSymbol("math", ams, rel, "⪇", "\\lneq", !0), defineSymbol("math", ams, rel, "≨", "\\lneqq", !0), 
                    defineSymbol("math", ams, rel, "", "\\@lvertneqq"), defineSymbol("math", ams, rel, "⋦", "\\lnsim", !0), 
                    defineSymbol("math", ams, rel, "⪉", "\\lnapprox", !0), defineSymbol("math", ams, rel, "⊀", "\\nprec", !0), 
                    defineSymbol("math", ams, rel, "⋠", "\\npreceq", !0), defineSymbol("math", ams, rel, "⋨", "\\precnsim", !0), 
                    defineSymbol("math", ams, rel, "⪹", "\\precnapprox", !0), defineSymbol("math", ams, rel, "≁", "\\nsim", !0), 
                    defineSymbol("math", ams, rel, "", "\\@nshortmid"), defineSymbol("math", ams, rel, "∤", "\\nmid", !0), 
                    defineSymbol("math", ams, rel, "⊬", "\\nvdash", !0), defineSymbol("math", ams, rel, "⊭", "\\nvDash", !0), 
                    defineSymbol("math", ams, rel, "⋪", "\\ntriangleleft"), defineSymbol("math", ams, rel, "⋬", "\\ntrianglelefteq", !0), 
                    defineSymbol("math", ams, rel, "⊊", "\\subsetneq", !0), defineSymbol("math", ams, rel, "", "\\@varsubsetneq"), 
                    defineSymbol("math", ams, rel, "⫋", "\\subsetneqq", !0), defineSymbol("math", ams, rel, "", "\\@varsubsetneqq"), 
                    defineSymbol("math", ams, rel, "≯", "\\ngtr", !0), defineSymbol("math", ams, rel, "", "\\@ngeqslant"), 
                    defineSymbol("math", ams, rel, "", "\\@ngeqq"), defineSymbol("math", ams, rel, "⪈", "\\gneq", !0), 
                    defineSymbol("math", ams, rel, "≩", "\\gneqq", !0), defineSymbol("math", ams, rel, "", "\\@gvertneqq"), 
                    defineSymbol("math", ams, rel, "⋧", "\\gnsim", !0), defineSymbol("math", ams, rel, "⪊", "\\gnapprox", !0), 
                    defineSymbol("math", ams, rel, "⊁", "\\nsucc", !0), defineSymbol("math", ams, rel, "⋡", "\\nsucceq", !0), 
                    defineSymbol("math", ams, rel, "⋩", "\\succnsim", !0), defineSymbol("math", ams, rel, "⪺", "\\succnapprox", !0), 
                    defineSymbol("math", ams, rel, "≆", "\\ncong", !0), defineSymbol("math", ams, rel, "", "\\@nshortparallel"), 
                    defineSymbol("math", ams, rel, "∦", "\\nparallel", !0), defineSymbol("math", ams, rel, "⊯", "\\nVDash", !0), 
                    defineSymbol("math", ams, rel, "⋫", "\\ntriangleright"), defineSymbol("math", ams, rel, "⋭", "\\ntrianglerighteq", !0), 
                    defineSymbol("math", ams, rel, "", "\\@nsupseteqq"), defineSymbol("math", ams, rel, "⊋", "\\supsetneq", !0), 
                    defineSymbol("math", ams, rel, "", "\\@varsupsetneq"), defineSymbol("math", ams, rel, "⫌", "\\supsetneqq", !0), 
                    defineSymbol("math", ams, rel, "", "\\@varsupsetneqq"), defineSymbol("math", ams, rel, "⊮", "\\nVdash", !0), 
                    defineSymbol("math", ams, rel, "⪵", "\\precneqq", !0), defineSymbol("math", ams, rel, "⪶", "\\succneqq", !0), 
                    defineSymbol("math", ams, rel, "", "\\@nsubseteqq"), defineSymbol("math", ams, bin, "⊴", "\\unlhd"), 
                    defineSymbol("math", ams, bin, "⊵", "\\unrhd"), defineSymbol("math", ams, rel, "↚", "\\nleftarrow", !0), 
                    defineSymbol("math", ams, rel, "↛", "\\nrightarrow", !0), defineSymbol("math", ams, rel, "⇍", "\\nLeftarrow", !0), 
                    defineSymbol("math", ams, rel, "⇏", "\\nRightarrow", !0), defineSymbol("math", ams, rel, "↮", "\\nleftrightarrow", !0), 
                    defineSymbol("math", ams, rel, "⇎", "\\nLeftrightarrow", !0), defineSymbol("math", ams, rel, "△", "\\vartriangle"), 
                    defineSymbol("math", ams, "textord", "ℏ", "\\hslash"), defineSymbol("math", ams, "textord", "▽", "\\triangledown"), 
                    defineSymbol("math", ams, "textord", "◊", "\\lozenge"), defineSymbol("math", ams, "textord", "Ⓢ", "\\circledS"), 
                    defineSymbol("math", ams, "textord", "®", "\\circledR"), defineSymbol("text", ams, "textord", "®", "\\circledR"), 
                    defineSymbol("math", ams, "textord", "∡", "\\measuredangle", !0), defineSymbol("math", ams, "textord", "∄", "\\nexists"), 
                    defineSymbol("math", ams, "textord", "℧", "\\mho"), defineSymbol("math", ams, "textord", "Ⅎ", "\\Finv", !0), 
                    defineSymbol("math", ams, "textord", "⅁", "\\Game", !0), defineSymbol("math", ams, "textord", "‵", "\\backprime"), 
                    defineSymbol("math", ams, "textord", "▲", "\\blacktriangle"), defineSymbol("math", ams, "textord", "▼", "\\blacktriangledown"), 
                    defineSymbol("math", ams, "textord", "■", "\\blacksquare"), defineSymbol("math", ams, "textord", "⧫", "\\blacklozenge"), 
                    defineSymbol("math", ams, "textord", "★", "\\bigstar"), defineSymbol("math", ams, "textord", "∢", "\\sphericalangle", !0), 
                    defineSymbol("math", ams, "textord", "∁", "\\complement", !0), defineSymbol("math", ams, "textord", "ð", "\\eth", !0), 
                    defineSymbol("math", ams, "textord", "╱", "\\diagup"), defineSymbol("math", ams, "textord", "╲", "\\diagdown"), 
                    defineSymbol("math", ams, "textord", "□", "\\square"), defineSymbol("math", ams, "textord", "□", "\\Box"), 
                    defineSymbol("math", ams, "textord", "◊", "\\Diamond"), defineSymbol("math", ams, "textord", "¥", "\\yen", !0), 
                    defineSymbol("text", ams, "textord", "¥", "\\yen", !0), defineSymbol("math", ams, "textord", "✓", "\\checkmark", !0), 
                    defineSymbol("text", ams, "textord", "✓", "\\checkmark"), defineSymbol("math", ams, "textord", "ℶ", "\\beth", !0), 
                    defineSymbol("math", ams, "textord", "ℸ", "\\daleth", !0), defineSymbol("math", ams, "textord", "ℷ", "\\gimel", !0), 
                    defineSymbol("math", ams, "textord", "ϝ", "\\digamma", !0), defineSymbol("math", ams, "textord", "ϰ", "\\varkappa"), 
                    defineSymbol("math", ams, "open", "┌", "\\ulcorner", !0), defineSymbol("math", ams, "close", "┐", "\\urcorner", !0), 
                    defineSymbol("math", ams, "open", "└", "\\llcorner", !0), defineSymbol("math", ams, "close", "┘", "\\lrcorner", !0), 
                    defineSymbol("math", ams, rel, "≦", "\\leqq", !0), defineSymbol("math", ams, rel, "⩽", "\\leqslant", !0), 
                    defineSymbol("math", ams, rel, "⪕", "\\eqslantless", !0), defineSymbol("math", ams, rel, "≲", "\\lesssim", !0), 
                    defineSymbol("math", ams, rel, "⪅", "\\lessapprox", !0), defineSymbol("math", ams, rel, "≊", "\\approxeq", !0), 
                    defineSymbol("math", ams, bin, "⋖", "\\lessdot"), defineSymbol("math", ams, rel, "⋘", "\\lll", !0), 
                    defineSymbol("math", ams, rel, "≶", "\\lessgtr", !0), defineSymbol("math", ams, rel, "⋚", "\\lesseqgtr", !0), 
                    defineSymbol("math", ams, rel, "⪋", "\\lesseqqgtr", !0), defineSymbol("math", ams, rel, "≑", "\\doteqdot"), 
                    defineSymbol("math", ams, rel, "≓", "\\risingdotseq", !0), defineSymbol("math", ams, rel, "≒", "\\fallingdotseq", !0), 
                    defineSymbol("math", ams, rel, "∽", "\\backsim", !0), defineSymbol("math", ams, rel, "⋍", "\\backsimeq", !0), 
                    defineSymbol("math", ams, rel, "⫅", "\\subseteqq", !0), defineSymbol("math", ams, rel, "⋐", "\\Subset", !0), 
                    defineSymbol("math", ams, rel, "⊏", "\\sqsubset", !0), defineSymbol("math", ams, rel, "≼", "\\preccurlyeq", !0), 
                    defineSymbol("math", ams, rel, "⋞", "\\curlyeqprec", !0), defineSymbol("math", ams, rel, "≾", "\\precsim", !0), 
                    defineSymbol("math", ams, rel, "⪷", "\\precapprox", !0), defineSymbol("math", ams, rel, "⊲", "\\vartriangleleft"), 
                    defineSymbol("math", ams, rel, "⊴", "\\trianglelefteq"), defineSymbol("math", ams, rel, "⊨", "\\vDash", !0), 
                    defineSymbol("math", ams, rel, "⊪", "\\Vvdash", !0), defineSymbol("math", ams, rel, "⌣", "\\smallsmile"), 
                    defineSymbol("math", ams, rel, "⌢", "\\smallfrown"), defineSymbol("math", ams, rel, "≏", "\\bumpeq", !0), 
                    defineSymbol("math", ams, rel, "≎", "\\Bumpeq", !0), defineSymbol("math", ams, rel, "≧", "\\geqq", !0), 
                    defineSymbol("math", ams, rel, "⩾", "\\geqslant", !0), defineSymbol("math", ams, rel, "⪖", "\\eqslantgtr", !0), 
                    defineSymbol("math", ams, rel, "≳", "\\gtrsim", !0), defineSymbol("math", ams, rel, "⪆", "\\gtrapprox", !0), 
                    defineSymbol("math", ams, bin, "⋗", "\\gtrdot"), defineSymbol("math", ams, rel, "⋙", "\\ggg", !0), 
                    defineSymbol("math", ams, rel, "≷", "\\gtrless", !0), defineSymbol("math", ams, rel, "⋛", "\\gtreqless", !0), 
                    defineSymbol("math", ams, rel, "⪌", "\\gtreqqless", !0), defineSymbol("math", ams, rel, "≖", "\\eqcirc", !0), 
                    defineSymbol("math", ams, rel, "≗", "\\circeq", !0), defineSymbol("math", ams, rel, "≜", "\\triangleq", !0), 
                    defineSymbol("math", ams, rel, "∼", "\\thicksim"), defineSymbol("math", ams, rel, "≈", "\\thickapprox"), 
                    defineSymbol("math", ams, rel, "⫆", "\\supseteqq", !0), defineSymbol("math", ams, rel, "⋑", "\\Supset", !0), 
                    defineSymbol("math", ams, rel, "⊐", "\\sqsupset", !0), defineSymbol("math", ams, rel, "≽", "\\succcurlyeq", !0), 
                    defineSymbol("math", ams, rel, "⋟", "\\curlyeqsucc", !0), defineSymbol("math", ams, rel, "≿", "\\succsim", !0), 
                    defineSymbol("math", ams, rel, "⪸", "\\succapprox", !0), defineSymbol("math", ams, rel, "⊳", "\\vartriangleright"), 
                    defineSymbol("math", ams, rel, "⊵", "\\trianglerighteq"), defineSymbol("math", ams, rel, "⊩", "\\Vdash", !0), 
                    defineSymbol("math", ams, rel, "∣", "\\shortmid"), defineSymbol("math", ams, rel, "∥", "\\shortparallel"), 
                    defineSymbol("math", ams, rel, "≬", "\\between", !0), defineSymbol("math", ams, rel, "⋔", "\\pitchfork", !0), 
                    defineSymbol("math", ams, rel, "∝", "\\varpropto"), defineSymbol("math", ams, rel, "◀", "\\blacktriangleleft"), 
                    defineSymbol("math", ams, rel, "∴", "\\therefore", !0), defineSymbol("math", ams, rel, "∍", "\\backepsilon"), 
                    defineSymbol("math", ams, rel, "▶", "\\blacktriangleright"), defineSymbol("math", ams, rel, "∵", "\\because", !0), 
                    defineSymbol("math", ams, rel, "⋘", "\\llless"), defineSymbol("math", ams, rel, "⋙", "\\gggtr"), 
                    defineSymbol("math", ams, bin, "⊲", "\\lhd"), defineSymbol("math", ams, bin, "⊳", "\\rhd"), 
                    defineSymbol("math", ams, rel, "≂", "\\eqsim", !0), defineSymbol("math", main, rel, "⋈", "\\Join"), 
                    defineSymbol("math", ams, rel, "≑", "\\Doteq", !0), defineSymbol("math", ams, bin, "∔", "\\dotplus", !0), 
                    defineSymbol("math", ams, bin, "∖", "\\smallsetminus"), defineSymbol("math", ams, bin, "⋒", "\\Cap", !0), 
                    defineSymbol("math", ams, bin, "⋓", "\\Cup", !0), defineSymbol("math", ams, bin, "⩞", "\\doublebarwedge", !0), 
                    defineSymbol("math", ams, bin, "⊟", "\\boxminus", !0), defineSymbol("math", ams, bin, "⊞", "\\boxplus", !0), 
                    defineSymbol("math", ams, bin, "⋇", "\\divideontimes", !0), defineSymbol("math", ams, bin, "⋉", "\\ltimes", !0), 
                    defineSymbol("math", ams, bin, "⋊", "\\rtimes", !0), defineSymbol("math", ams, bin, "⋋", "\\leftthreetimes", !0), 
                    defineSymbol("math", ams, bin, "⋌", "\\rightthreetimes", !0), defineSymbol("math", ams, bin, "⋏", "\\curlywedge", !0), 
                    defineSymbol("math", ams, bin, "⋎", "\\curlyvee", !0), defineSymbol("math", ams, bin, "⊝", "\\circleddash", !0), 
                    defineSymbol("math", ams, bin, "⊛", "\\circledast", !0), defineSymbol("math", ams, bin, "⋅", "\\centerdot"), 
                    defineSymbol("math", ams, bin, "⊺", "\\intercal", !0), defineSymbol("math", ams, bin, "⋒", "\\doublecap"), 
                    defineSymbol("math", ams, bin, "⋓", "\\doublecup"), defineSymbol("math", ams, bin, "⊠", "\\boxtimes", !0), 
                    defineSymbol("math", ams, rel, "⇢", "\\dashrightarrow", !0), defineSymbol("math", ams, rel, "⇠", "\\dashleftarrow", !0), 
                    defineSymbol("math", ams, rel, "⇇", "\\leftleftarrows", !0), defineSymbol("math", ams, rel, "⇆", "\\leftrightarrows", !0), 
                    defineSymbol("math", ams, rel, "⇚", "\\Lleftarrow", !0), defineSymbol("math", ams, rel, "↞", "\\twoheadleftarrow", !0), 
                    defineSymbol("math", ams, rel, "↢", "\\leftarrowtail", !0), defineSymbol("math", ams, rel, "↫", "\\looparrowleft", !0), 
                    defineSymbol("math", ams, rel, "⇋", "\\leftrightharpoons", !0), defineSymbol("math", ams, rel, "↶", "\\curvearrowleft", !0), 
                    defineSymbol("math", ams, rel, "↺", "\\circlearrowleft", !0), defineSymbol("math", ams, rel, "↰", "\\Lsh", !0), 
                    defineSymbol("math", ams, rel, "⇈", "\\upuparrows", !0), defineSymbol("math", ams, rel, "↿", "\\upharpoonleft", !0), 
                    defineSymbol("math", ams, rel, "⇃", "\\downharpoonleft", !0), defineSymbol("math", ams, rel, "⊸", "\\multimap", !0), 
                    defineSymbol("math", ams, rel, "↭", "\\leftrightsquigarrow", !0), defineSymbol("math", ams, rel, "⇉", "\\rightrightarrows", !0), 
                    defineSymbol("math", ams, rel, "⇄", "\\rightleftarrows", !0), defineSymbol("math", ams, rel, "↠", "\\twoheadrightarrow", !0), 
                    defineSymbol("math", ams, rel, "↣", "\\rightarrowtail", !0), defineSymbol("math", ams, rel, "↬", "\\looparrowright", !0), 
                    defineSymbol("math", ams, rel, "↷", "\\curvearrowright", !0), defineSymbol("math", ams, rel, "↻", "\\circlearrowright", !0), 
                    defineSymbol("math", ams, rel, "↱", "\\Rsh", !0), defineSymbol("math", ams, rel, "⇊", "\\downdownarrows", !0), 
                    defineSymbol("math", ams, rel, "↾", "\\upharpoonright", !0), defineSymbol("math", ams, rel, "⇂", "\\downharpoonright", !0), 
                    defineSymbol("math", ams, rel, "⇝", "\\rightsquigarrow", !0), defineSymbol("math", ams, rel, "⇝", "\\leadsto"), 
                    defineSymbol("math", ams, rel, "⇛", "\\Rrightarrow", !0), defineSymbol("math", ams, rel, "↾", "\\restriction"), 
                    defineSymbol("math", main, "textord", "‘", "`"), defineSymbol("math", main, "textord", "$", "\\$"), 
                    defineSymbol("text", main, "textord", "$", "\\$"), defineSymbol("text", main, "textord", "$", "\\textdollar"), 
                    defineSymbol("math", main, "textord", "%", "\\%"), defineSymbol("text", main, "textord", "%", "\\%"), 
                    defineSymbol("math", main, "textord", "_", "\\_"), defineSymbol("text", main, "textord", "_", "\\_"), 
                    defineSymbol("text", main, "textord", "_", "\\textunderscore"), defineSymbol("math", main, "textord", "∠", "\\angle", !0), 
                    defineSymbol("math", main, "textord", "∞", "\\infty", !0), defineSymbol("math", main, "textord", "′", "\\prime"), 
                    defineSymbol("math", main, "textord", "△", "\\triangle"), defineSymbol("math", main, "textord", "Γ", "\\Gamma", !0), 
                    defineSymbol("math", main, "textord", "Δ", "\\Delta", !0), defineSymbol("math", main, "textord", "Θ", "\\Theta", !0), 
                    defineSymbol("math", main, "textord", "Λ", "\\Lambda", !0), defineSymbol("math", main, "textord", "Ξ", "\\Xi", !0), 
                    defineSymbol("math", main, "textord", "Π", "\\Pi", !0), defineSymbol("math", main, "textord", "Σ", "\\Sigma", !0), 
                    defineSymbol("math", main, "textord", "Υ", "\\Upsilon", !0), defineSymbol("math", main, "textord", "Φ", "\\Phi", !0), 
                    defineSymbol("math", main, "textord", "Ψ", "\\Psi", !0), defineSymbol("math", main, "textord", "Ω", "\\Omega", !0), 
                    defineSymbol("math", main, "textord", "A", "Α"), defineSymbol("math", main, "textord", "B", "Β"), 
                    defineSymbol("math", main, "textord", "E", "Ε"), defineSymbol("math", main, "textord", "Z", "Ζ"), 
                    defineSymbol("math", main, "textord", "H", "Η"), defineSymbol("math", main, "textord", "I", "Ι"), 
                    defineSymbol("math", main, "textord", "K", "Κ"), defineSymbol("math", main, "textord", "M", "Μ"), 
                    defineSymbol("math", main, "textord", "N", "Ν"), defineSymbol("math", main, "textord", "O", "Ο"), 
                    defineSymbol("math", main, "textord", "P", "Ρ"), defineSymbol("math", main, "textord", "T", "Τ"), 
                    defineSymbol("math", main, "textord", "X", "Χ"), defineSymbol("math", main, "textord", "¬", "\\neg", !0), 
                    defineSymbol("math", main, "textord", "¬", "\\lnot"), defineSymbol("math", main, "textord", "⊤", "\\top"), 
                    defineSymbol("math", main, "textord", "⊥", "\\bot"), defineSymbol("math", main, "textord", "∅", "\\emptyset"), 
                    defineSymbol("math", ams, "textord", "∅", "\\varnothing"), defineSymbol("math", main, mathord, "α", "\\alpha", !0), 
                    defineSymbol("math", main, mathord, "β", "\\beta", !0), defineSymbol("math", main, mathord, "γ", "\\gamma", !0), 
                    defineSymbol("math", main, mathord, "δ", "\\delta", !0), defineSymbol("math", main, mathord, "ϵ", "\\epsilon", !0), 
                    defineSymbol("math", main, mathord, "ζ", "\\zeta", !0), defineSymbol("math", main, mathord, "η", "\\eta", !0), 
                    defineSymbol("math", main, mathord, "θ", "\\theta", !0), defineSymbol("math", main, mathord, "ι", "\\iota", !0), 
                    defineSymbol("math", main, mathord, "κ", "\\kappa", !0), defineSymbol("math", main, mathord, "λ", "\\lambda", !0), 
                    defineSymbol("math", main, mathord, "μ", "\\mu", !0), defineSymbol("math", main, mathord, "ν", "\\nu", !0), 
                    defineSymbol("math", main, mathord, "ξ", "\\xi", !0), defineSymbol("math", main, mathord, "ο", "\\omicron", !0), 
                    defineSymbol("math", main, mathord, "π", "\\pi", !0), defineSymbol("math", main, mathord, "ρ", "\\rho", !0), 
                    defineSymbol("math", main, mathord, "σ", "\\sigma", !0), defineSymbol("math", main, mathord, "τ", "\\tau", !0), 
                    defineSymbol("math", main, mathord, "υ", "\\upsilon", !0), defineSymbol("math", main, mathord, "ϕ", "\\phi", !0), 
                    defineSymbol("math", main, mathord, "χ", "\\chi", !0), defineSymbol("math", main, mathord, "ψ", "\\psi", !0), 
                    defineSymbol("math", main, mathord, "ω", "\\omega", !0), defineSymbol("math", main, mathord, "ε", "\\varepsilon", !0), 
                    defineSymbol("math", main, mathord, "ϑ", "\\vartheta", !0), defineSymbol("math", main, mathord, "ϖ", "\\varpi", !0), 
                    defineSymbol("math", main, mathord, "ϱ", "\\varrho", !0), defineSymbol("math", main, mathord, "ς", "\\varsigma", !0), 
                    defineSymbol("math", main, mathord, "φ", "\\varphi", !0), defineSymbol("math", main, bin, "∗", "*"), 
                    defineSymbol("math", main, bin, "+", "+"), defineSymbol("math", main, bin, "−", "-"), 
                    defineSymbol("math", main, bin, "⋅", "\\cdot", !0), defineSymbol("math", main, bin, "∘", "\\circ"), 
                    defineSymbol("math", main, bin, "÷", "\\div", !0), defineSymbol("math", main, bin, "±", "\\pm", !0), 
                    defineSymbol("math", main, bin, "×", "\\times", !0), defineSymbol("math", main, bin, "∩", "\\cap", !0), 
                    defineSymbol("math", main, bin, "∪", "\\cup", !0), defineSymbol("math", main, bin, "∖", "\\setminus"), 
                    defineSymbol("math", main, bin, "∧", "\\land"), defineSymbol("math", main, bin, "∨", "\\lor"), 
                    defineSymbol("math", main, bin, "∧", "\\wedge", !0), defineSymbol("math", main, bin, "∨", "\\vee", !0), 
                    defineSymbol("math", main, "textord", "√", "\\surd"), defineSymbol("math", main, "open", "(", "("), 
                    defineSymbol("math", main, "open", "[", "["), defineSymbol("math", main, "open", "⟨", "\\langle", !0), 
                    defineSymbol("math", main, "open", "∣", "\\lvert"), defineSymbol("math", main, "open", "∥", "\\lVert"), 
                    defineSymbol("math", main, "close", ")", ")"), defineSymbol("math", main, "close", "]", "]"), 
                    defineSymbol("math", main, "close", "?", "?"), defineSymbol("math", main, "close", "!", "!"), 
                    defineSymbol("math", main, "close", "⟩", "\\rangle", !0), defineSymbol("math", main, "close", "∣", "\\rvert"), 
                    defineSymbol("math", main, "close", "∥", "\\rVert"), defineSymbol("math", main, rel, "=", "="), 
                    defineSymbol("math", main, rel, "<", "<"), defineSymbol("math", main, rel, ">", ">"), 
                    defineSymbol("math", main, rel, ":", ":"), defineSymbol("math", main, rel, "≈", "\\approx", !0), 
                    defineSymbol("math", main, rel, "≅", "\\cong", !0), defineSymbol("math", main, rel, "≥", "\\ge"), 
                    defineSymbol("math", main, rel, "≥", "\\geq", !0), defineSymbol("math", main, rel, "←", "\\gets"), 
                    defineSymbol("math", main, rel, ">", "\\gt"), defineSymbol("math", main, rel, "∈", "\\in", !0), 
                    defineSymbol("math", main, rel, "", "\\@not"), defineSymbol("math", main, rel, "⊂", "\\subset", !0), 
                    defineSymbol("math", main, rel, "⊃", "\\supset", !0), defineSymbol("math", main, rel, "⊆", "\\subseteq", !0), 
                    defineSymbol("math", main, rel, "⊇", "\\supseteq", !0), defineSymbol("math", ams, rel, "⊈", "\\nsubseteq", !0), 
                    defineSymbol("math", ams, rel, "⊉", "\\nsupseteq", !0), defineSymbol("math", main, rel, "⊨", "\\models"), 
                    defineSymbol("math", main, rel, "←", "\\leftarrow", !0), defineSymbol("math", main, rel, "≤", "\\le"), 
                    defineSymbol("math", main, rel, "≤", "\\leq", !0), defineSymbol("math", main, rel, "<", "\\lt"), 
                    defineSymbol("math", main, rel, "→", "\\rightarrow", !0), defineSymbol("math", main, rel, "→", "\\to"), 
                    defineSymbol("math", ams, rel, "≱", "\\ngeq", !0), defineSymbol("math", ams, rel, "≰", "\\nleq", !0), 
                    defineSymbol("math", main, "spacing", " ", "\\ "), defineSymbol("math", main, "spacing", " ", "~"), 
                    defineSymbol("math", main, "spacing", " ", "\\space"), defineSymbol("math", main, "spacing", " ", "\\nobreakspace"), 
                    defineSymbol("text", main, "spacing", " ", "\\ "), defineSymbol("text", main, "spacing", " ", "~"), 
                    defineSymbol("text", main, "spacing", " ", "\\space"), defineSymbol("text", main, "spacing", " ", "\\nobreakspace"), 
                    defineSymbol("math", main, "spacing", null, "\\nobreak"), defineSymbol("math", main, "spacing", null, "\\allowbreak"), 
                    defineSymbol("math", main, "punct", ",", ","), defineSymbol("math", main, "punct", ";", ";"), 
                    defineSymbol("math", ams, bin, "⊼", "\\barwedge", !0), defineSymbol("math", ams, bin, "⊻", "\\veebar", !0), 
                    defineSymbol("math", main, bin, "⊙", "\\odot", !0), defineSymbol("math", main, bin, "⊕", "\\oplus", !0), 
                    defineSymbol("math", main, bin, "⊗", "\\otimes", !0), defineSymbol("math", main, "textord", "∂", "\\partial", !0), 
                    defineSymbol("math", main, bin, "⊘", "\\oslash", !0), defineSymbol("math", ams, bin, "⊚", "\\circledcirc", !0), 
                    defineSymbol("math", ams, bin, "⊡", "\\boxdot", !0), defineSymbol("math", main, bin, "△", "\\bigtriangleup"), 
                    defineSymbol("math", main, bin, "▽", "\\bigtriangledown"), defineSymbol("math", main, bin, "†", "\\dagger"), 
                    defineSymbol("math", main, bin, "⋄", "\\diamond"), defineSymbol("math", main, bin, "⋆", "\\star"), 
                    defineSymbol("math", main, bin, "◃", "\\triangleleft"), defineSymbol("math", main, bin, "▹", "\\triangleright"), 
                    defineSymbol("math", main, "open", "{", "\\{"), defineSymbol("text", main, "textord", "{", "\\{"), 
                    defineSymbol("text", main, "textord", "{", "\\textbraceleft"), defineSymbol("math", main, "close", "}", "\\}"), 
                    defineSymbol("text", main, "textord", "}", "\\}"), defineSymbol("text", main, "textord", "}", "\\textbraceright"), 
                    defineSymbol("math", main, "open", "{", "\\lbrace"), defineSymbol("math", main, "close", "}", "\\rbrace"), 
                    defineSymbol("math", main, "open", "[", "\\lbrack"), defineSymbol("text", main, "textord", "[", "\\lbrack"), 
                    defineSymbol("math", main, "close", "]", "\\rbrack"), defineSymbol("text", main, "textord", "]", "\\rbrack"), 
                    defineSymbol("math", main, "open", "(", "\\lparen"), defineSymbol("math", main, "close", ")", "\\rparen"), 
                    defineSymbol("text", main, "textord", "<", "\\textless"), defineSymbol("text", main, "textord", ">", "\\textgreater"), 
                    defineSymbol("math", main, "open", "⌊", "\\lfloor", !0), defineSymbol("math", main, "close", "⌋", "\\rfloor", !0), 
                    defineSymbol("math", main, "open", "⌈", "\\lceil", !0), defineSymbol("math", main, "close", "⌉", "\\rceil", !0), 
                    defineSymbol("math", main, "textord", "\\", "\\backslash"), defineSymbol("math", main, "textord", "∣", "|"), 
                    defineSymbol("math", main, "textord", "∣", "\\vert"), defineSymbol("text", main, "textord", "|", "\\textbar"), 
                    defineSymbol("math", main, "textord", "∥", "\\|"), defineSymbol("math", main, "textord", "∥", "\\Vert"), 
                    defineSymbol("text", main, "textord", "∥", "\\textbardbl"), defineSymbol("text", main, "textord", "~", "\\textasciitilde"), 
                    defineSymbol("text", main, "textord", "\\", "\\textbackslash"), defineSymbol("text", main, "textord", "^", "\\textasciicircum"), 
                    defineSymbol("math", main, rel, "↑", "\\uparrow", !0), defineSymbol("math", main, rel, "⇑", "\\Uparrow", !0), 
                    defineSymbol("math", main, rel, "↓", "\\downarrow", !0), defineSymbol("math", main, rel, "⇓", "\\Downarrow", !0), 
                    defineSymbol("math", main, rel, "↕", "\\updownarrow", !0), defineSymbol("math", main, rel, "⇕", "\\Updownarrow", !0), 
                    defineSymbol("math", main, op, "∐", "\\coprod"), defineSymbol("math", main, op, "⋁", "\\bigvee"), 
                    defineSymbol("math", main, op, "⋀", "\\bigwedge"), defineSymbol("math", main, op, "⨄", "\\biguplus"), 
                    defineSymbol("math", main, op, "⋂", "\\bigcap"), defineSymbol("math", main, op, "⋃", "\\bigcup"), 
                    defineSymbol("math", main, op, "∫", "\\int"), defineSymbol("math", main, op, "∫", "\\intop"), 
                    defineSymbol("math", main, op, "∬", "\\iint"), defineSymbol("math", main, op, "∭", "\\iiint"), 
                    defineSymbol("math", main, op, "∏", "\\prod"), defineSymbol("math", main, op, "∑", "\\sum"), 
                    defineSymbol("math", main, op, "⨂", "\\bigotimes"), defineSymbol("math", main, op, "⨁", "\\bigoplus"), 
                    defineSymbol("math", main, op, "⨀", "\\bigodot"), defineSymbol("math", main, op, "∮", "\\oint"), 
                    defineSymbol("math", main, op, "∯", "\\oiint"), defineSymbol("math", main, op, "∰", "\\oiiint"), 
                    defineSymbol("math", main, op, "⨆", "\\bigsqcup"), defineSymbol("math", main, op, "∫", "\\smallint"), 
                    defineSymbol("text", main, "inner", "…", "\\textellipsis"), defineSymbol("math", main, "inner", "…", "\\mathellipsis"), 
                    defineSymbol("text", main, "inner", "…", "\\ldots", !0), defineSymbol("math", main, "inner", "…", "\\ldots", !0), 
                    defineSymbol("math", main, "inner", "⋯", "\\@cdots", !0), defineSymbol("math", main, "inner", "⋱", "\\ddots", !0), 
                    defineSymbol("math", main, "textord", "⋮", "\\varvdots"), defineSymbol("math", main, "accent-token", "ˊ", "\\acute"), 
                    defineSymbol("math", main, "accent-token", "ˋ", "\\grave"), defineSymbol("math", main, "accent-token", "¨", "\\ddot"), 
                    defineSymbol("math", main, "accent-token", "~", "\\tilde"), defineSymbol("math", main, "accent-token", "ˉ", "\\bar"), 
                    defineSymbol("math", main, "accent-token", "˘", "\\breve"), defineSymbol("math", main, "accent-token", "ˇ", "\\check"), 
                    defineSymbol("math", main, "accent-token", "^", "\\hat"), defineSymbol("math", main, "accent-token", "⃗", "\\vec"), 
                    defineSymbol("math", main, "accent-token", "˙", "\\dot"), defineSymbol("math", main, "accent-token", "˚", "\\mathring"), 
                    defineSymbol("math", main, mathord, "ı", "\\imath", !0), defineSymbol("math", main, mathord, "ȷ", "\\jmath", !0), 
                    defineSymbol("text", main, "textord", "ı", "\\i", !0), defineSymbol("text", main, "textord", "ȷ", "\\j", !0), 
                    defineSymbol("text", main, "textord", "ß", "\\ss", !0), defineSymbol("text", main, "textord", "æ", "\\ae", !0), 
                    defineSymbol("text", main, "textord", "æ", "\\ae", !0), defineSymbol("text", main, "textord", "œ", "\\oe", !0), 
                    defineSymbol("text", main, "textord", "ø", "\\o", !0), defineSymbol("text", main, "textord", "Æ", "\\AE", !0), 
                    defineSymbol("text", main, "textord", "Œ", "\\OE", !0), defineSymbol("text", main, "textord", "Ø", "\\O", !0), 
                    defineSymbol("text", main, "accent-token", "ˊ", "\\'"), defineSymbol("text", main, "accent-token", "ˋ", "\\`"), 
                    defineSymbol("text", main, "accent-token", "ˆ", "\\^"), defineSymbol("text", main, "accent-token", "˜", "\\~"), 
                    defineSymbol("text", main, "accent-token", "ˉ", "\\="), defineSymbol("text", main, "accent-token", "˘", "\\u"), 
                    defineSymbol("text", main, "accent-token", "˙", "\\."), defineSymbol("text", main, "accent-token", "˚", "\\r"), 
                    defineSymbol("text", main, "accent-token", "ˇ", "\\v"), defineSymbol("text", main, "accent-token", "¨", '\\"'), 
                    defineSymbol("text", main, "accent-token", "˝", "\\H"), defineSymbol("text", main, "accent-token", "◯", "\\textcircled");
                    var ligatures = {
                        "--": !0,
                        "---": !0,
                        "``": !0,
                        "''": !0
                    };
                    defineSymbol("text", main, "textord", "–", "--"), defineSymbol("text", main, "textord", "–", "\\textendash"), 
                    defineSymbol("text", main, "textord", "—", "---"), defineSymbol("text", main, "textord", "—", "\\textemdash"), 
                    defineSymbol("text", main, "textord", "‘", "`"), defineSymbol("text", main, "textord", "‘", "\\textquoteleft"), 
                    defineSymbol("text", main, "textord", "’", "'"), defineSymbol("text", main, "textord", "’", "\\textquoteright"), 
                    defineSymbol("text", main, "textord", "“", "``"), defineSymbol("text", main, "textord", "“", "\\textquotedblleft"), 
                    defineSymbol("text", main, "textord", "”", "''"), defineSymbol("text", main, "textord", "”", "\\textquotedblright"), 
                    defineSymbol("math", main, "textord", "°", "\\degree", !0), defineSymbol("text", main, "textord", "°", "\\degree"), 
                    defineSymbol("text", main, "textord", "°", "\\textdegree", !0), defineSymbol("math", main, mathord, "£", "\\pounds"), 
                    defineSymbol("math", main, mathord, "£", "\\mathsterling", !0), defineSymbol("text", main, mathord, "£", "\\pounds"), 
                    defineSymbol("text", main, mathord, "£", "\\textsterling", !0), defineSymbol("math", ams, "textord", "✠", "\\maltese"), 
                    defineSymbol("text", ams, "textord", "✠", "\\maltese"), defineSymbol("text", main, "spacing", " ", "\\ "), 
                    defineSymbol("text", main, "spacing", " ", " "), defineSymbol("text", main, "spacing", " ", "~");
                    for (var symbols_i = 0; symbols_i < '0123456789/@."'.length; symbols_i++) {
                        var symbols_ch = '0123456789/@."'.charAt(symbols_i);
                        defineSymbol("math", main, "textord", symbols_ch, symbols_ch);
                    }
                    for (var src_symbols_i = 0; src_symbols_i < '0123456789!@*()-=+[]<>|";:?/.,'.length; src_symbols_i++) {
                        var _ch = '0123456789!@*()-=+[]<>|";:?/.,'.charAt(src_symbols_i);
                        defineSymbol("text", main, "textord", _ch, _ch);
                    }
                    for (var letters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz", symbols_i2 = 0; symbols_i2 < letters.length; symbols_i2++) {
                        var _ch2 = letters.charAt(symbols_i2);
                        defineSymbol("math", main, mathord, _ch2, _ch2), defineSymbol("text", main, "textord", _ch2, _ch2);
                    }
                    defineSymbol("math", ams, "textord", "C", "ℂ"), defineSymbol("text", ams, "textord", "C", "ℂ"), 
                    defineSymbol("math", ams, "textord", "H", "ℍ"), defineSymbol("text", ams, "textord", "H", "ℍ"), 
                    defineSymbol("math", ams, "textord", "N", "ℕ"), defineSymbol("text", ams, "textord", "N", "ℕ"), 
                    defineSymbol("math", ams, "textord", "P", "ℙ"), defineSymbol("text", ams, "textord", "P", "ℙ"), 
                    defineSymbol("math", ams, "textord", "Q", "ℚ"), defineSymbol("text", ams, "textord", "Q", "ℚ"), 
                    defineSymbol("math", ams, "textord", "R", "ℝ"), defineSymbol("text", ams, "textord", "R", "ℝ"), 
                    defineSymbol("math", ams, "textord", "Z", "ℤ"), defineSymbol("text", ams, "textord", "Z", "ℤ"), 
                    defineSymbol("math", main, mathord, "h", "ℎ"), defineSymbol("text", main, mathord, "h", "ℎ");
                    for (var symbols_wideChar = "", symbols_i3 = 0; symbols_i3 < letters.length; symbols_i3++) {
                        var _ch3 = letters.charAt(symbols_i3);
                        defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56320 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56372 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56424 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56580 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56736 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56788 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56840 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56944 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), symbols_i3 < 26 && (defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56632 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar), defineSymbol("math", main, mathord, _ch3, symbols_wideChar = String.fromCharCode(55349, 56476 + symbols_i3)), 
                        defineSymbol("text", main, "textord", _ch3, symbols_wideChar));
                    }
                    defineSymbol("math", main, mathord, "k", symbols_wideChar = String.fromCharCode(55349, 56668)), 
                    defineSymbol("text", main, "textord", "k", symbols_wideChar);
                    for (var symbols_i4 = 0; symbols_i4 < 10; symbols_i4++) {
                        var _ch4 = symbols_i4.toString();
                        defineSymbol("math", main, mathord, _ch4, symbols_wideChar = String.fromCharCode(55349, 57294 + symbols_i4)), 
                        defineSymbol("text", main, "textord", _ch4, symbols_wideChar), defineSymbol("math", main, mathord, _ch4, symbols_wideChar = String.fromCharCode(55349, 57314 + symbols_i4)), 
                        defineSymbol("text", main, "textord", _ch4, symbols_wideChar), defineSymbol("math", main, mathord, _ch4, symbols_wideChar = String.fromCharCode(55349, 57324 + symbols_i4)), 
                        defineSymbol("text", main, "textord", _ch4, symbols_wideChar), defineSymbol("math", main, mathord, _ch4, symbols_wideChar = String.fromCharCode(55349, 57334 + symbols_i4)), 
                        defineSymbol("text", main, "textord", _ch4, symbols_wideChar);
                    }
                    for (var _i5 = 0; _i5 < "ÇÐÞçþ".length; _i5++) {
                        var _ch5 = "ÇÐÞçþ".charAt(_i5);
                        defineSymbol("math", main, mathord, _ch5, _ch5), defineSymbol("text", main, "textord", _ch5, _ch5);
                    }
                    defineSymbol("text", main, "textord", "ð", "ð"), defineSymbol("text", main, "textord", "–", "–"), 
                    defineSymbol("text", main, "textord", "—", "—"), defineSymbol("text", main, "textord", "‘", "‘"), 
                    defineSymbol("text", main, "textord", "’", "’"), defineSymbol("text", main, "textord", "“", "“"), 
                    defineSymbol("text", main, "textord", "”", "”");
                    var wideLatinLetterData = [ [ "mathbf", "textbf", "Main-Bold" ], [ "mathbf", "textbf", "Main-Bold" ], [ "mathdefault", "textit", "Math-Italic" ], [ "mathdefault", "textit", "Math-Italic" ], [ "boldsymbol", "boldsymbol", "Main-BoldItalic" ], [ "boldsymbol", "boldsymbol", "Main-BoldItalic" ], [ "mathscr", "textscr", "Script-Regular" ], [ "", "", "" ], [ "", "", "" ], [ "", "", "" ], [ "mathfrak", "textfrak", "Fraktur-Regular" ], [ "mathfrak", "textfrak", "Fraktur-Regular" ], [ "mathbb", "textbb", "AMS-Regular" ], [ "mathbb", "textbb", "AMS-Regular" ], [ "", "", "" ], [ "", "", "" ], [ "mathsf", "textsf", "SansSerif-Regular" ], [ "mathsf", "textsf", "SansSerif-Regular" ], [ "mathboldsf", "textboldsf", "SansSerif-Bold" ], [ "mathboldsf", "textboldsf", "SansSerif-Bold" ], [ "mathitsf", "textitsf", "SansSerif-Italic" ], [ "mathitsf", "textitsf", "SansSerif-Italic" ], [ "", "", "" ], [ "", "", "" ], [ "mathtt", "texttt", "Typewriter-Regular" ], [ "mathtt", "texttt", "Typewriter-Regular" ] ], wideNumeralData = [ [ "mathbf", "textbf", "Main-Bold" ], [ "", "", "" ], [ "mathsf", "textsf", "SansSerif-Regular" ], [ "mathboldsf", "textboldsf", "SansSerif-Bold" ], [ "mathtt", "texttt", "Typewriter-Regular" ] ], sizeStyleMap = [ [ 1, 1, 1 ], [ 2, 1, 1 ], [ 3, 1, 1 ], [ 4, 2, 1 ], [ 5, 2, 1 ], [ 6, 3, 1 ], [ 7, 4, 2 ], [ 8, 6, 3 ], [ 9, 7, 6 ], [ 10, 8, 7 ], [ 11, 10, 9 ] ], sizeMultipliers = [ .5, .6, .7, .8, .9, 1, 1.2, 1.44, 1.728, 2.074, 2.488 ], sizeAtStyle = function(size, style) {
                        return style.size < 2 ? size : sizeStyleMap[size - 1][style.size - 1];
                    }, Options_Options = function() {
                        function Options(data) {
                            this.style = void 0, this.color = void 0, this.size = void 0, this.textSize = void 0, 
                            this.phantom = void 0, this.font = void 0, this.fontFamily = void 0, this.fontWeight = void 0, 
                            this.fontShape = void 0, this.sizeMultiplier = void 0, this.maxSize = void 0, this.minRuleThickness = void 0, 
                            this._fontMetrics = void 0, this.style = data.style, this.color = data.color, this.size = data.size || Options.BASESIZE, 
                            this.textSize = data.textSize || this.size, this.phantom = !!data.phantom, this.font = data.font || "", 
                            this.fontFamily = data.fontFamily || "", this.fontWeight = data.fontWeight || "", 
                            this.fontShape = data.fontShape || "", this.sizeMultiplier = sizeMultipliers[this.size - 1], 
                            this.maxSize = data.maxSize, this.minRuleThickness = data.minRuleThickness, this._fontMetrics = void 0;
                        }
                        var _proto = Options.prototype;
                        return _proto.extend = function(extension) {
                            var data = {
                                style: this.style,
                                size: this.size,
                                textSize: this.textSize,
                                color: this.color,
                                phantom: this.phantom,
                                font: this.font,
                                fontFamily: this.fontFamily,
                                fontWeight: this.fontWeight,
                                fontShape: this.fontShape,
                                maxSize: this.maxSize,
                                minRuleThickness: this.minRuleThickness
                            };
                            for (var key in extension) extension.hasOwnProperty(key) && (data[key] = extension[key]);
                            return new Options(data);
                        }, _proto.havingStyle = function(style) {
                            return this.style === style ? this : this.extend({
                                style: style,
                                size: sizeAtStyle(this.textSize, style)
                            });
                        }, _proto.havingCrampedStyle = function() {
                            return this.havingStyle(this.style.cramp());
                        }, _proto.havingSize = function(size) {
                            return this.size === size && this.textSize === size ? this : this.extend({
                                style: this.style.text(),
                                size: size,
                                textSize: size,
                                sizeMultiplier: sizeMultipliers[size - 1]
                            });
                        }, _proto.havingBaseStyle = function(style) {
                            style = style || this.style.text();
                            var wantSize = sizeAtStyle(Options.BASESIZE, style);
                            return this.size === wantSize && this.textSize === Options.BASESIZE && this.style === style ? this : this.extend({
                                style: style,
                                size: wantSize
                            });
                        }, _proto.havingBaseSizing = function() {
                            var size;
                            switch (this.style.id) {
                              case 4:
                              case 5:
                                size = 3;
                                break;

                              case 6:
                              case 7:
                                size = 1;
                                break;

                              default:
                                size = 6;
                            }
                            return this.extend({
                                style: this.style.text(),
                                size: size
                            });
                        }, _proto.withColor = function(color) {
                            return this.extend({
                                color: color
                            });
                        }, _proto.withPhantom = function() {
                            return this.extend({
                                phantom: !0
                            });
                        }, _proto.withFont = function(font) {
                            return this.extend({
                                font: font
                            });
                        }, _proto.withTextFontFamily = function(fontFamily) {
                            return this.extend({
                                fontFamily: fontFamily,
                                font: ""
                            });
                        }, _proto.withTextFontWeight = function(fontWeight) {
                            return this.extend({
                                fontWeight: fontWeight,
                                font: ""
                            });
                        }, _proto.withTextFontShape = function(fontShape) {
                            return this.extend({
                                fontShape: fontShape,
                                font: ""
                            });
                        }, _proto.sizingClasses = function(oldOptions) {
                            return oldOptions.size !== this.size ? [ "sizing", "reset-size" + oldOptions.size, "size" + this.size ] : [];
                        }, _proto.baseSizingClasses = function() {
                            return this.size !== Options.BASESIZE ? [ "sizing", "reset-size" + this.size, "size" + Options.BASESIZE ] : [];
                        }, _proto.fontMetrics = function() {
                            return this._fontMetrics || (this._fontMetrics = function(size) {
                                var sizeIndex;
                                if (!fontMetricsBySizeIndex[sizeIndex = size >= 5 ? 0 : size >= 3 ? 1 : 2]) {
                                    var metrics = fontMetricsBySizeIndex[sizeIndex] = {
                                        cssEmPerMu: sigmasAndXis.quad[sizeIndex] / 18
                                    };
                                    for (var key in sigmasAndXis) sigmasAndXis.hasOwnProperty(key) && (metrics[key] = sigmasAndXis[key][sizeIndex]);
                                }
                                return fontMetricsBySizeIndex[sizeIndex];
                            }(this.size)), this._fontMetrics;
                        }, _proto.getColor = function() {
                            return this.phantom ? "transparent" : this.color;
                        }, Options;
                    }();
                    Options_Options.BASESIZE = 6;
                    var src_Options = Options_Options, ptPerUnit = {
                        pt: 1,
                        mm: 7227 / 2540,
                        cm: 7227 / 254,
                        in: 72.27,
                        bp: 1.00375,
                        pc: 12,
                        dd: 1238 / 1157,
                        cc: 14856 / 1157,
                        nd: 685 / 642,
                        nc: 1370 / 107,
                        sp: 1 / 65536,
                        px: 1.00375
                    }, relativeUnit = {
                        ex: !0,
                        em: !0,
                        mu: !0
                    }, validUnit = function(unit) {
                        return "string" != typeof unit && (unit = unit.unit), unit in ptPerUnit || unit in relativeUnit || "ex" === unit;
                    }, units_calculateSize = function(sizeValue, options) {
                        var scale;
                        if (sizeValue.unit in ptPerUnit) scale = ptPerUnit[sizeValue.unit] / options.fontMetrics().ptPerEm / options.sizeMultiplier; else if ("mu" === sizeValue.unit) scale = options.fontMetrics().cssEmPerMu; else {
                            var unitOptions;
                            if (unitOptions = options.style.isTight() ? options.havingStyle(options.style.text()) : options, 
                            "ex" === sizeValue.unit) scale = unitOptions.fontMetrics().xHeight; else {
                                if ("em" !== sizeValue.unit) throw new src_ParseError("Invalid unit: '" + sizeValue.unit + "'");
                                scale = unitOptions.fontMetrics().quad;
                            }
                            unitOptions !== options && (scale *= unitOptions.sizeMultiplier / options.sizeMultiplier);
                        }
                        return Math.min(sizeValue.number * scale, options.maxSize);
                    }, mathitLetters = [ "\\imath", "ı", "\\jmath", "ȷ", "\\pounds", "\\mathsterling", "\\textsterling", "£" ], buildCommon_lookupSymbol = function(value, fontName, mode) {
                        return src_symbols[mode][value] && src_symbols[mode][value].replace && (value = src_symbols[mode][value].replace), 
                        {
                            value: value,
                            metrics: getCharacterMetrics(value, fontName, mode)
                        };
                    }, buildCommon_makeSymbol = function(value, fontName, mode, options, classes) {
                        var symbolNode, lookup = buildCommon_lookupSymbol(value, fontName, mode), metrics = lookup.metrics;
                        if (value = lookup.value, metrics) {
                            var italic = metrics.italic;
                            ("text" === mode || options && "mathit" === options.font) && (italic = 0), symbolNode = new domTree_SymbolNode(value, metrics.height, metrics.depth, italic, metrics.skew, metrics.width, classes);
                        } else "undefined" != typeof console && console.warn("No character metrics for '" + value + "' in style '" + fontName + "' and mode '" + mode + "'"), 
                        symbolNode = new domTree_SymbolNode(value, 0, 0, 0, 0, 0, classes);
                        if (options) {
                            symbolNode.maxFontSize = options.sizeMultiplier, options.style.isTight() && symbolNode.classes.push("mtight");
                            var color = options.getColor();
                            color && (symbolNode.style.color = color);
                        }
                        return symbolNode;
                    }, buildCommon_canCombine = function(prev, next) {
                        if (createClass(prev.classes) !== createClass(next.classes) || prev.skew !== next.skew || prev.maxFontSize !== next.maxFontSize) return !1;
                        for (var style in prev.style) if (prev.style.hasOwnProperty(style) && prev.style[style] !== next.style[style]) return !1;
                        for (var _style in next.style) if (next.style.hasOwnProperty(_style) && prev.style[_style] !== next.style[_style]) return !1;
                        return !0;
                    }, sizeElementFromChildren = function(elem) {
                        for (var height = 0, depth = 0, maxFontSize = 0, i = 0; i < elem.children.length; i++) {
                            var child = elem.children[i];
                            child.height > height && (height = child.height), child.depth > depth && (depth = child.depth), 
                            child.maxFontSize > maxFontSize && (maxFontSize = child.maxFontSize);
                        }
                        elem.height = height, elem.depth = depth, elem.maxFontSize = maxFontSize;
                    }, buildCommon_makeSpan = function(classes, children, options, style) {
                        var span = new domTree_Span(classes, children, options, style);
                        return sizeElementFromChildren(span), span;
                    }, buildCommon_makeSvgSpan = function(classes, children, options, style) {
                        return new domTree_Span(classes, children, options, style);
                    }, buildCommon_makeFragment = function(children) {
                        var fragment = new tree_DocumentFragment(children);
                        return sizeElementFromChildren(fragment), fragment;
                    }, retrieveTextFontName = function(fontFamily, fontWeight, fontShape) {
                        var baseFontName = "";
                        switch (fontFamily) {
                          case "amsrm":
                            baseFontName = "AMS";
                            break;

                          case "textrm":
                            baseFontName = "Main";
                            break;

                          case "textsf":
                            baseFontName = "SansSerif";
                            break;

                          case "texttt":
                            baseFontName = "Typewriter";
                            break;

                          default:
                            baseFontName = fontFamily;
                        }
                        return baseFontName + "-" + ("textbf" === fontWeight && "textit" === fontShape ? "BoldItalic" : "textbf" === fontWeight ? "Bold" : "textit" === fontWeight ? "Italic" : "Regular");
                    }, fontMap = {
                        mathbf: {
                            variant: "bold",
                            fontName: "Main-Bold"
                        },
                        mathrm: {
                            variant: "normal",
                            fontName: "Main-Regular"
                        },
                        textit: {
                            variant: "italic",
                            fontName: "Main-Italic"
                        },
                        mathit: {
                            variant: "italic",
                            fontName: "Main-Italic"
                        },
                        mathbb: {
                            variant: "double-struck",
                            fontName: "AMS-Regular"
                        },
                        mathcal: {
                            variant: "script",
                            fontName: "Caligraphic-Regular"
                        },
                        mathfrak: {
                            variant: "fraktur",
                            fontName: "Fraktur-Regular"
                        },
                        mathscr: {
                            variant: "script",
                            fontName: "Script-Regular"
                        },
                        mathsf: {
                            variant: "sans-serif",
                            fontName: "SansSerif-Regular"
                        },
                        mathtt: {
                            variant: "monospace",
                            fontName: "Typewriter-Regular"
                        }
                    }, svgData = {
                        vec: [ "vec", .471, .714 ],
                        oiintSize1: [ "oiintSize1", .957, .499 ],
                        oiintSize2: [ "oiintSize2", 1.472, .659 ],
                        oiiintSize1: [ "oiiintSize1", 1.304, .499 ],
                        oiiintSize2: [ "oiiintSize2", 1.98, .659 ]
                    }, buildCommon = {
                        fontMap: fontMap,
                        makeSymbol: buildCommon_makeSymbol,
                        mathsym: function(value, mode, options, classes) {
                            return void 0 === classes && (classes = []), "boldsymbol" === options.font && buildCommon_lookupSymbol(value, "Main-Bold", mode).metrics ? buildCommon_makeSymbol(value, "Main-Bold", mode, options, classes.concat([ "mathbf" ])) : "\\" === value || "main" === src_symbols[mode][value].font ? buildCommon_makeSymbol(value, "Main-Regular", mode, options, classes) : buildCommon_makeSymbol(value, "AMS-Regular", mode, options, classes.concat([ "amsrm" ]));
                        },
                        makeSpan: buildCommon_makeSpan,
                        makeSvgSpan: buildCommon_makeSvgSpan,
                        makeLineSpan: function(className, options, thickness) {
                            var line = buildCommon_makeSpan([ className ], [], options);
                            return line.height = Math.max(thickness || options.fontMetrics().defaultRuleThickness, options.minRuleThickness), 
                            line.style.borderBottomWidth = line.height + "em", line.maxFontSize = 1, line;
                        },
                        makeAnchor: function(href, classes, children, options) {
                            var anchor = new domTree_Anchor(href, classes, children, options);
                            return sizeElementFromChildren(anchor), anchor;
                        },
                        makeFragment: buildCommon_makeFragment,
                        wrapFragment: function(group, options) {
                            return group instanceof tree_DocumentFragment ? buildCommon_makeSpan([], [ group ], options) : group;
                        },
                        makeVList: function(params, options) {
                            for (var _getVListChildrenAndD = function(params) {
                                if ("individualShift" === params.positionType) {
                                    for (var oldChildren = params.children, children = [ oldChildren[0] ], _depth = -oldChildren[0].shift - oldChildren[0].elem.depth, currPos = _depth, i = 1; i < oldChildren.length; i++) {
                                        var diff = -oldChildren[i].shift - currPos - oldChildren[i].elem.depth, size = diff - (oldChildren[i - 1].elem.height + oldChildren[i - 1].elem.depth);
                                        currPos += diff, children.push({
                                            type: "kern",
                                            size: size
                                        }), children.push(oldChildren[i]);
                                    }
                                    return {
                                        children: children,
                                        depth: _depth
                                    };
                                }
                                var depth;
                                if ("top" === params.positionType) {
                                    for (var bottom = params.positionData, _i = 0; _i < params.children.length; _i++) {
                                        var child = params.children[_i];
                                        bottom -= "kern" === child.type ? child.size : child.elem.height + child.elem.depth;
                                    }
                                    depth = bottom;
                                } else if ("bottom" === params.positionType) depth = -params.positionData; else {
                                    var firstChild = params.children[0];
                                    if ("elem" !== firstChild.type) throw new Error('First child must have type "elem".');
                                    if ("shift" === params.positionType) depth = -firstChild.elem.depth - params.positionData; else {
                                        if ("firstBaseline" !== params.positionType) throw new Error("Invalid positionType " + params.positionType + ".");
                                        depth = -firstChild.elem.depth;
                                    }
                                }
                                return {
                                    children: params.children,
                                    depth: depth
                                };
                            }(params), children = _getVListChildrenAndD.children, depth = _getVListChildrenAndD.depth, pstrutSize = 0, i = 0; i < children.length; i++) {
                                var child = children[i];
                                if ("elem" === child.type) {
                                    var elem = child.elem;
                                    pstrutSize = Math.max(pstrutSize, elem.maxFontSize, elem.height);
                                }
                            }
                            pstrutSize += 2;
                            var pstrut = buildCommon_makeSpan([ "pstrut" ], []);
                            pstrut.style.height = pstrutSize + "em";
                            for (var realChildren = [], minPos = depth, maxPos = depth, currPos = depth, _i2 = 0; _i2 < children.length; _i2++) {
                                var _child = children[_i2];
                                if ("kern" === _child.type) currPos += _child.size; else {
                                    var _elem = _child.elem, classes = _child.wrapperClasses || [], style = _child.wrapperStyle || {}, childWrap = buildCommon_makeSpan(classes, [ pstrut, _elem ], void 0, style);
                                    childWrap.style.top = -pstrutSize - currPos - _elem.depth + "em", _child.marginLeft && (childWrap.style.marginLeft = _child.marginLeft), 
                                    _child.marginRight && (childWrap.style.marginRight = _child.marginRight), realChildren.push(childWrap), 
                                    currPos += _elem.height + _elem.depth;
                                }
                                minPos = Math.min(minPos, currPos), maxPos = Math.max(maxPos, currPos);
                            }
                            var rows, vlist = buildCommon_makeSpan([ "vlist" ], realChildren);
                            if (vlist.style.height = maxPos + "em", minPos < 0) {
                                var emptySpan = buildCommon_makeSpan([], []), depthStrut = buildCommon_makeSpan([ "vlist" ], [ emptySpan ]);
                                depthStrut.style.height = -minPos + "em";
                                var topStrut = buildCommon_makeSpan([ "vlist-s" ], [ new domTree_SymbolNode("​") ]);
                                rows = [ buildCommon_makeSpan([ "vlist-r" ], [ vlist, topStrut ]), buildCommon_makeSpan([ "vlist-r" ], [ depthStrut ]) ];
                            } else rows = [ buildCommon_makeSpan([ "vlist-r" ], [ vlist ]) ];
                            var vtable = buildCommon_makeSpan([ "vlist-t" ], rows);
                            return 2 === rows.length && vtable.classes.push("vlist-t2"), vtable.height = maxPos, 
                            vtable.depth = -minPos, vtable;
                        },
                        makeOrd: function(group, options, type) {
                            var mode = group.mode, text = group.text, classes = [ "mord" ], isFont = "math" === mode || "text" === mode && options.font, fontOrFamily = isFont ? options.font : options.fontFamily;
                            if (55349 === text.charCodeAt(0)) {
                                var _wideCharacterFont = function(wideChar, mode) {
                                    var codePoint = 1024 * (wideChar.charCodeAt(0) - 55296) + (wideChar.charCodeAt(1) - 56320) + 65536, j = "math" === mode ? 0 : 1;
                                    if (119808 <= codePoint && codePoint < 120484) {
                                        var i = Math.floor((codePoint - 119808) / 26);
                                        return [ wideLatinLetterData[i][2], wideLatinLetterData[i][j] ];
                                    }
                                    if (120782 <= codePoint && codePoint <= 120831) {
                                        var _i = Math.floor((codePoint - 120782) / 10);
                                        return [ wideNumeralData[_i][2], wideNumeralData[_i][j] ];
                                    }
                                    if (120485 === codePoint || 120486 === codePoint) return [ wideLatinLetterData[0][2], wideLatinLetterData[0][j] ];
                                    if (120486 < codePoint && codePoint < 120782) return [ "", "" ];
                                    throw new src_ParseError("Unsupported character: " + wideChar);
                                }(text, mode), wideFontName = _wideCharacterFont[0], wideFontClass = _wideCharacterFont[1];
                                return buildCommon_makeSymbol(text, wideFontName, mode, options, classes.concat(wideFontClass));
                            }
                            if (fontOrFamily) {
                                var fontName, fontClasses;
                                if ("boldsymbol" === fontOrFamily || "mathnormal" === fontOrFamily) {
                                    var fontData = "boldsymbol" === fontOrFamily ? function(value, mode, options, classes) {
                                        return buildCommon_lookupSymbol(value, "Math-BoldItalic", mode).metrics ? {
                                            fontName: "Math-BoldItalic",
                                            fontClass: "boldsymbol"
                                        } : {
                                            fontName: "Main-Bold",
                                            fontClass: "mathbf"
                                        };
                                    }(text, mode) : function(value, mode, options, classes) {
                                        return utils.contains(mathitLetters, value) ? {
                                            fontName: "Main-Italic",
                                            fontClass: "mathit"
                                        } : /[0-9]/.test(value.charAt(0)) ? {
                                            fontName: "Caligraphic-Regular",
                                            fontClass: "mathcal"
                                        } : {
                                            fontName: "Math-Italic",
                                            fontClass: "mathdefault"
                                        };
                                    }(text);
                                    fontName = fontData.fontName, fontClasses = [ fontData.fontClass ];
                                } else utils.contains(mathitLetters, text) ? (fontName = "Main-Italic", fontClasses = [ "mathit" ]) : isFont ? (fontName = fontMap[fontOrFamily].fontName, 
                                fontClasses = [ fontOrFamily ]) : (fontName = retrieveTextFontName(fontOrFamily, options.fontWeight, options.fontShape), 
                                fontClasses = [ fontOrFamily, options.fontWeight, options.fontShape ]);
                                if (buildCommon_lookupSymbol(text, fontName, mode).metrics) return buildCommon_makeSymbol(text, fontName, mode, options, classes.concat(fontClasses));
                                if (ligatures.hasOwnProperty(text) && "Typewriter" === fontName.substr(0, 10)) {
                                    for (var parts = [], i = 0; i < text.length; i++) parts.push(buildCommon_makeSymbol(text[i], fontName, mode, options, classes.concat(fontClasses)));
                                    return buildCommon_makeFragment(parts);
                                }
                            }
                            if ("mathord" === type) {
                                var fontLookup = function(value, mode, options, classes) {
                                    return /[0-9]/.test(value.charAt(0)) || utils.contains(mathitLetters, value) ? {
                                        fontName: "Main-Italic",
                                        fontClass: "mathit"
                                    } : {
                                        fontName: "Math-Italic",
                                        fontClass: "mathdefault"
                                    };
                                }(text);
                                return buildCommon_makeSymbol(text, fontLookup.fontName, mode, options, classes.concat([ fontLookup.fontClass ]));
                            }
                            if ("textord" === type) {
                                var font = src_symbols[mode][text] && src_symbols[mode][text].font;
                                if ("ams" === font) {
                                    var _fontName = retrieveTextFontName("amsrm", options.fontWeight, options.fontShape);
                                    return buildCommon_makeSymbol(text, _fontName, mode, options, classes.concat("amsrm", options.fontWeight, options.fontShape));
                                }
                                if ("main" !== font && font) {
                                    var _fontName3 = retrieveTextFontName(font, options.fontWeight, options.fontShape);
                                    return buildCommon_makeSymbol(text, _fontName3, mode, options, classes.concat(_fontName3, options.fontWeight, options.fontShape));
                                }
                                var _fontName2 = retrieveTextFontName("textrm", options.fontWeight, options.fontShape);
                                return buildCommon_makeSymbol(text, _fontName2, mode, options, classes.concat(options.fontWeight, options.fontShape));
                            }
                            throw new Error("unexpected type: " + type + " in makeOrd");
                        },
                        makeGlue: function(measurement, options) {
                            var rule = buildCommon_makeSpan([ "mspace" ], [], options), size = units_calculateSize(measurement, options);
                            return rule.style.marginRight = size + "em", rule;
                        },
                        staticSvg: function(value, options) {
                            var _svgData$value = svgData[value], pathName = _svgData$value[0], width = _svgData$value[1], height = _svgData$value[2], path = new domTree_PathNode(pathName), svgNode = new SvgNode([ path ], {
                                width: width + "em",
                                height: height + "em",
                                style: "width:" + width + "em",
                                viewBox: "0 0 " + 1e3 * width + " " + 1e3 * height,
                                preserveAspectRatio: "xMinYMin"
                            }), span = buildCommon_makeSvgSpan([ "overlay" ], [ svgNode ], options);
                            return span.height = height, span.style.height = height + "em", span.style.width = width + "em", 
                            span;
                        },
                        svgData: svgData,
                        tryCombineChars: function(chars) {
                            for (var i = 0; i < chars.length - 1; i++) {
                                var prev = chars[i], next = chars[i + 1];
                                prev instanceof domTree_SymbolNode && next instanceof domTree_SymbolNode && buildCommon_canCombine(prev, next) && (prev.text += next.text, 
                                prev.height = Math.max(prev.height, next.height), prev.depth = Math.max(prev.depth, next.depth), 
                                prev.italic = next.italic, chars.splice(i + 1, 1), i--);
                            }
                            return chars;
                        }
                    };
                    function assertNodeType(node, type) {
                        var typedNode = checkNodeType(node, type);
                        if (!typedNode) throw new Error("Expected node of type " + type + ", but got " + (node ? "node of type " + node.type : String(node)));
                        return typedNode;
                    }
                    function checkNodeType(node, type) {
                        return node && node.type === type ? node : null;
                    }
                    function assertAtomFamily(node, family) {
                        var typedNode = function(node, family) {
                            return node && "atom" === node.type && node.family === family ? node : null;
                        }(node, family);
                        if (!typedNode) throw new Error('Expected node of type "atom" and family "' + family + '", but got ' + (node ? "atom" === node.type ? "atom of family " + node.family : "node of type " + node.type : String(node)));
                        return typedNode;
                    }
                    function assertSymbolNodeType(node) {
                        var typedNode = checkSymbolNodeType(node);
                        if (!typedNode) throw new Error("Expected node of symbol group type, but got " + (node ? "node of type " + node.type : String(node)));
                        return typedNode;
                    }
                    function checkSymbolNodeType(node) {
                        return node && ("atom" === node.type || NON_ATOMS.hasOwnProperty(node.type)) ? node : null;
                    }
                    var thinspace = {
                        number: 3,
                        unit: "mu"
                    }, mediumspace = {
                        number: 4,
                        unit: "mu"
                    }, thickspace = {
                        number: 5,
                        unit: "mu"
                    }, spacings = {
                        mord: {
                            mop: thinspace,
                            mbin: mediumspace,
                            mrel: thickspace,
                            minner: thinspace
                        },
                        mop: {
                            mord: thinspace,
                            mop: thinspace,
                            mrel: thickspace,
                            minner: thinspace
                        },
                        mbin: {
                            mord: mediumspace,
                            mop: mediumspace,
                            mopen: mediumspace,
                            minner: mediumspace
                        },
                        mrel: {
                            mord: thickspace,
                            mop: thickspace,
                            mopen: thickspace,
                            minner: thickspace
                        },
                        mopen: {},
                        mclose: {
                            mop: thinspace,
                            mbin: mediumspace,
                            mrel: thickspace,
                            minner: thinspace
                        },
                        mpunct: {
                            mord: thinspace,
                            mop: thinspace,
                            mrel: thickspace,
                            mopen: thinspace,
                            mclose: thinspace,
                            mpunct: thinspace,
                            minner: thinspace
                        },
                        minner: {
                            mord: thinspace,
                            mop: thinspace,
                            mbin: mediumspace,
                            mrel: thickspace,
                            mopen: thinspace,
                            mpunct: thinspace,
                            minner: thinspace
                        }
                    }, tightSpacings = {
                        mord: {
                            mop: thinspace
                        },
                        mop: {
                            mord: thinspace,
                            mop: thinspace
                        },
                        mbin: {},
                        mrel: {},
                        mopen: {},
                        mclose: {
                            mop: thinspace
                        },
                        mpunct: {},
                        minner: {
                            mop: thinspace
                        }
                    }, _functions = {}, _htmlGroupBuilders = {}, _mathmlGroupBuilders = {};
                    function defineFunction(_ref) {
                        for (var type = _ref.type, names = _ref.names, props = _ref.props, handler = _ref.handler, htmlBuilder = _ref.htmlBuilder, mathmlBuilder = _ref.mathmlBuilder, data = {
                            type: type,
                            numArgs: props.numArgs,
                            argTypes: props.argTypes,
                            greediness: void 0 === props.greediness ? 1 : props.greediness,
                            allowedInText: !!props.allowedInText,
                            allowedInMath: void 0 === props.allowedInMath || props.allowedInMath,
                            numOptionalArgs: props.numOptionalArgs || 0,
                            infix: !!props.infix,
                            handler: handler
                        }, i = 0; i < names.length; ++i) _functions[names[i]] = data;
                        type && (htmlBuilder && (_htmlGroupBuilders[type] = htmlBuilder), mathmlBuilder && (_mathmlGroupBuilders[type] = mathmlBuilder));
                    }
                    function defineFunctionBuilders(_ref2) {
                        defineFunction({
                            type: _ref2.type,
                            names: [],
                            props: {
                                numArgs: 0
                            },
                            handler: function() {
                                throw new Error("Should never be called.");
                            },
                            htmlBuilder: _ref2.htmlBuilder,
                            mathmlBuilder: _ref2.mathmlBuilder
                        });
                    }
                    var defineFunction_ordargument = function(arg) {
                        var node = checkNodeType(arg, "ordgroup");
                        return node ? node.body : [ arg ];
                    }, buildHTML_makeSpan = buildCommon.makeSpan, binLeftCanceller = [ "leftmost", "mbin", "mopen", "mrel", "mop", "mpunct" ], binRightCanceller = [ "rightmost", "mrel", "mclose", "mpunct" ], styleMap = {
                        display: src_Style.DISPLAY,
                        text: src_Style.TEXT,
                        script: src_Style.SCRIPT,
                        scriptscript: src_Style.SCRIPTSCRIPT
                    }, DomEnum = {
                        mord: "mord",
                        mop: "mop",
                        mbin: "mbin",
                        mrel: "mrel",
                        mopen: "mopen",
                        mclose: "mclose",
                        mpunct: "mpunct",
                        minner: "minner"
                    }, buildHTML_buildExpression = function(expression, options, isRealGroup, surrounding) {
                        void 0 === surrounding && (surrounding = [ null, null ]);
                        for (var groups = [], i = 0; i < expression.length; i++) {
                            var output = buildHTML_buildGroup(expression[i], options);
                            if (output instanceof tree_DocumentFragment) {
                                var children = output.children;
                                groups.push.apply(groups, children);
                            } else groups.push(output);
                        }
                        if (!isRealGroup) return groups;
                        var glueOptions = options;
                        if (1 === expression.length) {
                            var node = checkNodeType(expression[0], "sizing") || checkNodeType(expression[0], "styling");
                            node && ("sizing" === node.type ? glueOptions = options.havingSize(node.size) : "styling" === node.type && (glueOptions = options.havingStyle(styleMap[node.style])));
                        }
                        var dummyPrev = buildHTML_makeSpan([ surrounding[0] || "leftmost" ], [], options), dummyNext = buildHTML_makeSpan([ surrounding[1] || "rightmost" ], [], options);
                        return traverseNonSpaceNodes(groups, function(node, prev) {
                            var prevType = prev.classes[0], type = node.classes[0];
                            "mbin" === prevType && utils.contains(binRightCanceller, type) ? prev.classes[0] = "mord" : "mbin" === type && utils.contains(binLeftCanceller, prevType) && (node.classes[0] = "mord");
                        }, {
                            node: dummyPrev
                        }, dummyNext), traverseNonSpaceNodes(groups, function(node, prev) {
                            var prevType = getTypeOfDomTree(prev), type = getTypeOfDomTree(node), space = prevType && type ? node.hasClass("mtight") ? tightSpacings[prevType][type] : spacings[prevType][type] : null;
                            if (space) return buildCommon.makeGlue(space, glueOptions);
                        }, {
                            node: dummyPrev
                        }, dummyNext), groups;
                    }, traverseNonSpaceNodes = function traverseNonSpaceNodes(nodes, callback, prev, next) {
                        next && nodes.push(next);
                        for (var i = 0; i < nodes.length; i++) {
                            var node = nodes[i], partialGroup = buildHTML_checkPartialGroup(node);
                            if (partialGroup) traverseNonSpaceNodes(partialGroup.children, callback, prev); else if ("mspace" !== node.classes[0]) {
                                var result = callback(node, prev.node);
                                result && (prev.insertAfter ? prev.insertAfter(result) : (nodes.unshift(result), 
                                i++)), prev.node = node, prev.insertAfter = function(index) {
                                    return function(n) {
                                        nodes.splice(index + 1, 0, n), i++;
                                    };
                                }(i);
                            }
                        }
                        next && nodes.pop();
                    }, buildHTML_checkPartialGroup = function(node) {
                        return node instanceof tree_DocumentFragment || node instanceof domTree_Anchor ? node : null;
                    }, getTypeOfDomTree = function(node, side) {
                        return node ? (side && (node = function getOutermostNode(node, side) {
                            var partialGroup = buildHTML_checkPartialGroup(node);
                            if (partialGroup) {
                                var children = partialGroup.children;
                                if (children.length) {
                                    if ("right" === side) return getOutermostNode(children[children.length - 1], "right");
                                    if ("left" === side) return getOutermostNode(children[0], "left");
                                }
                            }
                            return node;
                        }(node, side)), DomEnum[node.classes[0]] || null) : null;
                    }, makeNullDelimiter = function(options, classes) {
                        var moreClasses = [ "nulldelimiter" ].concat(options.baseSizingClasses());
                        return buildHTML_makeSpan(classes.concat(moreClasses));
                    }, buildHTML_buildGroup = function(group, options, baseOptions) {
                        if (!group) return buildHTML_makeSpan();
                        if (_htmlGroupBuilders[group.type]) {
                            var groupNode = _htmlGroupBuilders[group.type](group, options);
                            if (baseOptions && options.size !== baseOptions.size) {
                                groupNode = buildHTML_makeSpan(options.sizingClasses(baseOptions), [ groupNode ], options);
                                var multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier;
                                groupNode.height *= multiplier, groupNode.depth *= multiplier;
                            }
                            return groupNode;
                        }
                        throw new src_ParseError("Got group of unknown type: '" + group.type + "'");
                    };
                    function buildHTMLUnbreakable(children, options) {
                        var body = buildHTML_makeSpan([ "base" ], children, options), strut = buildHTML_makeSpan([ "strut" ]);
                        return strut.style.height = body.height + body.depth + "em", strut.style.verticalAlign = -body.depth + "em", 
                        body.children.unshift(strut), body;
                    }
                    function buildHTML(tree, options) {
                        var tag = null;
                        1 === tree.length && "tag" === tree[0].type && (tag = tree[0].tag, tree = tree[0].body);
                        for (var tagChild, expression = buildHTML_buildExpression(tree, options, !0), children = [], parts = [], i = 0; i < expression.length; i++) if (parts.push(expression[i]), 
                        expression[i].hasClass("mbin") || expression[i].hasClass("mrel") || expression[i].hasClass("allowbreak")) {
                            for (var nobreak = !1; i < expression.length - 1 && expression[i + 1].hasClass("mspace") && !expression[i + 1].hasClass("newline"); ) i++, 
                            parts.push(expression[i]), expression[i].hasClass("nobreak") && (nobreak = !0);
                            nobreak || (children.push(buildHTMLUnbreakable(parts, options)), parts = []);
                        } else expression[i].hasClass("newline") && (parts.pop(), parts.length > 0 && (children.push(buildHTMLUnbreakable(parts, options)), 
                        parts = []), children.push(expression[i]));
                        parts.length > 0 && children.push(buildHTMLUnbreakable(parts, options)), tag && ((tagChild = buildHTMLUnbreakable(buildHTML_buildExpression(tag, options, !0))).classes = [ "tag" ], 
                        children.push(tagChild));
                        var htmlNode = buildHTML_makeSpan([ "katex-html" ], children);
                        if (htmlNode.setAttribute("aria-hidden", "true"), tagChild) {
                            var strut = tagChild.children[0];
                            strut.style.height = htmlNode.height + htmlNode.depth + "em", strut.style.verticalAlign = -htmlNode.depth + "em";
                        }
                        return htmlNode;
                    }
                    function newDocumentFragment(children) {
                        return new tree_DocumentFragment(children);
                    }
                    var mathMLTree_MathNode = function() {
                        function MathNode(type, children) {
                            this.type = void 0, this.attributes = void 0, this.children = void 0, this.type = type, 
                            this.attributes = {}, this.children = children || [];
                        }
                        var _proto = MathNode.prototype;
                        return _proto.setAttribute = function(name, value) {
                            this.attributes[name] = value;
                        }, _proto.getAttribute = function(name) {
                            return this.attributes[name];
                        }, _proto.toNode = function() {
                            var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", this.type);
                            for (var attr in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, attr) && node.setAttribute(attr, this.attributes[attr]);
                            for (var i = 0; i < this.children.length; i++) node.appendChild(this.children[i].toNode());
                            return node;
                        }, _proto.toMarkup = function() {
                            var markup = "<" + this.type;
                            for (var attr in this.attributes) Object.prototype.hasOwnProperty.call(this.attributes, attr) && (markup += " " + attr + '="', 
                            markup += utils.escape(this.attributes[attr]), markup += '"');
                            markup += ">";
                            for (var i = 0; i < this.children.length; i++) markup += this.children[i].toMarkup();
                            return markup += "</" + this.type + ">";
                        }, _proto.toText = function() {
                            return this.children.map(function(child) {
                                return child.toText();
                            }).join("");
                        }, MathNode;
                    }(), mathMLTree_TextNode = function() {
                        function TextNode(text) {
                            this.text = void 0, this.text = text;
                        }
                        var _proto2 = TextNode.prototype;
                        return _proto2.toNode = function() {
                            return document.createTextNode(this.text);
                        }, _proto2.toMarkup = function() {
                            return utils.escape(this.toText());
                        }, _proto2.toText = function() {
                            return this.text;
                        }, TextNode;
                    }(), mathMLTree = {
                        MathNode: mathMLTree_MathNode,
                        TextNode: mathMLTree_TextNode,
                        SpaceNode: function() {
                            function SpaceNode(width) {
                                this.width = void 0, this.character = void 0, this.width = width, this.character = width >= .05555 && width <= .05556 ? " " : width >= .1666 && width <= .1667 ? " " : width >= .2222 && width <= .2223 ? " " : width >= .2777 && width <= .2778 ? "  " : width >= -.05556 && width <= -.05555 ? " ⁣" : width >= -.1667 && width <= -.1666 ? " ⁣" : width >= -.2223 && width <= -.2222 ? " ⁣" : width >= -.2778 && width <= -.2777 ? " ⁣" : null;
                            }
                            var _proto3 = SpaceNode.prototype;
                            return _proto3.toNode = function() {
                                if (this.character) return document.createTextNode(this.character);
                                var node = document.createElementNS("http://www.w3.org/1998/Math/MathML", "mspace");
                                return node.setAttribute("width", this.width + "em"), node;
                            }, _proto3.toMarkup = function() {
                                return this.character ? "<mtext>" + this.character + "</mtext>" : '<mspace width="' + this.width + 'em"/>';
                            }, _proto3.toText = function() {
                                return this.character ? this.character : " ";
                            }, SpaceNode;
                        }(),
                        newDocumentFragment: newDocumentFragment
                    }, buildMathML_makeText = function(text, mode, options) {
                        return !src_symbols[mode][text] || !src_symbols[mode][text].replace || 55349 === text.charCodeAt(0) || ligatures.hasOwnProperty(text) && options && (options.fontFamily && "tt" === options.fontFamily.substr(4, 2) || options.font && "tt" === options.font.substr(4, 2)) || (text = src_symbols[mode][text].replace), 
                        new mathMLTree.TextNode(text);
                    }, buildMathML_makeRow = function(body) {
                        return 1 === body.length ? body[0] : new mathMLTree.MathNode("mrow", body);
                    }, buildMathML_getVariant = function(group, options) {
                        if ("texttt" === options.fontFamily) return "monospace";
                        if ("textsf" === options.fontFamily) return "textit" === options.fontShape && "textbf" === options.fontWeight ? "sans-serif-bold-italic" : "textit" === options.fontShape ? "sans-serif-italic" : "textbf" === options.fontWeight ? "bold-sans-serif" : "sans-serif";
                        if ("textit" === options.fontShape && "textbf" === options.fontWeight) return "bold-italic";
                        if ("textit" === options.fontShape) return "italic";
                        if ("textbf" === options.fontWeight) return "bold";
                        var font = options.font;
                        if (!font || "mathnormal" === font) return null;
                        var mode = group.mode;
                        if ("mathit" === font) return "italic";
                        if ("boldsymbol" === font) return "bold-italic";
                        if ("mathbf" === font) return "bold";
                        if ("mathbb" === font) return "double-struck";
                        if ("mathfrak" === font) return "fraktur";
                        if ("mathscr" === font || "mathcal" === font) return "script";
                        if ("mathsf" === font) return "sans-serif";
                        if ("mathtt" === font) return "monospace";
                        var text = group.text;
                        return utils.contains([ "\\imath", "\\jmath" ], text) ? null : (src_symbols[mode][text] && src_symbols[mode][text].replace && (text = src_symbols[mode][text].replace), 
                        getCharacterMetrics(text, buildCommon.fontMap[font].fontName, mode) ? buildCommon.fontMap[font].variant : null);
                    }, buildMathML_buildExpression = function(expression, options, isOrdgroup) {
                        if (1 === expression.length) {
                            var group = buildMathML_buildGroup(expression[0], options);
                            return isOrdgroup && group instanceof mathMLTree_MathNode && "mo" === group.type && (group.setAttribute("lspace", "0em"), 
                            group.setAttribute("rspace", "0em")), [ group ];
                        }
                        for (var lastGroup, groups = [], i = 0; i < expression.length; i++) {
                            var _group = buildMathML_buildGroup(expression[i], options);
                            if (_group instanceof mathMLTree_MathNode && lastGroup instanceof mathMLTree_MathNode) {
                                if ("mtext" === _group.type && "mtext" === lastGroup.type && _group.getAttribute("mathvariant") === lastGroup.getAttribute("mathvariant")) {
                                    var _lastGroup$children;
                                    (_lastGroup$children = lastGroup.children).push.apply(_lastGroup$children, _group.children);
                                    continue;
                                }
                                if ("mn" === _group.type && "mn" === lastGroup.type) {
                                    var _lastGroup$children2;
                                    (_lastGroup$children2 = lastGroup.children).push.apply(_lastGroup$children2, _group.children);
                                    continue;
                                }
                                if ("mi" === _group.type && 1 === _group.children.length && "mn" === lastGroup.type) {
                                    var child = _group.children[0];
                                    if (child instanceof mathMLTree_TextNode && "." === child.text) {
                                        var _lastGroup$children3;
                                        (_lastGroup$children3 = lastGroup.children).push.apply(_lastGroup$children3, _group.children);
                                        continue;
                                    }
                                } else if ("mi" === lastGroup.type && 1 === lastGroup.children.length) {
                                    var lastChild = lastGroup.children[0];
                                    if (lastChild instanceof mathMLTree_TextNode && "̸" === lastChild.text && ("mo" === _group.type || "mi" === _group.type || "mn" === _group.type)) {
                                        var _child = _group.children[0];
                                        _child instanceof mathMLTree_TextNode && _child.text.length > 0 && (_child.text = _child.text.slice(0, 1) + "̸" + _child.text.slice(1), 
                                        groups.pop());
                                    }
                                }
                            }
                            groups.push(_group), lastGroup = _group;
                        }
                        return groups;
                    }, buildExpressionRow = function(expression, options, isOrdgroup) {
                        return buildMathML_makeRow(buildMathML_buildExpression(expression, options, isOrdgroup));
                    }, buildMathML_buildGroup = function(group, options) {
                        if (!group) return new mathMLTree.MathNode("mrow");
                        if (_mathmlGroupBuilders[group.type]) return _mathmlGroupBuilders[group.type](group, options);
                        throw new src_ParseError("Got group of unknown type: '" + group.type + "'");
                    };
                    function buildMathML(tree, texExpression, options, forMathmlOnly) {
                        var wrapper, expression = buildMathML_buildExpression(tree, options);
                        wrapper = 1 === expression.length && expression[0] instanceof mathMLTree_MathNode && utils.contains([ "mrow", "mtable" ], expression[0].type) ? expression[0] : new mathMLTree.MathNode("mrow", expression);
                        var annotation = new mathMLTree.MathNode("annotation", [ new mathMLTree.TextNode(texExpression) ]);
                        annotation.setAttribute("encoding", "application/x-tex");
                        var semantics = new mathMLTree.MathNode("semantics", [ wrapper, annotation ]), math = new mathMLTree.MathNode("math", [ semantics ]);
                        math.setAttribute("xmlns", "http://www.w3.org/1998/Math/MathML");
                        var wrapperClass = forMathmlOnly ? "katex" : "katex-mathml";
                        return buildCommon.makeSpan([ wrapperClass ], [ math ]);
                    }
                    var buildTree_optionsFromSettings = function(settings) {
                        return new src_Options({
                            style: settings.displayMode ? src_Style.DISPLAY : src_Style.TEXT,
                            maxSize: settings.maxSize,
                            minRuleThickness: settings.minRuleThickness
                        });
                    }, buildTree_displayWrap = function(node, settings) {
                        if (settings.displayMode) {
                            var classes = [ "katex-display" ];
                            settings.leqno && classes.push("leqno"), settings.fleqn && classes.push("fleqn"), 
                            node = buildCommon.makeSpan(classes, [ node ]);
                        }
                        return node;
                    }, buildTree_buildTree = function(tree, expression, settings) {
                        var katexNode, options = buildTree_optionsFromSettings(settings);
                        if ("mathml" === settings.output) return buildMathML(tree, expression, options, !0);
                        if ("html" === settings.output) {
                            var htmlNode = buildHTML(tree, options);
                            katexNode = buildCommon.makeSpan([ "katex" ], [ htmlNode ]);
                        } else {
                            var mathMLNode = buildMathML(tree, expression, options, !1), _htmlNode = buildHTML(tree, options);
                            katexNode = buildCommon.makeSpan([ "katex" ], [ mathMLNode, _htmlNode ]);
                        }
                        return buildTree_displayWrap(katexNode, settings);
                    }, stretchyCodePoint = {
                        widehat: "^",
                        widecheck: "ˇ",
                        widetilde: "~",
                        utilde: "~",
                        overleftarrow: "←",
                        underleftarrow: "←",
                        xleftarrow: "←",
                        overrightarrow: "→",
                        underrightarrow: "→",
                        xrightarrow: "→",
                        underbrace: "⏟",
                        overbrace: "⏞",
                        overgroup: "⏠",
                        undergroup: "⏡",
                        overleftrightarrow: "↔",
                        underleftrightarrow: "↔",
                        xleftrightarrow: "↔",
                        Overrightarrow: "⇒",
                        xRightarrow: "⇒",
                        overleftharpoon: "↼",
                        xleftharpoonup: "↼",
                        overrightharpoon: "⇀",
                        xrightharpoonup: "⇀",
                        xLeftarrow: "⇐",
                        xLeftrightarrow: "⇔",
                        xhookleftarrow: "↩",
                        xhookrightarrow: "↪",
                        xmapsto: "↦",
                        xrightharpoondown: "⇁",
                        xleftharpoondown: "↽",
                        xrightleftharpoons: "⇌",
                        xleftrightharpoons: "⇋",
                        xtwoheadleftarrow: "↞",
                        xtwoheadrightarrow: "↠",
                        xlongequal: "=",
                        xtofrom: "⇄",
                        xrightleftarrows: "⇄",
                        xrightequilibrium: "⇌",
                        xleftequilibrium: "⇋"
                    }, katexImagesData = {
                        overrightarrow: [ [ "rightarrow" ], .888, 522, "xMaxYMin" ],
                        overleftarrow: [ [ "leftarrow" ], .888, 522, "xMinYMin" ],
                        underrightarrow: [ [ "rightarrow" ], .888, 522, "xMaxYMin" ],
                        underleftarrow: [ [ "leftarrow" ], .888, 522, "xMinYMin" ],
                        xrightarrow: [ [ "rightarrow" ], 1.469, 522, "xMaxYMin" ],
                        xleftarrow: [ [ "leftarrow" ], 1.469, 522, "xMinYMin" ],
                        Overrightarrow: [ [ "doublerightarrow" ], .888, 560, "xMaxYMin" ],
                        xRightarrow: [ [ "doublerightarrow" ], 1.526, 560, "xMaxYMin" ],
                        xLeftarrow: [ [ "doubleleftarrow" ], 1.526, 560, "xMinYMin" ],
                        overleftharpoon: [ [ "leftharpoon" ], .888, 522, "xMinYMin" ],
                        xleftharpoonup: [ [ "leftharpoon" ], .888, 522, "xMinYMin" ],
                        xleftharpoondown: [ [ "leftharpoondown" ], .888, 522, "xMinYMin" ],
                        overrightharpoon: [ [ "rightharpoon" ], .888, 522, "xMaxYMin" ],
                        xrightharpoonup: [ [ "rightharpoon" ], .888, 522, "xMaxYMin" ],
                        xrightharpoondown: [ [ "rightharpoondown" ], .888, 522, "xMaxYMin" ],
                        xlongequal: [ [ "longequal" ], .888, 334, "xMinYMin" ],
                        xtwoheadleftarrow: [ [ "twoheadleftarrow" ], .888, 334, "xMinYMin" ],
                        xtwoheadrightarrow: [ [ "twoheadrightarrow" ], .888, 334, "xMaxYMin" ],
                        overleftrightarrow: [ [ "leftarrow", "rightarrow" ], .888, 522 ],
                        overbrace: [ [ "leftbrace", "midbrace", "rightbrace" ], 1.6, 548 ],
                        underbrace: [ [ "leftbraceunder", "midbraceunder", "rightbraceunder" ], 1.6, 548 ],
                        underleftrightarrow: [ [ "leftarrow", "rightarrow" ], .888, 522 ],
                        xleftrightarrow: [ [ "leftarrow", "rightarrow" ], 1.75, 522 ],
                        xLeftrightarrow: [ [ "doubleleftarrow", "doublerightarrow" ], 1.75, 560 ],
                        xrightleftharpoons: [ [ "leftharpoondownplus", "rightharpoonplus" ], 1.75, 716 ],
                        xleftrightharpoons: [ [ "leftharpoonplus", "rightharpoondownplus" ], 1.75, 716 ],
                        xhookleftarrow: [ [ "leftarrow", "righthook" ], 1.08, 522 ],
                        xhookrightarrow: [ [ "lefthook", "rightarrow" ], 1.08, 522 ],
                        overlinesegment: [ [ "leftlinesegment", "rightlinesegment" ], .888, 522 ],
                        underlinesegment: [ [ "leftlinesegment", "rightlinesegment" ], .888, 522 ],
                        overgroup: [ [ "leftgroup", "rightgroup" ], .888, 342 ],
                        undergroup: [ [ "leftgroupunder", "rightgroupunder" ], .888, 342 ],
                        xmapsto: [ [ "leftmapsto", "rightarrow" ], 1.5, 522 ],
                        xtofrom: [ [ "leftToFrom", "rightToFrom" ], 1.75, 528 ],
                        xrightleftarrows: [ [ "baraboveleftarrow", "rightarrowabovebar" ], 1.75, 901 ],
                        xrightequilibrium: [ [ "baraboveshortleftharpoon", "rightharpoonaboveshortbar" ], 1.75, 716 ],
                        xleftequilibrium: [ [ "shortbaraboveleftharpoon", "shortrightharpoonabovebar" ], 1.75, 716 ]
                    }, groupLength = function(arg) {
                        return "ordgroup" === arg.type ? arg.body.length : 1;
                    }, stretchy_encloseSpan$0 = function(inner, label, pad, options) {
                        var img, totalHeight = inner.height + inner.depth + 2 * pad;
                        if (/fbox|color/.test(label)) {
                            if (img = buildCommon.makeSpan([ "stretchy", label ], [], options), "fbox" === label) {
                                var color = options.color && options.getColor();
                                color && (img.style.borderColor = color);
                            }
                        } else {
                            var lines = [];
                            /^[bx]cancel$/.test(label) && lines.push(new LineNode({
                                x1: "0",
                                y1: "0",
                                x2: "100%",
                                y2: "100%",
                                "stroke-width": "0.046em"
                            })), /^x?cancel$/.test(label) && lines.push(new LineNode({
                                x1: "0",
                                y1: "100%",
                                x2: "100%",
                                y2: "0",
                                "stroke-width": "0.046em"
                            }));
                            var svgNode = new SvgNode(lines, {
                                width: "100%",
                                height: totalHeight + "em"
                            });
                            img = buildCommon.makeSvgSpan([], [ svgNode ], options);
                        }
                        return img.height = totalHeight, img.style.height = totalHeight + "em", img;
                    }, stretchy_mathMLnode$0 = function(label) {
                        var node = new mathMLTree.MathNode("mo", [ new mathMLTree.TextNode(stretchyCodePoint[label.substr(1)]) ]);
                        return node.setAttribute("stretchy", "true"), node;
                    }, stretchy_svgSpan$0 = function(group, options) {
                        var _buildSvgSpan_ = function() {
                            var viewBoxWidth = 4e5, label = group.label.substr(1);
                            if (utils.contains([ "widehat", "widecheck", "widetilde", "utilde" ], label)) {
                                var viewBoxHeight, pathName, _height, numChars = groupLength(group.base);
                                if (numChars > 5) "widehat" === label || "widecheck" === label ? (viewBoxHeight = 420, 
                                viewBoxWidth = 2364, _height = .42, pathName = label + "4") : (viewBoxHeight = 312, 
                                viewBoxWidth = 2340, _height = .34, pathName = "tilde4"); else {
                                    var imgIndex = [ 1, 1, 2, 2, 3, 3 ][numChars];
                                    "widehat" === label || "widecheck" === label ? (viewBoxWidth = [ 0, 1062, 2364, 2364, 2364 ][imgIndex], 
                                    viewBoxHeight = [ 0, 239, 300, 360, 420 ][imgIndex], _height = [ 0, .24, .3, .3, .36, .42 ][imgIndex], 
                                    pathName = label + imgIndex) : (viewBoxWidth = [ 0, 600, 1033, 2339, 2340 ][imgIndex], 
                                    viewBoxHeight = [ 0, 260, 286, 306, 312 ][imgIndex], _height = [ 0, .26, .286, .3, .306, .34 ][imgIndex], 
                                    pathName = "tilde" + imgIndex);
                                }
                                var path = new domTree_PathNode(pathName), svgNode = new SvgNode([ path ], {
                                    width: "100%",
                                    height: _height + "em",
                                    viewBox: "0 0 " + viewBoxWidth + " " + viewBoxHeight,
                                    preserveAspectRatio: "none"
                                });
                                return {
                                    span: buildCommon.makeSvgSpan([], [ svgNode ], options),
                                    minWidth: 0,
                                    height: _height
                                };
                            }
                            var widthClasses, aligns, spans = [], data = katexImagesData[label], paths = data[0], _minWidth = data[1], _viewBoxHeight = data[2], _height2 = _viewBoxHeight / 1e3, numSvgChildren = paths.length;
                            if (1 === numSvgChildren) widthClasses = [ "hide-tail" ], aligns = [ data[3] ]; else if (2 === numSvgChildren) widthClasses = [ "halfarrow-left", "halfarrow-right" ], 
                            aligns = [ "xMinYMin", "xMaxYMin" ]; else {
                                if (3 !== numSvgChildren) throw new Error("Correct katexImagesData or update code here to support\n                    " + numSvgChildren + " children.");
                                widthClasses = [ "brace-left", "brace-center", "brace-right" ], aligns = [ "xMinYMin", "xMidYMin", "xMaxYMin" ];
                            }
                            for (var i = 0; i < numSvgChildren; i++) {
                                var _path = new domTree_PathNode(paths[i]), _svgNode = new SvgNode([ _path ], {
                                    width: "400em",
                                    height: _height2 + "em",
                                    viewBox: "0 0 " + viewBoxWidth + " " + _viewBoxHeight,
                                    preserveAspectRatio: aligns[i] + " slice"
                                }), _span = buildCommon.makeSvgSpan([ widthClasses[i] ], [ _svgNode ], options);
                                if (1 === numSvgChildren) return {
                                    span: _span,
                                    minWidth: _minWidth,
                                    height: _height2
                                };
                                _span.style.height = _height2 + "em", spans.push(_span);
                            }
                            return {
                                span: buildCommon.makeSpan([ "stretchy" ], spans, options),
                                minWidth: _minWidth,
                                height: _height2
                            };
                        }(), span = _buildSvgSpan_.span, minWidth = _buildSvgSpan_.minWidth, height = _buildSvgSpan_.height;
                        return span.height = height, span.style.height = height + "em", minWidth > 0 && (span.style.minWidth = minWidth + "em"), 
                        span;
                    }, accent_htmlBuilder = function(grp, options) {
                        var base, group, supSubGroup, supSub = checkNodeType(grp, "supsub");
                        supSub ? (base = (group = assertNodeType(supSub.base, "accent")).base, supSub.base = base, 
                        supSubGroup = function(group) {
                            if (group instanceof domTree_Span) return group;
                            throw new Error("Expected span<HtmlDomNode> but got " + String(group) + ".");
                        }(buildHTML_buildGroup(supSub, options)), supSub.base = group) : base = (group = assertNodeType(grp, "accent")).base;
                        var body = buildHTML_buildGroup(base, options.havingCrampedStyle()), skew = 0;
                        if (group.isShifty && utils.isCharacterBox(base)) {
                            var baseChar = utils.getBaseElem(base);
                            skew = assertSymbolDomNode(buildHTML_buildGroup(baseChar, options.havingCrampedStyle())).skew;
                        }
                        var accentBody, clearance = Math.min(body.height, options.fontMetrics().xHeight);
                        if (group.isStretchy) accentBody = stretchy_svgSpan$0(group, options), accentBody = buildCommon.makeVList({
                            positionType: "firstBaseline",
                            children: [ {
                                type: "elem",
                                elem: body
                            }, {
                                type: "elem",
                                elem: accentBody,
                                wrapperClasses: [ "svg-align" ],
                                wrapperStyle: skew > 0 ? {
                                    width: "calc(100% - " + 2 * skew + "em)",
                                    marginLeft: 2 * skew + "em"
                                } : void 0
                            } ]
                        }, options); else {
                            var accent, width;
                            "\\vec" === group.label ? (accent = buildCommon.staticSvg("vec", options), width = buildCommon.svgData.vec[1]) : ((accent = assertSymbolDomNode(accent = buildCommon.makeOrd({
                                mode: group.mode,
                                text: group.label
                            }, options, "textord"))).italic = 0, width = accent.width), accentBody = buildCommon.makeSpan([ "accent-body" ], [ accent ]);
                            var accentFull = "\\textcircled" === group.label;
                            accentFull && (accentBody.classes.push("accent-full"), clearance = body.height);
                            var left = skew;
                            accentFull || (left -= width / 2), accentBody.style.left = left + "em", "\\textcircled" === group.label && (accentBody.style.top = ".2em"), 
                            accentBody = buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: body
                                }, {
                                    type: "kern",
                                    size: -clearance
                                }, {
                                    type: "elem",
                                    elem: accentBody
                                } ]
                            }, options);
                        }
                        var accentWrap = buildCommon.makeSpan([ "mord", "accent" ], [ accentBody ], options);
                        return supSubGroup ? (supSubGroup.children[0] = accentWrap, supSubGroup.height = Math.max(accentWrap.height, supSubGroup.height), 
                        supSubGroup.classes[0] = "mord", supSubGroup) : accentWrap;
                    }, accent_mathmlBuilder = function(group, options) {
                        var accentNode = group.isStretchy ? stretchy_mathMLnode$0(group.label) : new mathMLTree.MathNode("mo", [ buildMathML_makeText(group.label, group.mode) ]), node = new mathMLTree.MathNode("mover", [ buildMathML_buildGroup(group.base, options), accentNode ]);
                        return node.setAttribute("accent", "true"), node;
                    }, NON_STRETCHY_ACCENT_REGEX = new RegExp([ "\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring" ].map(function(accent) {
                        return "\\" + accent;
                    }).join("|"));
                    defineFunction({
                        type: "accent",
                        names: [ "\\acute", "\\grave", "\\ddot", "\\tilde", "\\bar", "\\breve", "\\check", "\\hat", "\\vec", "\\dot", "\\mathring", "\\widecheck", "\\widehat", "\\widetilde", "\\overrightarrow", "\\overleftarrow", "\\Overrightarrow", "\\overleftrightarrow", "\\overgroup", "\\overlinesegment", "\\overleftharpoon", "\\overrightharpoon" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var base = args[0], isStretchy = !NON_STRETCHY_ACCENT_REGEX.test(context.funcName), isShifty = !isStretchy || "\\widehat" === context.funcName || "\\widetilde" === context.funcName || "\\widecheck" === context.funcName;
                            return {
                                type: "accent",
                                mode: context.parser.mode,
                                label: context.funcName,
                                isStretchy: isStretchy,
                                isShifty: isShifty,
                                base: base
                            };
                        },
                        htmlBuilder: accent_htmlBuilder,
                        mathmlBuilder: accent_mathmlBuilder
                    }), defineFunction({
                        type: "accent",
                        names: [ "\\'", "\\`", "\\^", "\\~", "\\=", "\\u", "\\.", '\\"', "\\r", "\\H", "\\v", "\\textcircled" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0,
                            allowedInMath: !1
                        },
                        handler: function(context, args) {
                            var base = args[0];
                            return {
                                type: "accent",
                                mode: context.parser.mode,
                                label: context.funcName,
                                isStretchy: !1,
                                isShifty: !0,
                                base: base
                            };
                        },
                        htmlBuilder: accent_htmlBuilder,
                        mathmlBuilder: accent_mathmlBuilder
                    }), defineFunction({
                        type: "accentUnder",
                        names: [ "\\underleftarrow", "\\underrightarrow", "\\underleftrightarrow", "\\undergroup", "\\underlinesegment", "\\utilde" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, base = args[0];
                            return {
                                type: "accentUnder",
                                mode: parser.mode,
                                label: funcName,
                                base: base
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var innerGroup = buildHTML_buildGroup(group.base, options), accentBody = stretchy_svgSpan$0(group, options), kern = "\\utilde" === group.label ? .12 : 0, vlist = buildCommon.makeVList({
                                positionType: "bottom",
                                positionData: accentBody.height + kern,
                                children: [ {
                                    type: "elem",
                                    elem: accentBody,
                                    wrapperClasses: [ "svg-align" ]
                                }, {
                                    type: "kern",
                                    size: kern
                                }, {
                                    type: "elem",
                                    elem: innerGroup
                                } ]
                            }, options);
                            return buildCommon.makeSpan([ "mord", "accentunder" ], [ vlist ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var accentNode = stretchy_mathMLnode$0(group.label), node = new mathMLTree.MathNode("munder", [ buildMathML_buildGroup(group.base, options), accentNode ]);
                            return node.setAttribute("accentunder", "true"), node;
                        }
                    });
                    var arrow_paddedNode = function(group) {
                        var node = new mathMLTree.MathNode("mpadded", group ? [ group ] : []);
                        return node.setAttribute("width", "+0.6em"), node.setAttribute("lspace", "0.3em"), 
                        node;
                    };
                    defineFunction({
                        type: "xArrow",
                        names: [ "\\xleftarrow", "\\xrightarrow", "\\xLeftarrow", "\\xRightarrow", "\\xleftrightarrow", "\\xLeftrightarrow", "\\xhookleftarrow", "\\xhookrightarrow", "\\xmapsto", "\\xrightharpoondown", "\\xrightharpoonup", "\\xleftharpoondown", "\\xleftharpoonup", "\\xrightleftharpoons", "\\xleftrightharpoons", "\\xlongequal", "\\xtwoheadrightarrow", "\\xtwoheadleftarrow", "\\xtofrom", "\\xrightleftarrows", "\\xrightequilibrium", "\\xleftequilibrium" ],
                        props: {
                            numArgs: 1,
                            numOptionalArgs: 1
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, funcName = _ref.funcName;
                            return {
                                type: "xArrow",
                                mode: parser.mode,
                                label: funcName,
                                body: args[0],
                                below: optArgs[0]
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var lowerGroup, style = options.style, newOptions = options.havingStyle(style.sup()), upperGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, newOptions, options), options);
                            upperGroup.classes.push("x-arrow-pad"), group.below && (newOptions = options.havingStyle(style.sub()), 
                            (lowerGroup = buildCommon.wrapFragment(buildHTML_buildGroup(group.below, newOptions, options), options)).classes.push("x-arrow-pad"));
                            var vlist, arrowBody = stretchy_svgSpan$0(group, options), arrowShift = -options.fontMetrics().axisHeight + .5 * arrowBody.height, upperShift = -options.fontMetrics().axisHeight - .5 * arrowBody.height - .111;
                            if ((upperGroup.depth > .25 || "\\xleftequilibrium" === group.label) && (upperShift -= upperGroup.depth), 
                            lowerGroup) {
                                var lowerShift = -options.fontMetrics().axisHeight + lowerGroup.height + .5 * arrowBody.height + .111;
                                vlist = buildCommon.makeVList({
                                    positionType: "individualShift",
                                    children: [ {
                                        type: "elem",
                                        elem: upperGroup,
                                        shift: upperShift
                                    }, {
                                        type: "elem",
                                        elem: arrowBody,
                                        shift: arrowShift
                                    }, {
                                        type: "elem",
                                        elem: lowerGroup,
                                        shift: lowerShift
                                    } ]
                                }, options);
                            } else vlist = buildCommon.makeVList({
                                positionType: "individualShift",
                                children: [ {
                                    type: "elem",
                                    elem: upperGroup,
                                    shift: upperShift
                                }, {
                                    type: "elem",
                                    elem: arrowBody,
                                    shift: arrowShift
                                } ]
                            }, options);
                            return vlist.children[0].children[0].children[1].classes.push("svg-align"), buildCommon.makeSpan([ "mrel", "x-arrow" ], [ vlist ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var node, arrowNode = stretchy_mathMLnode$0(group.label);
                            if (group.body) {
                                var upperNode = arrow_paddedNode(buildMathML_buildGroup(group.body, options));
                                if (group.below) {
                                    var lowerNode = arrow_paddedNode(buildMathML_buildGroup(group.below, options));
                                    node = new mathMLTree.MathNode("munderover", [ arrowNode, lowerNode, upperNode ]);
                                } else node = new mathMLTree.MathNode("mover", [ arrowNode, upperNode ]);
                            } else if (group.below) {
                                var _lowerNode = arrow_paddedNode(buildMathML_buildGroup(group.below, options));
                                node = new mathMLTree.MathNode("munder", [ arrowNode, _lowerNode ]);
                            } else node = arrow_paddedNode(), node = new mathMLTree.MathNode("mover", [ arrowNode, node ]);
                            return node;
                        }
                    }), defineFunction({
                        type: "textord",
                        names: [ "\\@char" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            for (var parser = _ref.parser, group = assertNodeType(args[0], "ordgroup").body, number = "", i = 0; i < group.length; i++) {
                                number += assertNodeType(group[i], "textord").text;
                            }
                            var code = parseInt(number);
                            if (isNaN(code)) throw new src_ParseError("\\@char has non-numeric argument " + number);
                            return {
                                type: "textord",
                                mode: parser.mode,
                                text: String.fromCharCode(code)
                            };
                        }
                    });
                    var color_htmlBuilder = function(group, options) {
                        var elements = buildHTML_buildExpression(group.body, options.withColor(group.color), !1);
                        return buildCommon.makeFragment(elements);
                    }, color_mathmlBuilder = function(group, options) {
                        var inner = buildMathML_buildExpression(group.body, options.withColor(group.color)), node = new mathMLTree.MathNode("mstyle", inner);
                        return node.setAttribute("mathcolor", group.color), node;
                    };
                    defineFunction({
                        type: "color",
                        names: [ "\\textcolor" ],
                        props: {
                            numArgs: 2,
                            allowedInText: !0,
                            greediness: 3,
                            argTypes: [ "color", "original" ]
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, color = assertNodeType(args[0], "color-token").color, body = args[1];
                            return {
                                type: "color",
                                mode: parser.mode,
                                color: color,
                                body: defineFunction_ordargument(body)
                            };
                        },
                        htmlBuilder: color_htmlBuilder,
                        mathmlBuilder: color_mathmlBuilder
                    }), defineFunction({
                        type: "color",
                        names: [ "\\color" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0,
                            greediness: 3,
                            argTypes: [ "color" ]
                        },
                        handler: function(_ref2, args) {
                            var parser = _ref2.parser, breakOnTokenText = _ref2.breakOnTokenText, color = assertNodeType(args[0], "color-token").color;
                            parser.gullet.macros.set("\\current@color", color);
                            var body = parser.parseExpression(!0, breakOnTokenText);
                            return {
                                type: "color",
                                mode: parser.mode,
                                color: color,
                                body: body
                            };
                        },
                        htmlBuilder: color_htmlBuilder,
                        mathmlBuilder: color_mathmlBuilder
                    }), defineFunction({
                        type: "cr",
                        names: [ "\\cr", "\\newline" ],
                        props: {
                            numArgs: 0,
                            numOptionalArgs: 1,
                            argTypes: [ "size" ],
                            allowedInText: !0
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, funcName = _ref.funcName, size = optArgs[0], newRow = "\\cr" === funcName, newLine = !1;
                            return newRow || (newLine = !parser.settings.displayMode || !parser.settings.useStrictBehavior("newLineInDisplayMode", "In LaTeX, \\\\ or \\newline does nothing in display mode")), 
                            {
                                type: "cr",
                                mode: parser.mode,
                                newLine: newLine,
                                newRow: newRow,
                                size: size && assertNodeType(size, "size").value
                            };
                        },
                        htmlBuilder: function(group, options) {
                            if (group.newRow) throw new src_ParseError("\\cr valid only within a tabular/array environment");
                            var span = buildCommon.makeSpan([ "mspace" ], [], options);
                            return group.newLine && (span.classes.push("newline"), group.size && (span.style.marginTop = units_calculateSize(group.size, options) + "em")), 
                            span;
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mspace");
                            return group.newLine && (node.setAttribute("linebreak", "newline"), group.size && node.setAttribute("height", units_calculateSize(group.size, options) + "em")), 
                            node;
                        }
                    });
                    var delimiter_getMetrics = function(symbol, font, mode) {
                        var metrics = getCharacterMetrics(src_symbols.math[symbol] && src_symbols.math[symbol].replace || symbol, font, mode);
                        if (!metrics) throw new Error("Unsupported symbol " + symbol + " and font size " + font + ".");
                        return metrics;
                    }, delimiter_styleWrap = function(delim, toStyle, options, classes) {
                        var newOptions = options.havingBaseStyle(toStyle), span = buildCommon.makeSpan(classes.concat(newOptions.sizingClasses(options)), [ delim ], options), delimSizeMultiplier = newOptions.sizeMultiplier / options.sizeMultiplier;
                        return span.height *= delimSizeMultiplier, span.depth *= delimSizeMultiplier, span.maxFontSize = newOptions.sizeMultiplier, 
                        span;
                    }, centerSpan = function(span, options, style) {
                        var newOptions = options.havingBaseStyle(style), shift = (1 - options.sizeMultiplier / newOptions.sizeMultiplier) * options.fontMetrics().axisHeight;
                        span.classes.push("delimcenter"), span.style.top = shift + "em", span.height -= shift, 
                        span.depth += shift;
                    }, delimiter_makeLargeDelim = function(delim, size, center, options, mode, classes) {
                        var inner = function(value, size, mode, options) {
                            return buildCommon.makeSymbol(value, "Size" + size + "-Regular", mode, options);
                        }(delim, size, mode, options), span = delimiter_styleWrap(buildCommon.makeSpan([ "delimsizing", "size" + size ], [ inner ], options), src_Style.TEXT, options, classes);
                        return center && centerSpan(span, options, src_Style.TEXT), span;
                    }, delimiter_makeInner = function(symbol, font, mode) {
                        var sizeClass;
                        return sizeClass = "Size1-Regular" === font ? "delim-size1" : "delim-size4", {
                            type: "elem",
                            elem: buildCommon.makeSpan([ "delimsizinginner", sizeClass ], [ buildCommon.makeSpan([], [ buildCommon.makeSymbol(symbol, font, mode) ]) ])
                        };
                    }, lap = {
                        type: "kern",
                        size: -.005
                    }, delimiter_makeStackedDelim = function(delim, heightTotal, center, options, mode, classes) {
                        var top, middle, repeat, bottom;
                        top = repeat = bottom = delim, middle = null;
                        var font = "Size1-Regular";
                        "\\uparrow" === delim ? repeat = bottom = "⏐" : "\\Uparrow" === delim ? repeat = bottom = "‖" : "\\downarrow" === delim ? top = repeat = "⏐" : "\\Downarrow" === delim ? top = repeat = "‖" : "\\updownarrow" === delim ? (top = "\\uparrow", 
                        repeat = "⏐", bottom = "\\downarrow") : "\\Updownarrow" === delim ? (top = "\\Uparrow", 
                        repeat = "‖", bottom = "\\Downarrow") : "[" === delim || "\\lbrack" === delim ? (top = "⎡", 
                        repeat = "⎢", bottom = "⎣", font = "Size4-Regular") : "]" === delim || "\\rbrack" === delim ? (top = "⎤", 
                        repeat = "⎥", bottom = "⎦", font = "Size4-Regular") : "\\lfloor" === delim || "⌊" === delim ? (repeat = top = "⎢", 
                        bottom = "⎣", font = "Size4-Regular") : "\\lceil" === delim || "⌈" === delim ? (top = "⎡", 
                        repeat = bottom = "⎢", font = "Size4-Regular") : "\\rfloor" === delim || "⌋" === delim ? (repeat = top = "⎥", 
                        bottom = "⎦", font = "Size4-Regular") : "\\rceil" === delim || "⌉" === delim ? (top = "⎤", 
                        repeat = bottom = "⎥", font = "Size4-Regular") : "(" === delim || "\\lparen" === delim ? (top = "⎛", 
                        repeat = "⎜", bottom = "⎝", font = "Size4-Regular") : ")" === delim || "\\rparen" === delim ? (top = "⎞", 
                        repeat = "⎟", bottom = "⎠", font = "Size4-Regular") : "\\{" === delim || "\\lbrace" === delim ? (top = "⎧", 
                        middle = "⎨", bottom = "⎩", repeat = "⎪", font = "Size4-Regular") : "\\}" === delim || "\\rbrace" === delim ? (top = "⎫", 
                        middle = "⎬", bottom = "⎭", repeat = "⎪", font = "Size4-Regular") : "\\lgroup" === delim || "⟮" === delim ? (top = "⎧", 
                        bottom = "⎩", repeat = "⎪", font = "Size4-Regular") : "\\rgroup" === delim || "⟯" === delim ? (top = "⎫", 
                        bottom = "⎭", repeat = "⎪", font = "Size4-Regular") : "\\lmoustache" === delim || "⎰" === delim ? (top = "⎧", 
                        bottom = "⎭", repeat = "⎪", font = "Size4-Regular") : "\\rmoustache" !== delim && "⎱" !== delim || (top = "⎫", 
                        bottom = "⎩", repeat = "⎪", font = "Size4-Regular");
                        var topMetrics = delimiter_getMetrics(top, font, mode), topHeightTotal = topMetrics.height + topMetrics.depth, repeatMetrics = delimiter_getMetrics(repeat, font, mode), repeatHeightTotal = repeatMetrics.height + repeatMetrics.depth, bottomMetrics = delimiter_getMetrics(bottom, font, mode), bottomHeightTotal = bottomMetrics.height + bottomMetrics.depth, middleHeightTotal = 0, middleFactor = 1;
                        if (null !== middle) {
                            var middleMetrics = delimiter_getMetrics(middle, font, mode);
                            middleHeightTotal = middleMetrics.height + middleMetrics.depth, middleFactor = 2;
                        }
                        var minHeight = topHeightTotal + bottomHeightTotal + middleHeightTotal, repeatCount = Math.max(0, Math.ceil((heightTotal - minHeight) / (middleFactor * repeatHeightTotal))), realHeightTotal = minHeight + repeatCount * middleFactor * repeatHeightTotal, axisHeight = options.fontMetrics().axisHeight;
                        center && (axisHeight *= options.sizeMultiplier);
                        var depth = realHeightTotal / 2 - axisHeight, shiftOfExtraElement = .005 * (repeatCount + 1) - repeatHeightTotal, inners = [];
                        if (inners.push(delimiter_makeInner(bottom, font, mode)), null === middle) for (var i = 0; i < repeatCount; i++) inners.push(lap), 
                        inners.push(delimiter_makeInner(repeat, font, mode)); else {
                            for (var _i = 0; _i < repeatCount; _i++) inners.push(lap), inners.push(delimiter_makeInner(repeat, font, mode));
                            inners.push({
                                type: "kern",
                                size: shiftOfExtraElement
                            }), inners.push(delimiter_makeInner(repeat, font, mode)), inners.push(lap), inners.push(delimiter_makeInner(middle, font, mode));
                            for (var _i2 = 0; _i2 < repeatCount; _i2++) inners.push(lap), inners.push(delimiter_makeInner(repeat, font, mode));
                        }
                        inners.push({
                            type: "kern",
                            size: shiftOfExtraElement
                        }), inners.push(delimiter_makeInner(repeat, font, mode)), inners.push(lap), inners.push(delimiter_makeInner(top, font, mode));
                        var newOptions = options.havingBaseStyle(src_Style.TEXT), inner = buildCommon.makeVList({
                            positionType: "bottom",
                            positionData: depth,
                            children: inners
                        }, newOptions);
                        return delimiter_styleWrap(buildCommon.makeSpan([ "delimsizing", "mult" ], [ inner ], newOptions), src_Style.TEXT, options, classes);
                    }, delimiter_sqrtSvg = function(sqrtName, height, viewBoxHeight, extraViniculum, options) {
                        var path = function(size, extraViniculum, viewBoxHeight) {
                            extraViniculum *= 1e3;
                            var path = "";
                            switch (size) {
                              case "sqrtMain":
                                path = function(extraViniculum, hLinePad) {
                                    return "M95," + (622 + extraViniculum + hLinePad) + "\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl" + extraViniculum / 2.075 + " -" + extraViniculum + "\nc5.3,-9.3,12,-14,20,-14\nH400000v" + (40 + extraViniculum) + "H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM" + (834 + extraViniculum) + " " + hLinePad + "h400000v" + (40 + extraViniculum) + "h-400000z";
                                }(extraViniculum, 80);
                                break;

                              case "sqrtSize1":
                                path = function(extraViniculum, hLinePad) {
                                    return "M263," + (601 + extraViniculum + hLinePad) + "c0.7,0,18,39.7,52,119\nc34,79.3,68.167,158.7,102.5,238c34.3,79.3,51.8,119.3,52.5,120\nc340,-704.7,510.7,-1060.3,512,-1067\nl" + extraViniculum / 2.084 + " -" + extraViniculum + "\nc4.7,-7.3,11,-11,19,-11\nH40000v" + (40 + extraViniculum) + "H1012.3\ns-271.3,567,-271.3,567c-38.7,80.7,-84,175,-136,283c-52,108,-89.167,185.3,-111.5,232\nc-22.3,46.7,-33.8,70.3,-34.5,71c-4.7,4.7,-12.3,7,-23,7s-12,-1,-12,-1\ns-109,-253,-109,-253c-72.7,-168,-109.3,-252,-110,-252c-10.7,8,-22,16.7,-34,26\nc-22,17.3,-33.3,26,-34,26s-26,-26,-26,-26s76,-59,76,-59s76,-60,76,-60z\nM" + (1001 + extraViniculum) + " " + hLinePad + "h400000v" + (40 + extraViniculum) + "h-400000z";
                                }(extraViniculum, 80);
                                break;

                              case "sqrtSize2":
                                path = function(extraViniculum, hLinePad) {
                                    return "M983 " + (10 + extraViniculum + hLinePad) + "\nl" + extraViniculum / 3.13 + " -" + extraViniculum + "\nc4,-6.7,10,-10,18,-10 H400000v" + (40 + extraViniculum) + "\nH1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7\ns-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744\nc-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30\nc26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722\nc56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5\nc53.7,-170.3,84.5,-266.8,92.5,-289.5z\nM" + (1001 + extraViniculum) + " " + hLinePad + "h400000v" + (40 + extraViniculum) + "h-400000z";
                                }(extraViniculum, 80);
                                break;

                              case "sqrtSize3":
                                path = function(extraViniculum, hLinePad) {
                                    return "M424," + (2398 + extraViniculum + hLinePad) + "\nc-1.3,-0.7,-38.5,-172,-111.5,-514c-73,-342,-109.8,-513.3,-110.5,-514\nc0,-2,-10.7,14.3,-32,49c-4.7,7.3,-9.8,15.7,-15.5,25c-5.7,9.3,-9.8,16,-12.5,20\ns-5,7,-5,7c-4,-3.3,-8.3,-7.7,-13,-13s-13,-13,-13,-13s76,-122,76,-122s77,-121,77,-121\ns209,968,209,968c0,-2,84.7,-361.7,254,-1079c169.3,-717.3,254.7,-1077.7,256,-1081\nl" + extraViniculum / 4.223 + " -" + extraViniculum + "c4,-6.7,10,-10,18,-10 H400000\nv" + (40 + extraViniculum) + "H1014.6\ns-87.3,378.7,-272.6,1166c-185.3,787.3,-279.3,1182.3,-282,1185\nc-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2z M" + (1001 + extraViniculum) + " " + hLinePad + "\nh400000v" + (40 + extraViniculum) + "h-400000z";
                                }(extraViniculum, 80);
                                break;

                              case "sqrtSize4":
                                path = function(extraViniculum, hLinePad) {
                                    return "M473," + (2713 + extraViniculum + hLinePad) + "\nc339.3,-1799.3,509.3,-2700,510,-2702 l" + extraViniculum / 5.298 + " -" + extraViniculum + "\nc3.3,-7.3,9.3,-11,18,-11 H400000v" + (40 + extraViniculum) + "H1017.7\ns-90.5,478,-276.2,1466c-185.7,988,-279.5,1483,-281.5,1485c-2,6,-10,9,-24,9\nc-8,0,-12,-0.7,-12,-2c0,-1.3,-5.3,-32,-16,-92c-50.7,-293.3,-119.7,-693.3,-207,-1200\nc0,-1.3,-5.3,8.7,-16,30c-10.7,21.3,-21.3,42.7,-32,64s-16,33,-16,33s-26,-26,-26,-26\ns76,-153,76,-153s77,-151,77,-151c0.7,0.7,35.7,202,105,604c67.3,400.7,102,602.7,104,\n606zM" + (1001 + extraViniculum) + " " + hLinePad + "h400000v" + (40 + extraViniculum) + "H1017.7z";
                                }(extraViniculum, 80);
                                break;

                              case "sqrtTall":
                                path = function(extraViniculum, hLinePad, viewBoxHeight) {
                                    return "M702 " + (extraViniculum + hLinePad) + "H400000" + (40 + extraViniculum) + "\nH742v" + (viewBoxHeight - 54 - hLinePad - extraViniculum) + "l-4 4-4 4c-.667.7 -2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1\nh-12l-28-84c-16.667-52-96.667 -294.333-240-727l-212 -643 -85 170\nc-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667\n219 661 l218 661zM702 " + hLinePad + "H400000v" + (40 + extraViniculum) + "H742z";
                                }(extraViniculum, 80, viewBoxHeight);
                            }
                            return path;
                        }(sqrtName, extraViniculum, viewBoxHeight), pathNode = new domTree_PathNode(sqrtName, path), svg = new SvgNode([ pathNode ], {
                            width: "400em",
                            height: height + "em",
                            viewBox: "0 0 400000 " + viewBoxHeight,
                            preserveAspectRatio: "xMinYMin slice"
                        });
                        return buildCommon.makeSvgSpan([ "hide-tail" ], [ svg ], options);
                    }, stackLargeDelimiters = [ "(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "\\surd" ], stackAlwaysDelimiters = [ "\\uparrow", "\\downarrow", "\\updownarrow", "\\Uparrow", "\\Downarrow", "\\Updownarrow", "|", "\\|", "\\vert", "\\Vert", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱" ], stackNeverDelimiters = [ "<", ">", "\\langle", "\\rangle", "/", "\\backslash", "\\lt", "\\gt" ], sizeToMaxHeight = [ 0, 1.2, 1.8, 2.4, 3 ], stackNeverDelimiterSequence = [ {
                        type: "small",
                        style: src_Style.SCRIPTSCRIPT
                    }, {
                        type: "small",
                        style: src_Style.SCRIPT
                    }, {
                        type: "small",
                        style: src_Style.TEXT
                    }, {
                        type: "large",
                        size: 1
                    }, {
                        type: "large",
                        size: 2
                    }, {
                        type: "large",
                        size: 3
                    }, {
                        type: "large",
                        size: 4
                    } ], stackAlwaysDelimiterSequence = [ {
                        type: "small",
                        style: src_Style.SCRIPTSCRIPT
                    }, {
                        type: "small",
                        style: src_Style.SCRIPT
                    }, {
                        type: "small",
                        style: src_Style.TEXT
                    }, {
                        type: "stack"
                    } ], stackLargeDelimiterSequence = [ {
                        type: "small",
                        style: src_Style.SCRIPTSCRIPT
                    }, {
                        type: "small",
                        style: src_Style.SCRIPT
                    }, {
                        type: "small",
                        style: src_Style.TEXT
                    }, {
                        type: "large",
                        size: 1
                    }, {
                        type: "large",
                        size: 2
                    }, {
                        type: "large",
                        size: 3
                    }, {
                        type: "large",
                        size: 4
                    }, {
                        type: "stack"
                    } ], delimTypeToFont = function(type) {
                        if ("small" === type.type) return "Main-Regular";
                        if ("large" === type.type) return "Size" + type.size + "-Regular";
                        if ("stack" === type.type) return "Size4-Regular";
                        throw new Error("Add support for delim type '" + type.type + "' here.");
                    }, traverseSequence = function(delim, height, sequence, options) {
                        for (var i = Math.min(2, 3 - options.style.size); i < sequence.length && "stack" !== sequence[i].type; i++) {
                            var metrics = delimiter_getMetrics(delim, delimTypeToFont(sequence[i]), "math"), heightDepth = metrics.height + metrics.depth;
                            if ("small" === sequence[i].type && (heightDepth *= options.havingBaseStyle(sequence[i].style).sizeMultiplier), 
                            heightDepth > height) return sequence[i];
                        }
                        return sequence[sequence.length - 1];
                    }, delimiter_makeCustomSizedDelim = function(delim, height, center, options, mode, classes) {
                        var sequence;
                        "<" === delim || "\\lt" === delim || "⟨" === delim ? delim = "\\langle" : ">" !== delim && "\\gt" !== delim && "⟩" !== delim || (delim = "\\rangle"), 
                        sequence = utils.contains(stackNeverDelimiters, delim) ? stackNeverDelimiterSequence : utils.contains(stackLargeDelimiters, delim) ? stackLargeDelimiterSequence : stackAlwaysDelimiterSequence;
                        var delimType = traverseSequence(delim, height, sequence, options);
                        return "small" === delimType.type ? function(delim, style, center, options, mode, classes) {
                            var text = buildCommon.makeSymbol(delim, "Main-Regular", mode, options), span = delimiter_styleWrap(text, style, options, classes);
                            return center && centerSpan(span, options, style), span;
                        }(delim, delimType.style, center, options, mode, classes) : "large" === delimType.type ? delimiter_makeLargeDelim(delim, delimType.size, center, options, mode, classes) : delimiter_makeStackedDelim(delim, height, center, options, mode, classes);
                    }, delimiter_sqrtImage = function(height, options) {
                        var span, advanceWidth, newOptions = options.havingBaseSizing(), delim = traverseSequence("\\surd", height * newOptions.sizeMultiplier, stackLargeDelimiterSequence, newOptions), sizeMultiplier = newOptions.sizeMultiplier, extraViniculum = Math.max(0, options.minRuleThickness - options.fontMetrics().sqrtRuleThickness), spanHeight = 0, texHeight = 0, viewBoxHeight = 0;
                        return "small" === delim.type ? (viewBoxHeight = 1e3 + 1e3 * extraViniculum + 80, 
                        height < 1 ? sizeMultiplier = 1 : height < 1.4 && (sizeMultiplier = .7), texHeight = (1 + extraViniculum) / sizeMultiplier, 
                        (span = delimiter_sqrtSvg("sqrtMain", spanHeight = (1 + extraViniculum + .08) / sizeMultiplier, viewBoxHeight, extraViniculum, options)).style.minWidth = "0.853em", 
                        advanceWidth = .833 / sizeMultiplier) : "large" === delim.type ? (viewBoxHeight = 1080 * sizeToMaxHeight[delim.size], 
                        texHeight = (sizeToMaxHeight[delim.size] + extraViniculum) / sizeMultiplier, spanHeight = (sizeToMaxHeight[delim.size] + extraViniculum + .08) / sizeMultiplier, 
                        (span = delimiter_sqrtSvg("sqrtSize" + delim.size, spanHeight, viewBoxHeight, extraViniculum, options)).style.minWidth = "1.02em", 
                        advanceWidth = 1 / sizeMultiplier) : (spanHeight = height + extraViniculum + .08, 
                        texHeight = height + extraViniculum, viewBoxHeight = Math.floor(1e3 * height + extraViniculum) + 80, 
                        (span = delimiter_sqrtSvg("sqrtTall", spanHeight, viewBoxHeight, extraViniculum, options)).style.minWidth = "0.742em", 
                        advanceWidth = 1.056), span.height = texHeight, span.style.height = spanHeight + "em", 
                        {
                            span: span,
                            advanceWidth: advanceWidth,
                            ruleWidth: (options.fontMetrics().sqrtRuleThickness + extraViniculum) * sizeMultiplier
                        };
                    }, delimiter_sizedDelim = function(delim, size, options, mode, classes) {
                        if ("<" === delim || "\\lt" === delim || "⟨" === delim ? delim = "\\langle" : ">" !== delim && "\\gt" !== delim && "⟩" !== delim || (delim = "\\rangle"), 
                        utils.contains(stackLargeDelimiters, delim) || utils.contains(stackNeverDelimiters, delim)) return delimiter_makeLargeDelim(delim, size, !1, options, mode, classes);
                        if (utils.contains(stackAlwaysDelimiters, delim)) return delimiter_makeStackedDelim(delim, sizeToMaxHeight[size], !1, options, mode, classes);
                        throw new src_ParseError("Illegal delimiter: '" + delim + "'");
                    }, delimiter_customSizedDelim = delimiter_makeCustomSizedDelim, delimiter_leftRightDelim = function(delim, height, depth, options, mode, classes) {
                        var axisHeight = options.fontMetrics().axisHeight * options.sizeMultiplier, delimiterExtend = 5 / options.fontMetrics().ptPerEm, maxDistFromAxis = Math.max(height - axisHeight, depth + axisHeight), totalHeight = Math.max(maxDistFromAxis / 500 * 901, 2 * maxDistFromAxis - delimiterExtend);
                        return delimiter_makeCustomSizedDelim(delim, totalHeight, !0, options, mode, classes);
                    }, delimiterSizes = {
                        "\\bigl": {
                            mclass: "mopen",
                            size: 1
                        },
                        "\\Bigl": {
                            mclass: "mopen",
                            size: 2
                        },
                        "\\biggl": {
                            mclass: "mopen",
                            size: 3
                        },
                        "\\Biggl": {
                            mclass: "mopen",
                            size: 4
                        },
                        "\\bigr": {
                            mclass: "mclose",
                            size: 1
                        },
                        "\\Bigr": {
                            mclass: "mclose",
                            size: 2
                        },
                        "\\biggr": {
                            mclass: "mclose",
                            size: 3
                        },
                        "\\Biggr": {
                            mclass: "mclose",
                            size: 4
                        },
                        "\\bigm": {
                            mclass: "mrel",
                            size: 1
                        },
                        "\\Bigm": {
                            mclass: "mrel",
                            size: 2
                        },
                        "\\biggm": {
                            mclass: "mrel",
                            size: 3
                        },
                        "\\Biggm": {
                            mclass: "mrel",
                            size: 4
                        },
                        "\\big": {
                            mclass: "mord",
                            size: 1
                        },
                        "\\Big": {
                            mclass: "mord",
                            size: 2
                        },
                        "\\bigg": {
                            mclass: "mord",
                            size: 3
                        },
                        "\\Bigg": {
                            mclass: "mord",
                            size: 4
                        }
                    }, delimiters = [ "(", "\\lparen", ")", "\\rparen", "[", "\\lbrack", "]", "\\rbrack", "\\{", "\\lbrace", "\\}", "\\rbrace", "\\lfloor", "\\rfloor", "⌊", "⌋", "\\lceil", "\\rceil", "⌈", "⌉", "<", ">", "\\langle", "⟨", "\\rangle", "⟩", "\\lt", "\\gt", "\\lvert", "\\rvert", "\\lVert", "\\rVert", "\\lgroup", "\\rgroup", "⟮", "⟯", "\\lmoustache", "\\rmoustache", "⎰", "⎱", "/", "\\backslash", "|", "\\vert", "\\|", "\\Vert", "\\uparrow", "\\Uparrow", "\\downarrow", "\\Downarrow", "\\updownarrow", "\\Updownarrow", "." ];
                    function checkDelimiter(delim, context) {
                        var symDelim = checkSymbolNodeType(delim);
                        if (symDelim && utils.contains(delimiters, symDelim.text)) return symDelim;
                        throw new src_ParseError("Invalid delimiter: '" + (symDelim ? symDelim.text : JSON.stringify(delim)) + "' after '" + context.funcName + "'", delim);
                    }
                    function assertParsed(group) {
                        if (!group.body) throw new Error("Bug: The leftright ParseNode wasn't fully parsed.");
                    }
                    defineFunction({
                        type: "delimsizing",
                        names: [ "\\bigl", "\\Bigl", "\\biggl", "\\Biggl", "\\bigr", "\\Bigr", "\\biggr", "\\Biggr", "\\bigm", "\\Bigm", "\\biggm", "\\Biggm", "\\big", "\\Big", "\\bigg", "\\Bigg" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var delim = checkDelimiter(args[0], context);
                            return {
                                type: "delimsizing",
                                mode: context.parser.mode,
                                size: delimiterSizes[context.funcName].size,
                                mclass: delimiterSizes[context.funcName].mclass,
                                delim: delim.text
                            };
                        },
                        htmlBuilder: function(group, options) {
                            return "." === group.delim ? buildCommon.makeSpan([ group.mclass ]) : delimiter_sizedDelim(group.delim, group.size, options, group.mode, [ group.mclass ]);
                        },
                        mathmlBuilder: function(group) {
                            var children = [];
                            "." !== group.delim && children.push(buildMathML_makeText(group.delim, group.mode));
                            var node = new mathMLTree.MathNode("mo", children);
                            return "mopen" === group.mclass || "mclose" === group.mclass ? node.setAttribute("fence", "true") : node.setAttribute("fence", "false"), 
                            node;
                        }
                    }), defineFunction({
                        type: "leftright-right",
                        names: [ "\\right" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var color = context.parser.gullet.macros.get("\\current@color");
                            if (color && "string" != typeof color) throw new src_ParseError("\\current@color set to non-string in \\right");
                            return {
                                type: "leftright-right",
                                mode: context.parser.mode,
                                delim: checkDelimiter(args[0], context).text,
                                color: color
                            };
                        }
                    }), defineFunction({
                        type: "leftright",
                        names: [ "\\left" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var delim = checkDelimiter(args[0], context), parser = context.parser;
                            ++parser.leftrightDepth;
                            var body = parser.parseExpression(!1);
                            --parser.leftrightDepth, parser.expect("\\right", !1);
                            var right = assertNodeType(parser.parseFunction(), "leftright-right");
                            return {
                                type: "leftright",
                                mode: parser.mode,
                                body: body,
                                left: delim.text,
                                right: right.delim,
                                rightColor: right.color
                            };
                        },
                        htmlBuilder: function(group, options) {
                            assertParsed(group);
                            for (var leftDelim, rightDelim, inner = buildHTML_buildExpression(group.body, options, !0, [ "mopen", "mclose" ]), innerHeight = 0, innerDepth = 0, hadMiddle = !1, i = 0; i < inner.length; i++) inner[i].isMiddle ? hadMiddle = !0 : (innerHeight = Math.max(inner[i].height, innerHeight), 
                            innerDepth = Math.max(inner[i].depth, innerDepth));
                            if (innerHeight *= options.sizeMultiplier, innerDepth *= options.sizeMultiplier, 
                            leftDelim = "." === group.left ? makeNullDelimiter(options, [ "mopen" ]) : delimiter_leftRightDelim(group.left, innerHeight, innerDepth, options, group.mode, [ "mopen" ]), 
                            inner.unshift(leftDelim), hadMiddle) for (var _i = 1; _i < inner.length; _i++) {
                                var isMiddle = inner[_i].isMiddle;
                                isMiddle && (inner[_i] = delimiter_leftRightDelim(isMiddle.delim, innerHeight, innerDepth, isMiddle.options, group.mode, []));
                            }
                            if ("." === group.right) rightDelim = makeNullDelimiter(options, [ "mclose" ]); else {
                                var colorOptions = group.rightColor ? options.withColor(group.rightColor) : options;
                                rightDelim = delimiter_leftRightDelim(group.right, innerHeight, innerDepth, colorOptions, group.mode, [ "mclose" ]);
                            }
                            return inner.push(rightDelim), buildCommon.makeSpan([ "minner" ], inner, options);
                        },
                        mathmlBuilder: function(group, options) {
                            assertParsed(group);
                            var inner = buildMathML_buildExpression(group.body, options);
                            if ("." !== group.left) {
                                var leftNode = new mathMLTree.MathNode("mo", [ buildMathML_makeText(group.left, group.mode) ]);
                                leftNode.setAttribute("fence", "true"), inner.unshift(leftNode);
                            }
                            if ("." !== group.right) {
                                var rightNode = new mathMLTree.MathNode("mo", [ buildMathML_makeText(group.right, group.mode) ]);
                                rightNode.setAttribute("fence", "true"), group.rightColor && rightNode.setAttribute("mathcolor", group.rightColor), 
                                inner.push(rightNode);
                            }
                            return buildMathML_makeRow(inner);
                        }
                    }), defineFunction({
                        type: "middle",
                        names: [ "\\middle" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var delim = checkDelimiter(args[0], context);
                            if (!context.parser.leftrightDepth) throw new src_ParseError("\\middle without preceding \\left", delim);
                            return {
                                type: "middle",
                                mode: context.parser.mode,
                                delim: delim.text
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var middleDelim;
                            if ("." === group.delim) middleDelim = makeNullDelimiter(options, []); else {
                                middleDelim = delimiter_sizedDelim(group.delim, 1, options, group.mode, []);
                                var isMiddle = {
                                    delim: group.delim,
                                    options: options
                                };
                                middleDelim.isMiddle = isMiddle;
                            }
                            return middleDelim;
                        },
                        mathmlBuilder: function(group, options) {
                            var textNode = "\\vert" === group.delim || "|" === group.delim ? buildMathML_makeText("|", "text") : buildMathML_makeText(group.delim, group.mode), middleNode = new mathMLTree.MathNode("mo", [ textNode ]);
                            return middleNode.setAttribute("fence", "true"), middleNode.setAttribute("lspace", "0.05em"), 
                            middleNode.setAttribute("rspace", "0.05em"), middleNode;
                        }
                    });
                    var enclose_htmlBuilder = function(group, options) {
                        var img, vlist, inner = buildCommon.wrapFragment(buildHTML_buildGroup(group.body, options), options), label = group.label.substr(1), scale = options.sizeMultiplier, imgShift = 0, isSingleChar = utils.isCharacterBox(group.body);
                        if ("sout" === label) (img = buildCommon.makeSpan([ "stretchy", "sout" ])).height = options.fontMetrics().defaultRuleThickness / scale, 
                        imgShift = -.5 * options.fontMetrics().xHeight; else {
                            /cancel/.test(label) ? isSingleChar || inner.classes.push("cancel-pad") : inner.classes.push("boxpad");
                            var vertPad = 0, ruleThickness = 0;
                            /box/.test(label) ? (ruleThickness = Math.max(options.fontMetrics().fboxrule, options.minRuleThickness), 
                            vertPad = options.fontMetrics().fboxsep + ("colorbox" === label ? 0 : ruleThickness)) : vertPad = isSingleChar ? .2 : 0, 
                            img = stretchy_encloseSpan$0(inner, label, vertPad, options), /fbox|boxed|fcolorbox/.test(label) && (img.style.borderStyle = "solid", 
                            img.style.borderWidth = ruleThickness + "em"), imgShift = inner.depth + vertPad, 
                            group.backgroundColor && (img.style.backgroundColor = group.backgroundColor, group.borderColor && (img.style.borderColor = group.borderColor));
                        }
                        return vlist = group.backgroundColor ? buildCommon.makeVList({
                            positionType: "individualShift",
                            children: [ {
                                type: "elem",
                                elem: img,
                                shift: imgShift
                            }, {
                                type: "elem",
                                elem: inner,
                                shift: 0
                            } ]
                        }, options) : buildCommon.makeVList({
                            positionType: "individualShift",
                            children: [ {
                                type: "elem",
                                elem: inner,
                                shift: 0
                            }, {
                                type: "elem",
                                elem: img,
                                shift: imgShift,
                                wrapperClasses: /cancel/.test(label) ? [ "svg-align" ] : []
                            } ]
                        }, options), /cancel/.test(label) && (vlist.height = inner.height, vlist.depth = inner.depth), 
                        /cancel/.test(label) && !isSingleChar ? buildCommon.makeSpan([ "mord", "cancel-lap" ], [ vlist ], options) : buildCommon.makeSpan([ "mord" ], [ vlist ], options);
                    }, enclose_mathmlBuilder = function(group, options) {
                        var fboxsep = 0, node = new mathMLTree.MathNode(group.label.indexOf("colorbox") > -1 ? "mpadded" : "menclose", [ buildMathML_buildGroup(group.body, options) ]);
                        switch (group.label) {
                          case "\\cancel":
                            node.setAttribute("notation", "updiagonalstrike");
                            break;

                          case "\\bcancel":
                            node.setAttribute("notation", "downdiagonalstrike");
                            break;

                          case "\\sout":
                            node.setAttribute("notation", "horizontalstrike");
                            break;

                          case "\\fbox":
                            node.setAttribute("notation", "box");
                            break;

                          case "\\fcolorbox":
                          case "\\colorbox":
                            if (fboxsep = options.fontMetrics().fboxsep * options.fontMetrics().ptPerEm, node.setAttribute("width", "+" + 2 * fboxsep + "pt"), 
                            node.setAttribute("height", "+" + 2 * fboxsep + "pt"), node.setAttribute("lspace", fboxsep + "pt"), 
                            node.setAttribute("voffset", fboxsep + "pt"), "\\fcolorbox" === group.label) {
                                var thk = Math.max(options.fontMetrics().fboxrule, options.minRuleThickness);
                                node.setAttribute("style", "border: " + thk + "em solid " + String(group.borderColor));
                            }
                            break;

                          case "\\xcancel":
                            node.setAttribute("notation", "updiagonalstrike downdiagonalstrike");
                        }
                        return group.backgroundColor && node.setAttribute("mathbackground", group.backgroundColor), 
                        node;
                    };
                    defineFunction({
                        type: "enclose",
                        names: [ "\\colorbox" ],
                        props: {
                            numArgs: 2,
                            allowedInText: !0,
                            greediness: 3,
                            argTypes: [ "color", "text" ]
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, funcName = _ref.funcName, color = assertNodeType(args[0], "color-token").color, body = args[1];
                            return {
                                type: "enclose",
                                mode: parser.mode,
                                label: funcName,
                                backgroundColor: color,
                                body: body
                            };
                        },
                        htmlBuilder: enclose_htmlBuilder,
                        mathmlBuilder: enclose_mathmlBuilder
                    }), defineFunction({
                        type: "enclose",
                        names: [ "\\fcolorbox" ],
                        props: {
                            numArgs: 3,
                            allowedInText: !0,
                            greediness: 3,
                            argTypes: [ "color", "color", "text" ]
                        },
                        handler: function(_ref2, args, optArgs) {
                            var parser = _ref2.parser, funcName = _ref2.funcName, borderColor = assertNodeType(args[0], "color-token").color, backgroundColor = assertNodeType(args[1], "color-token").color, body = args[2];
                            return {
                                type: "enclose",
                                mode: parser.mode,
                                label: funcName,
                                backgroundColor: backgroundColor,
                                borderColor: borderColor,
                                body: body
                            };
                        },
                        htmlBuilder: enclose_htmlBuilder,
                        mathmlBuilder: enclose_mathmlBuilder
                    }), defineFunction({
                        type: "enclose",
                        names: [ "\\fbox" ],
                        props: {
                            numArgs: 1,
                            argTypes: [ "hbox" ],
                            allowedInText: !0
                        },
                        handler: function(_ref3, args) {
                            return {
                                type: "enclose",
                                mode: _ref3.parser.mode,
                                label: "\\fbox",
                                body: args[0]
                            };
                        }
                    }), defineFunction({
                        type: "enclose",
                        names: [ "\\cancel", "\\bcancel", "\\xcancel", "\\sout" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref4, args, optArgs) {
                            var parser = _ref4.parser, funcName = _ref4.funcName, body = args[0];
                            return {
                                type: "enclose",
                                mode: parser.mode,
                                label: funcName,
                                body: body
                            };
                        },
                        htmlBuilder: enclose_htmlBuilder,
                        mathmlBuilder: enclose_mathmlBuilder
                    });
                    var _environments = {};
                    function defineEnvironment(_ref) {
                        for (var type = _ref.type, names = _ref.names, props = _ref.props, handler = _ref.handler, htmlBuilder = _ref.htmlBuilder, mathmlBuilder = _ref.mathmlBuilder, data = {
                            type: type,
                            numArgs: props.numArgs || 0,
                            greediness: 1,
                            allowedInText: !1,
                            numOptionalArgs: 0,
                            handler: handler
                        }, i = 0; i < names.length; ++i) _environments[names[i]] = data;
                        htmlBuilder && (_htmlGroupBuilders[type] = htmlBuilder), mathmlBuilder && (_mathmlGroupBuilders[type] = mathmlBuilder);
                    }
                    function getHLines(parser) {
                        var hlineInfo = [];
                        parser.consumeSpaces();
                        for (var nxt = parser.fetch().text; "\\hline" === nxt || "\\hdashline" === nxt; ) parser.consume(), 
                        hlineInfo.push("\\hdashline" === nxt), parser.consumeSpaces(), nxt = parser.fetch().text;
                        return hlineInfo;
                    }
                    function parseArray(parser, _ref, style) {
                        var hskipBeforeAndAfter = _ref.hskipBeforeAndAfter, addJot = _ref.addJot, cols = _ref.cols, arraystretch = _ref.arraystretch, colSeparationType = _ref.colSeparationType;
                        if (parser.gullet.beginGroup(), parser.gullet.macros.set("\\\\", "\\cr"), !arraystretch) {
                            var stretch = parser.gullet.expandMacroAsText("\\arraystretch");
                            if (null == stretch) arraystretch = 1; else if (!(arraystretch = parseFloat(stretch)) || arraystretch < 0) throw new src_ParseError("Invalid \\arraystretch: " + stretch);
                        }
                        parser.gullet.beginGroup();
                        var row = [], body = [ row ], rowGaps = [], hLinesBeforeRow = [];
                        for (hLinesBeforeRow.push(getHLines(parser)); ;) {
                            var cell = parser.parseExpression(!1, "\\cr");
                            parser.gullet.endGroup(), parser.gullet.beginGroup(), cell = {
                                type: "ordgroup",
                                mode: parser.mode,
                                body: cell
                            }, style && (cell = {
                                type: "styling",
                                mode: parser.mode,
                                style: style,
                                body: [ cell ]
                            }), row.push(cell);
                            var next = parser.fetch().text;
                            if ("&" === next) parser.consume(); else {
                                if ("\\end" === next) {
                                    1 === row.length && "styling" === cell.type && 0 === cell.body[0].body.length && body.pop(), 
                                    hLinesBeforeRow.length < body.length + 1 && hLinesBeforeRow.push([]);
                                    break;
                                }
                                if ("\\cr" !== next) throw new src_ParseError("Expected & or \\\\ or \\cr or \\end", parser.nextToken);
                                var cr = assertNodeType(parser.parseFunction(), "cr");
                                rowGaps.push(cr.size), hLinesBeforeRow.push(getHLines(parser)), row = [], body.push(row);
                            }
                        }
                        return parser.gullet.endGroup(), parser.gullet.endGroup(), {
                            type: "array",
                            mode: parser.mode,
                            addJot: addJot,
                            arraystretch: arraystretch,
                            body: body,
                            cols: cols,
                            rowGaps: rowGaps,
                            hskipBeforeAndAfter: hskipBeforeAndAfter,
                            hLinesBeforeRow: hLinesBeforeRow,
                            colSeparationType: colSeparationType
                        };
                    }
                    function dCellStyle(envName) {
                        return "d" === envName.substr(0, 1) ? "display" : "text";
                    }
                    var array_htmlBuilder = function(group, options) {
                        var r, c, nr = group.body.length, hLinesBeforeRow = group.hLinesBeforeRow, nc = 0, body = new Array(nr), hlines = [], ruleThickness = Math.max(options.fontMetrics().arrayRuleWidth, options.minRuleThickness), pt = 1 / options.fontMetrics().ptPerEm, arraycolsep = 5 * pt;
                        group.colSeparationType && "small" === group.colSeparationType && (arraycolsep = options.havingStyle(src_Style.SCRIPT).sizeMultiplier / options.sizeMultiplier * .2778);
                        var baselineskip = 12 * pt, jot = 3 * pt, arrayskip = group.arraystretch * baselineskip, arstrutHeight = .7 * arrayskip, arstrutDepth = .3 * arrayskip, totalHeight = 0;
                        function setHLinePos(hlinesInGap) {
                            for (var i = 0; i < hlinesInGap.length; ++i) i > 0 && (totalHeight += .25), hlines.push({
                                pos: totalHeight,
                                isDashed: hlinesInGap[i]
                            });
                        }
                        for (setHLinePos(hLinesBeforeRow[0]), r = 0; r < group.body.length; ++r) {
                            var inrow = group.body[r], height = arstrutHeight, depth = arstrutDepth;
                            nc < inrow.length && (nc = inrow.length);
                            var outrow = new Array(inrow.length);
                            for (c = 0; c < inrow.length; ++c) {
                                var elt = buildHTML_buildGroup(inrow[c], options);
                                depth < elt.depth && (depth = elt.depth), height < elt.height && (height = elt.height), 
                                outrow[c] = elt;
                            }
                            var rowGap = group.rowGaps[r], gap = 0;
                            rowGap && (gap = units_calculateSize(rowGap, options)) > 0 && (depth < (gap += arstrutDepth) && (depth = gap), 
                            gap = 0), group.addJot && (depth += jot), outrow.height = height, outrow.depth = depth, 
                            totalHeight += height, outrow.pos = totalHeight, totalHeight += depth + gap, body[r] = outrow, 
                            setHLinePos(hLinesBeforeRow[r + 1]);
                        }
                        var colSep, colDescrNum, offset = totalHeight / 2 + options.fontMetrics().axisHeight, colDescriptions = group.cols || [], cols = [];
                        for (c = 0, colDescrNum = 0; c < nc || colDescrNum < colDescriptions.length; ++c, 
                        ++colDescrNum) {
                            for (var colDescr = colDescriptions[colDescrNum] || {}, firstSeparator = !0; "separator" === colDescr.type; ) {
                                if (firstSeparator || ((colSep = buildCommon.makeSpan([ "arraycolsep" ], [])).style.width = options.fontMetrics().doubleRuleSep + "em", 
                                cols.push(colSep)), "|" !== colDescr.separator && ":" !== colDescr.separator) throw new src_ParseError("Invalid separator type: " + colDescr.separator);
                                var lineType = "|" === colDescr.separator ? "solid" : "dashed", separator = buildCommon.makeSpan([ "vertical-separator" ], [], options);
                                separator.style.height = totalHeight + "em", separator.style.borderRightWidth = ruleThickness + "em", 
                                separator.style.borderRightStyle = lineType, separator.style.margin = "0 -" + ruleThickness / 2 + "em", 
                                separator.style.verticalAlign = -(totalHeight - offset) + "em", cols.push(separator), 
                                colDescr = colDescriptions[++colDescrNum] || {}, firstSeparator = !1;
                            }
                            if (!(c >= nc)) {
                                var sepwidth = void 0;
                                (c > 0 || group.hskipBeforeAndAfter) && 0 !== (sepwidth = utils.deflt(colDescr.pregap, arraycolsep)) && ((colSep = buildCommon.makeSpan([ "arraycolsep" ], [])).style.width = sepwidth + "em", 
                                cols.push(colSep));
                                var col = [];
                                for (r = 0; r < nr; ++r) {
                                    var row = body[r], elem = row[c];
                                    if (elem) {
                                        var shift = row.pos - offset;
                                        elem.depth = row.depth, elem.height = row.height, col.push({
                                            type: "elem",
                                            elem: elem,
                                            shift: shift
                                        });
                                    }
                                }
                                col = buildCommon.makeVList({
                                    positionType: "individualShift",
                                    children: col
                                }, options), col = buildCommon.makeSpan([ "col-align-" + (colDescr.align || "c") ], [ col ]), 
                                cols.push(col), (c < nc - 1 || group.hskipBeforeAndAfter) && 0 !== (sepwidth = utils.deflt(colDescr.postgap, arraycolsep)) && ((colSep = buildCommon.makeSpan([ "arraycolsep" ], [])).style.width = sepwidth + "em", 
                                cols.push(colSep));
                            }
                        }
                        if (body = buildCommon.makeSpan([ "mtable" ], cols), hlines.length > 0) {
                            for (var line = buildCommon.makeLineSpan("hline", options, ruleThickness), dashes = buildCommon.makeLineSpan("hdashline", options, ruleThickness), vListElems = [ {
                                type: "elem",
                                elem: body,
                                shift: 0
                            } ]; hlines.length > 0; ) {
                                var hline = hlines.pop(), lineShift = hline.pos - offset;
                                hline.isDashed ? vListElems.push({
                                    type: "elem",
                                    elem: dashes,
                                    shift: lineShift
                                }) : vListElems.push({
                                    type: "elem",
                                    elem: line,
                                    shift: lineShift
                                });
                            }
                            body = buildCommon.makeVList({
                                positionType: "individualShift",
                                children: vListElems
                            }, options);
                        }
                        return buildCommon.makeSpan([ "mord" ], [ body ], options);
                    }, alignMap = {
                        c: "center ",
                        l: "left ",
                        r: "right "
                    }, array_mathmlBuilder = function(group, options) {
                        var table = new mathMLTree.MathNode("mtable", group.body.map(function(row) {
                            return new mathMLTree.MathNode("mtr", row.map(function(cell) {
                                return new mathMLTree.MathNode("mtd", [ buildMathML_buildGroup(cell, options) ]);
                            }));
                        })), gap = .5 === group.arraystretch ? .1 : .16 + group.arraystretch - 1 + (group.addJot ? .09 : 0);
                        table.setAttribute("rowspacing", gap + "em");
                        var menclose = "", align = "";
                        if (group.cols) {
                            var cols = group.cols, columnLines = "", prevTypeWasAlign = !1, iStart = 0, iEnd = cols.length;
                            "separator" === cols[0].type && (menclose += "top ", iStart = 1), "separator" === cols[cols.length - 1].type && (menclose += "bottom ", 
                            iEnd -= 1);
                            for (var i = iStart; i < iEnd; i++) "align" === cols[i].type ? (align += alignMap[cols[i].align], 
                            prevTypeWasAlign && (columnLines += "none "), prevTypeWasAlign = !0) : "separator" === cols[i].type && prevTypeWasAlign && (columnLines += "|" === cols[i].separator ? "solid " : "dashed ", 
                            prevTypeWasAlign = !1);
                            table.setAttribute("columnalign", align.trim()), /[sd]/.test(columnLines) && table.setAttribute("columnlines", columnLines.trim());
                        }
                        if ("align" === group.colSeparationType) {
                            for (var _cols = group.cols || [], spacing = "", _i = 1; _i < _cols.length; _i++) spacing += _i % 2 ? "0em " : "1em ";
                            table.setAttribute("columnspacing", spacing.trim());
                        } else "alignat" === group.colSeparationType ? table.setAttribute("columnspacing", "0em") : "small" === group.colSeparationType ? table.setAttribute("columnspacing", "0.2778em") : table.setAttribute("columnspacing", "1em");
                        var rowLines = "", hlines = group.hLinesBeforeRow;
                        menclose += hlines[0].length > 0 ? "left " : "", menclose += hlines[hlines.length - 1].length > 0 ? "right " : "";
                        for (var _i2 = 1; _i2 < hlines.length - 1; _i2++) rowLines += 0 === hlines[_i2].length ? "none " : hlines[_i2][0] ? "dashed " : "solid ";
                        return /[sd]/.test(rowLines) && table.setAttribute("rowlines", rowLines.trim()), 
                        "" !== menclose && (table = new mathMLTree.MathNode("menclose", [ table ])).setAttribute("notation", menclose.trim()), 
                        group.arraystretch && group.arraystretch < 1 && (table = new mathMLTree.MathNode("mstyle", [ table ])).setAttribute("scriptlevel", "1"), 
                        table;
                    }, array_alignedHandler = function(context, args) {
                        var numMaths, cols = [], res = parseArray(context.parser, {
                            cols: cols,
                            addJot: !0
                        }, "display"), numCols = 0, emptyGroup = {
                            type: "ordgroup",
                            mode: context.mode,
                            body: []
                        }, ordgroup = checkNodeType(args[0], "ordgroup");
                        if (ordgroup) {
                            for (var arg0 = "", i = 0; i < ordgroup.body.length; i++) {
                                arg0 += assertNodeType(ordgroup.body[i], "textord").text;
                            }
                            numMaths = Number(arg0), numCols = 2 * numMaths;
                        }
                        var isAligned = !numCols;
                        res.body.forEach(function(row) {
                            for (var _i3 = 1; _i3 < row.length; _i3 += 2) {
                                assertNodeType(assertNodeType(row[_i3], "styling").body[0], "ordgroup").body.unshift(emptyGroup);
                            }
                            if (isAligned) numCols < row.length && (numCols = row.length); else {
                                var curMaths = row.length / 2;
                                if (numMaths < curMaths) throw new src_ParseError("Too many math in a row: expected " + numMaths + ", but got " + curMaths, row[0]);
                            }
                        });
                        for (var _i4 = 0; _i4 < numCols; ++_i4) {
                            var align = "r", pregap = 0;
                            _i4 % 2 == 1 ? align = "l" : _i4 > 0 && isAligned && (pregap = 1), cols[_i4] = {
                                type: "align",
                                align: align,
                                pregap: pregap,
                                postgap: 0
                            };
                        }
                        return res.colSeparationType = isAligned ? "align" : "alignat", res;
                    };
                    defineEnvironment({
                        type: "array",
                        names: [ "array", "darray" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var res = {
                                cols: (checkSymbolNodeType(args[0]) ? [ args[0] ] : assertNodeType(args[0], "ordgroup").body).map(function(nde) {
                                    var ca = assertSymbolNodeType(nde).text;
                                    if (-1 !== "lcr".indexOf(ca)) return {
                                        type: "align",
                                        align: ca
                                    };
                                    if ("|" === ca) return {
                                        type: "separator",
                                        separator: "|"
                                    };
                                    if (":" === ca) return {
                                        type: "separator",
                                        separator: ":"
                                    };
                                    throw new src_ParseError("Unknown column alignment: " + ca, nde);
                                }),
                                hskipBeforeAndAfter: !0
                            };
                            return parseArray(context.parser, res, dCellStyle(context.envName));
                        },
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "matrix", "pmatrix", "bmatrix", "Bmatrix", "vmatrix", "Vmatrix" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(context) {
                            var delimiters = {
                                matrix: null,
                                pmatrix: [ "(", ")" ],
                                bmatrix: [ "[", "]" ],
                                Bmatrix: [ "\\{", "\\}" ],
                                vmatrix: [ "|", "|" ],
                                Vmatrix: [ "\\Vert", "\\Vert" ]
                            }[context.envName], res = parseArray(context.parser, {
                                hskipBeforeAndAfter: !1
                            }, dCellStyle(context.envName));
                            return delimiters ? {
                                type: "leftright",
                                mode: context.mode,
                                body: [ res ],
                                left: delimiters[0],
                                right: delimiters[1],
                                rightColor: void 0
                            } : res;
                        },
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "smallmatrix" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(context) {
                            var res = parseArray(context.parser, {
                                arraystretch: .5
                            }, "script");
                            return res.colSeparationType = "small", res;
                        },
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "subarray" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(context, args) {
                            var cols = (checkSymbolNodeType(args[0]) ? [ args[0] ] : assertNodeType(args[0], "ordgroup").body).map(function(nde) {
                                var ca = assertSymbolNodeType(nde).text;
                                if (-1 !== "lc".indexOf(ca)) return {
                                    type: "align",
                                    align: ca
                                };
                                throw new src_ParseError("Unknown column alignment: " + ca, nde);
                            });
                            if (cols.length > 1) throw new src_ParseError("{subarray} can contain only one column");
                            var res = {
                                cols: cols,
                                hskipBeforeAndAfter: !1,
                                arraystretch: .5
                            };
                            if ((res = parseArray(context.parser, res, "script")).body[0].length > 1) throw new src_ParseError("{subarray} can contain only one column");
                            return res;
                        },
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "cases", "dcases" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(context) {
                            var res = parseArray(context.parser, {
                                arraystretch: 1.2,
                                cols: [ {
                                    type: "align",
                                    align: "l",
                                    pregap: 0,
                                    postgap: 1
                                }, {
                                    type: "align",
                                    align: "l",
                                    pregap: 0,
                                    postgap: 0
                                } ]
                            }, dCellStyle(context.envName));
                            return {
                                type: "leftright",
                                mode: context.mode,
                                body: [ res ],
                                left: "\\{",
                                right: ".",
                                rightColor: void 0
                            };
                        },
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "aligned" ],
                        props: {
                            numArgs: 0
                        },
                        handler: array_alignedHandler,
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "gathered" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(context) {
                            return parseArray(context.parser, {
                                cols: [ {
                                    type: "align",
                                    align: "c"
                                } ],
                                addJot: !0
                            }, "display");
                        },
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineEnvironment({
                        type: "array",
                        names: [ "alignedat" ],
                        props: {
                            numArgs: 1
                        },
                        handler: array_alignedHandler,
                        htmlBuilder: array_htmlBuilder,
                        mathmlBuilder: array_mathmlBuilder
                    }), defineFunction({
                        type: "text",
                        names: [ "\\hline", "\\hdashline" ],
                        props: {
                            numArgs: 0,
                            allowedInText: !0,
                            allowedInMath: !0
                        },
                        handler: function(context, args) {
                            throw new src_ParseError(context.funcName + " valid only within array environment");
                        }
                    });
                    var src_environments = _environments;
                    defineFunction({
                        type: "environment",
                        names: [ "\\begin", "\\end" ],
                        props: {
                            numArgs: 1,
                            argTypes: [ "text" ]
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, nameGroup = args[0];
                            if ("ordgroup" !== nameGroup.type) throw new src_ParseError("Invalid environment name", nameGroup);
                            for (var envName = "", i = 0; i < nameGroup.body.length; ++i) envName += assertNodeType(nameGroup.body[i], "textord").text;
                            if ("\\begin" === funcName) {
                                if (!src_environments.hasOwnProperty(envName)) throw new src_ParseError("No such environment: " + envName, nameGroup);
                                var env = src_environments[envName], _parser$parseArgument = parser.parseArguments("\\begin{" + envName + "}", env), _args = _parser$parseArgument.args, optArgs = _parser$parseArgument.optArgs, context = {
                                    mode: parser.mode,
                                    envName: envName,
                                    parser: parser
                                }, result = env.handler(context, _args, optArgs);
                                parser.expect("\\end", !1);
                                var endNameToken = parser.nextToken, end = assertNodeType(parser.parseFunction(), "environment");
                                if (end.name !== envName) throw new src_ParseError("Mismatch: \\begin{" + envName + "} matched by \\end{" + end.name + "}", endNameToken);
                                return result;
                            }
                            return {
                                type: "environment",
                                mode: parser.mode,
                                name: envName,
                                nameGroup: nameGroup
                            };
                        }
                    });
                    var mclass_makeSpan = buildCommon.makeSpan;
                    function mclass_htmlBuilder(group, options) {
                        var elements = buildHTML_buildExpression(group.body, options, !0);
                        return mclass_makeSpan([ group.mclass ], elements, options);
                    }
                    function mclass_mathmlBuilder(group, options) {
                        var node, inner = buildMathML_buildExpression(group.body, options);
                        return "minner" === group.mclass ? mathMLTree.newDocumentFragment(inner) : ("mord" === group.mclass ? group.isCharacterBox ? (node = inner[0]).type = "mi" : node = new mathMLTree.MathNode("mi", inner) : (group.isCharacterBox ? (node = inner[0]).type = "mo" : node = new mathMLTree.MathNode("mo", inner), 
                        "mbin" === group.mclass ? (node.attributes.lspace = "0.22em", node.attributes.rspace = "0.22em") : "mpunct" === group.mclass ? (node.attributes.lspace = "0em", 
                        node.attributes.rspace = "0.17em") : "mopen" !== group.mclass && "mclose" !== group.mclass || (node.attributes.lspace = "0em", 
                        node.attributes.rspace = "0em")), node);
                    }
                    defineFunction({
                        type: "mclass",
                        names: [ "\\mathord", "\\mathbin", "\\mathrel", "\\mathopen", "\\mathclose", "\\mathpunct", "\\mathinner" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, body = args[0];
                            return {
                                type: "mclass",
                                mode: parser.mode,
                                mclass: "m" + funcName.substr(5),
                                body: defineFunction_ordargument(body),
                                isCharacterBox: utils.isCharacterBox(body)
                            };
                        },
                        htmlBuilder: mclass_htmlBuilder,
                        mathmlBuilder: mclass_mathmlBuilder
                    });
                    var binrelClass = function(arg) {
                        var atom = "ordgroup" === arg.type && arg.body.length ? arg.body[0] : arg;
                        return "atom" !== atom.type || "bin" !== atom.family && "rel" !== atom.family ? "mord" : "m" + atom.family;
                    };
                    defineFunction({
                        type: "mclass",
                        names: [ "\\@binrel" ],
                        props: {
                            numArgs: 2
                        },
                        handler: function(_ref2, args) {
                            return {
                                type: "mclass",
                                mode: _ref2.parser.mode,
                                mclass: binrelClass(args[0]),
                                body: [ args[1] ],
                                isCharacterBox: utils.isCharacterBox(args[1])
                            };
                        }
                    }), defineFunction({
                        type: "mclass",
                        names: [ "\\stackrel", "\\overset", "\\underset" ],
                        props: {
                            numArgs: 2
                        },
                        handler: function(_ref3, args) {
                            var mclass, parser = _ref3.parser, funcName = _ref3.funcName, baseArg = args[1], shiftedArg = args[0];
                            mclass = "\\stackrel" !== funcName ? binrelClass(baseArg) : "mrel";
                            var baseOp = {
                                type: "op",
                                mode: baseArg.mode,
                                limits: !0,
                                alwaysHandleSupSub: !0,
                                parentIsSupSub: !1,
                                symbol: !1,
                                suppressBaseShift: "\\stackrel" !== funcName,
                                body: defineFunction_ordargument(baseArg)
                            }, supsub = {
                                type: "supsub",
                                mode: shiftedArg.mode,
                                base: baseOp,
                                sup: "\\underset" === funcName ? null : shiftedArg,
                                sub: "\\underset" === funcName ? shiftedArg : null
                            };
                            return {
                                type: "mclass",
                                mode: parser.mode,
                                mclass: mclass,
                                body: [ supsub ],
                                isCharacterBox: utils.isCharacterBox(supsub)
                            };
                        },
                        htmlBuilder: mclass_htmlBuilder,
                        mathmlBuilder: mclass_mathmlBuilder
                    });
                    var font_htmlBuilder = function(group, options) {
                        var font = group.font, newOptions = options.withFont(font);
                        return buildHTML_buildGroup(group.body, newOptions);
                    }, font_mathmlBuilder = function(group, options) {
                        var font = group.font, newOptions = options.withFont(font);
                        return buildMathML_buildGroup(group.body, newOptions);
                    }, fontAliases = {
                        "\\Bbb": "\\mathbb",
                        "\\bold": "\\mathbf",
                        "\\frak": "\\mathfrak",
                        "\\bm": "\\boldsymbol"
                    };
                    defineFunction({
                        type: "font",
                        names: [ "\\mathrm", "\\mathit", "\\mathbf", "\\mathnormal", "\\mathbb", "\\mathcal", "\\mathfrak", "\\mathscr", "\\mathsf", "\\mathtt", "\\Bbb", "\\bold", "\\frak" ],
                        props: {
                            numArgs: 1,
                            greediness: 2
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, body = args[0], func = funcName;
                            return func in fontAliases && (func = fontAliases[func]), {
                                type: "font",
                                mode: parser.mode,
                                font: func.slice(1),
                                body: body
                            };
                        },
                        htmlBuilder: font_htmlBuilder,
                        mathmlBuilder: font_mathmlBuilder
                    }), defineFunction({
                        type: "mclass",
                        names: [ "\\boldsymbol", "\\bm" ],
                        props: {
                            numArgs: 1,
                            greediness: 2
                        },
                        handler: function(_ref2, args) {
                            var parser = _ref2.parser, body = args[0], isCharacterBox = utils.isCharacterBox(body);
                            return {
                                type: "mclass",
                                mode: parser.mode,
                                mclass: binrelClass(body),
                                body: [ {
                                    type: "font",
                                    mode: parser.mode,
                                    font: "boldsymbol",
                                    body: body
                                } ],
                                isCharacterBox: isCharacterBox
                            };
                        }
                    }), defineFunction({
                        type: "font",
                        names: [ "\\rm", "\\sf", "\\tt", "\\bf", "\\it" ],
                        props: {
                            numArgs: 0,
                            allowedInText: !0
                        },
                        handler: function(_ref3, args) {
                            var parser = _ref3.parser, funcName = _ref3.funcName, breakOnTokenText = _ref3.breakOnTokenText, mode = parser.mode, body = parser.parseExpression(!0, breakOnTokenText);
                            return {
                                type: "font",
                                mode: mode,
                                font: "math" + funcName.slice(1),
                                body: {
                                    type: "ordgroup",
                                    mode: parser.mode,
                                    body: body
                                }
                            };
                        },
                        htmlBuilder: font_htmlBuilder,
                        mathmlBuilder: font_mathmlBuilder
                    });
                    var genfrac_adjustStyle = function(size, originalStyle) {
                        var style = originalStyle;
                        return "display" === size ? style = style.id >= src_Style.SCRIPT.id ? style.text() : src_Style.DISPLAY : "text" === size && style.size === src_Style.DISPLAY.size ? style = src_Style.TEXT : "script" === size ? style = src_Style.SCRIPT : "scriptscript" === size && (style = src_Style.SCRIPTSCRIPT), 
                        style;
                    }, genfrac_htmlBuilder = function(group, options) {
                        var newOptions, style = genfrac_adjustStyle(group.size, options.style), nstyle = style.fracNum(), dstyle = style.fracDen();
                        newOptions = options.havingStyle(nstyle);
                        var numerm = buildHTML_buildGroup(group.numer, newOptions, options);
                        if (group.continued) {
                            var hStrut = 8.5 / options.fontMetrics().ptPerEm, dStrut = 3.5 / options.fontMetrics().ptPerEm;
                            numerm.height = numerm.height < hStrut ? hStrut : numerm.height, numerm.depth = numerm.depth < dStrut ? dStrut : numerm.depth;
                        }
                        newOptions = options.havingStyle(dstyle);
                        var rule, ruleWidth, ruleSpacing, numShift, clearance, denomShift, frac, delimSize, leftDelim, rightDelim, denomm = buildHTML_buildGroup(group.denom, newOptions, options);
                        if (group.hasBarLine ? (group.barSize ? (ruleWidth = units_calculateSize(group.barSize, options), 
                        rule = buildCommon.makeLineSpan("frac-line", options, ruleWidth)) : rule = buildCommon.makeLineSpan("frac-line", options), 
                        ruleWidth = rule.height, ruleSpacing = rule.height) : (rule = null, ruleWidth = 0, 
                        ruleSpacing = options.fontMetrics().defaultRuleThickness), style.size === src_Style.DISPLAY.size || "display" === group.size ? (numShift = options.fontMetrics().num1, 
                        clearance = ruleWidth > 0 ? 3 * ruleSpacing : 7 * ruleSpacing, denomShift = options.fontMetrics().denom1) : (ruleWidth > 0 ? (numShift = options.fontMetrics().num2, 
                        clearance = ruleSpacing) : (numShift = options.fontMetrics().num3, clearance = 3 * ruleSpacing), 
                        denomShift = options.fontMetrics().denom2), rule) {
                            var axisHeight = options.fontMetrics().axisHeight;
                            numShift - numerm.depth - (axisHeight + .5 * ruleWidth) < clearance && (numShift += clearance - (numShift - numerm.depth - (axisHeight + .5 * ruleWidth))), 
                            axisHeight - .5 * ruleWidth - (denomm.height - denomShift) < clearance && (denomShift += clearance - (axisHeight - .5 * ruleWidth - (denomm.height - denomShift)));
                            var midShift = -(axisHeight - .5 * ruleWidth);
                            frac = buildCommon.makeVList({
                                positionType: "individualShift",
                                children: [ {
                                    type: "elem",
                                    elem: denomm,
                                    shift: denomShift
                                }, {
                                    type: "elem",
                                    elem: rule,
                                    shift: midShift
                                }, {
                                    type: "elem",
                                    elem: numerm,
                                    shift: -numShift
                                } ]
                            }, options);
                        } else {
                            var candidateClearance = numShift - numerm.depth - (denomm.height - denomShift);
                            candidateClearance < clearance && (numShift += .5 * (clearance - candidateClearance), 
                            denomShift += .5 * (clearance - candidateClearance)), frac = buildCommon.makeVList({
                                positionType: "individualShift",
                                children: [ {
                                    type: "elem",
                                    elem: denomm,
                                    shift: denomShift
                                }, {
                                    type: "elem",
                                    elem: numerm,
                                    shift: -numShift
                                } ]
                            }, options);
                        }
                        return newOptions = options.havingStyle(style), frac.height *= newOptions.sizeMultiplier / options.sizeMultiplier, 
                        frac.depth *= newOptions.sizeMultiplier / options.sizeMultiplier, delimSize = style.size === src_Style.DISPLAY.size ? options.fontMetrics().delim1 : options.fontMetrics().delim2, 
                        leftDelim = null == group.leftDelim ? makeNullDelimiter(options, [ "mopen" ]) : delimiter_customSizedDelim(group.leftDelim, delimSize, !0, options.havingStyle(style), group.mode, [ "mopen" ]), 
                        rightDelim = group.continued ? buildCommon.makeSpan([]) : null == group.rightDelim ? makeNullDelimiter(options, [ "mclose" ]) : delimiter_customSizedDelim(group.rightDelim, delimSize, !0, options.havingStyle(style), group.mode, [ "mclose" ]), 
                        buildCommon.makeSpan([ "mord" ].concat(newOptions.sizingClasses(options)), [ leftDelim, buildCommon.makeSpan([ "mfrac" ], [ frac ]), rightDelim ], options);
                    }, genfrac_mathmlBuilder = function(group, options) {
                        var node = new mathMLTree.MathNode("mfrac", [ buildMathML_buildGroup(group.numer, options), buildMathML_buildGroup(group.denom, options) ]);
                        if (group.hasBarLine) {
                            if (group.barSize) {
                                var ruleWidth = units_calculateSize(group.barSize, options);
                                node.setAttribute("linethickness", ruleWidth + "em");
                            }
                        } else node.setAttribute("linethickness", "0px");
                        var style = genfrac_adjustStyle(group.size, options.style);
                        if (style.size !== options.style.size) {
                            node = new mathMLTree.MathNode("mstyle", [ node ]);
                            var isDisplay = style.size === src_Style.DISPLAY.size ? "true" : "false";
                            node.setAttribute("displaystyle", isDisplay), node.setAttribute("scriptlevel", "0");
                        }
                        if (null != group.leftDelim || null != group.rightDelim) {
                            var withDelims = [];
                            if (null != group.leftDelim) {
                                var leftOp = new mathMLTree.MathNode("mo", [ new mathMLTree.TextNode(group.leftDelim.replace("\\", "")) ]);
                                leftOp.setAttribute("fence", "true"), withDelims.push(leftOp);
                            }
                            if (withDelims.push(node), null != group.rightDelim) {
                                var rightOp = new mathMLTree.MathNode("mo", [ new mathMLTree.TextNode(group.rightDelim.replace("\\", "")) ]);
                                rightOp.setAttribute("fence", "true"), withDelims.push(rightOp);
                            }
                            return buildMathML_makeRow(withDelims);
                        }
                        return node;
                    };
                    defineFunction({
                        type: "genfrac",
                        names: [ "\\cfrac", "\\dfrac", "\\frac", "\\tfrac", "\\dbinom", "\\binom", "\\tbinom", "\\\\atopfrac", "\\\\bracefrac", "\\\\brackfrac" ],
                        props: {
                            numArgs: 2,
                            greediness: 2
                        },
                        handler: function(_ref, args) {
                            var hasBarLine, parser = _ref.parser, funcName = _ref.funcName, numer = args[0], denom = args[1], leftDelim = null, rightDelim = null, size = "auto";
                            switch (funcName) {
                              case "\\cfrac":
                              case "\\dfrac":
                              case "\\frac":
                              case "\\tfrac":
                                hasBarLine = !0;
                                break;

                              case "\\\\atopfrac":
                                hasBarLine = !1;
                                break;

                              case "\\dbinom":
                              case "\\binom":
                              case "\\tbinom":
                                hasBarLine = !1, leftDelim = "(", rightDelim = ")";
                                break;

                              case "\\\\bracefrac":
                                hasBarLine = !1, leftDelim = "\\{", rightDelim = "\\}";
                                break;

                              case "\\\\brackfrac":
                                hasBarLine = !1, leftDelim = "[", rightDelim = "]";
                                break;

                              default:
                                throw new Error("Unrecognized genfrac command");
                            }
                            switch (funcName) {
                              case "\\cfrac":
                              case "\\dfrac":
                              case "\\dbinom":
                                size = "display";
                                break;

                              case "\\tfrac":
                              case "\\tbinom":
                                size = "text";
                            }
                            return {
                                type: "genfrac",
                                mode: parser.mode,
                                continued: "\\cfrac" === funcName,
                                numer: numer,
                                denom: denom,
                                hasBarLine: hasBarLine,
                                leftDelim: leftDelim,
                                rightDelim: rightDelim,
                                size: size,
                                barSize: null
                            };
                        },
                        htmlBuilder: genfrac_htmlBuilder,
                        mathmlBuilder: genfrac_mathmlBuilder
                    }), defineFunction({
                        type: "infix",
                        names: [ "\\over", "\\choose", "\\atop", "\\brace", "\\brack" ],
                        props: {
                            numArgs: 0,
                            infix: !0
                        },
                        handler: function(_ref2) {
                            var replaceWith, parser = _ref2.parser, funcName = _ref2.funcName, token = _ref2.token;
                            switch (funcName) {
                              case "\\over":
                                replaceWith = "\\frac";
                                break;

                              case "\\choose":
                                replaceWith = "\\binom";
                                break;

                              case "\\atop":
                                replaceWith = "\\\\atopfrac";
                                break;

                              case "\\brace":
                                replaceWith = "\\\\bracefrac";
                                break;

                              case "\\brack":
                                replaceWith = "\\\\brackfrac";
                                break;

                              default:
                                throw new Error("Unrecognized infix genfrac command");
                            }
                            return {
                                type: "infix",
                                mode: parser.mode,
                                replaceWith: replaceWith,
                                token: token
                            };
                        }
                    });
                    var stylArray = [ "display", "text", "script", "scriptscript" ], delimFromValue = function(delimString) {
                        var delim = null;
                        return delimString.length > 0 && (delim = "." === (delim = delimString) ? null : delim), 
                        delim;
                    };
                    defineFunction({
                        type: "genfrac",
                        names: [ "\\genfrac" ],
                        props: {
                            numArgs: 6,
                            greediness: 6,
                            argTypes: [ "math", "math", "size", "text", "math", "math" ]
                        },
                        handler: function(_ref3, args) {
                            var parser = _ref3.parser, numer = args[4], denom = args[5], leftNode = checkNodeType(args[0], "atom");
                            leftNode && (leftNode = assertAtomFamily(args[0], "open"));
                            var leftDelim = leftNode ? delimFromValue(leftNode.text) : null, rightNode = checkNodeType(args[1], "atom");
                            rightNode && (rightNode = assertAtomFamily(args[1], "close"));
                            var hasBarLine, rightDelim = rightNode ? delimFromValue(rightNode.text) : null, barNode = assertNodeType(args[2], "size"), barSize = null;
                            hasBarLine = !!barNode.isBlank || (barSize = barNode.value).number > 0;
                            var size = "auto", styl = checkNodeType(args[3], "ordgroup");
                            if (styl) {
                                if (styl.body.length > 0) {
                                    var textOrd = assertNodeType(styl.body[0], "textord");
                                    size = stylArray[Number(textOrd.text)];
                                }
                            } else styl = assertNodeType(args[3], "textord"), size = stylArray[Number(styl.text)];
                            return {
                                type: "genfrac",
                                mode: parser.mode,
                                numer: numer,
                                denom: denom,
                                continued: !1,
                                hasBarLine: hasBarLine,
                                barSize: barSize,
                                leftDelim: leftDelim,
                                rightDelim: rightDelim,
                                size: size
                            };
                        },
                        htmlBuilder: genfrac_htmlBuilder,
                        mathmlBuilder: genfrac_mathmlBuilder
                    }), defineFunction({
                        type: "infix",
                        names: [ "\\above" ],
                        props: {
                            numArgs: 1,
                            argTypes: [ "size" ],
                            infix: !0
                        },
                        handler: function(_ref4, args) {
                            var parser = _ref4.parser, token = (_ref4.funcName, _ref4.token);
                            return {
                                type: "infix",
                                mode: parser.mode,
                                replaceWith: "\\\\abovefrac",
                                size: assertNodeType(args[0], "size").value,
                                token: token
                            };
                        }
                    }), defineFunction({
                        type: "genfrac",
                        names: [ "\\\\abovefrac" ],
                        props: {
                            numArgs: 3,
                            argTypes: [ "math", "size", "math" ]
                        },
                        handler: function(_ref5, args) {
                            var parser = _ref5.parser, numer = (_ref5.funcName, args[0]), barSize = function(value) {
                                if (!value) throw new Error("Expected non-null, but got " + String(value));
                                return value;
                            }(assertNodeType(args[1], "infix").size), denom = args[2], hasBarLine = barSize.number > 0;
                            return {
                                type: "genfrac",
                                mode: parser.mode,
                                numer: numer,
                                denom: denom,
                                continued: !1,
                                hasBarLine: hasBarLine,
                                barSize: barSize,
                                leftDelim: null,
                                rightDelim: null,
                                size: "auto"
                            };
                        },
                        htmlBuilder: genfrac_htmlBuilder,
                        mathmlBuilder: genfrac_mathmlBuilder
                    });
                    var horizBrace_htmlBuilder = function(grp, options) {
                        var supSubGroup, group, style = options.style, supSub = checkNodeType(grp, "supsub");
                        supSub ? (supSubGroup = supSub.sup ? buildHTML_buildGroup(supSub.sup, options.havingStyle(style.sup()), options) : buildHTML_buildGroup(supSub.sub, options.havingStyle(style.sub()), options), 
                        group = assertNodeType(supSub.base, "horizBrace")) : group = assertNodeType(grp, "horizBrace");
                        var vlist, body = buildHTML_buildGroup(group.base, options.havingBaseStyle(src_Style.DISPLAY)), braceBody = stretchy_svgSpan$0(group, options);
                        if (group.isOver ? (vlist = buildCommon.makeVList({
                            positionType: "firstBaseline",
                            children: [ {
                                type: "elem",
                                elem: body
                            }, {
                                type: "kern",
                                size: .1
                            }, {
                                type: "elem",
                                elem: braceBody
                            } ]
                        }, options)).children[0].children[0].children[1].classes.push("svg-align") : (vlist = buildCommon.makeVList({
                            positionType: "bottom",
                            positionData: body.depth + .1 + braceBody.height,
                            children: [ {
                                type: "elem",
                                elem: braceBody
                            }, {
                                type: "kern",
                                size: .1
                            }, {
                                type: "elem",
                                elem: body
                            } ]
                        }, options)).children[0].children[0].children[0].classes.push("svg-align"), supSubGroup) {
                            var vSpan = buildCommon.makeSpan([ "mord", group.isOver ? "mover" : "munder" ], [ vlist ], options);
                            vlist = group.isOver ? buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: vSpan
                                }, {
                                    type: "kern",
                                    size: .2
                                }, {
                                    type: "elem",
                                    elem: supSubGroup
                                } ]
                            }, options) : buildCommon.makeVList({
                                positionType: "bottom",
                                positionData: vSpan.depth + .2 + supSubGroup.height + supSubGroup.depth,
                                children: [ {
                                    type: "elem",
                                    elem: supSubGroup
                                }, {
                                    type: "kern",
                                    size: .2
                                }, {
                                    type: "elem",
                                    elem: vSpan
                                } ]
                            }, options);
                        }
                        return buildCommon.makeSpan([ "mord", group.isOver ? "mover" : "munder" ], [ vlist ], options);
                    };
                    defineFunction({
                        type: "horizBrace",
                        names: [ "\\overbrace", "\\underbrace" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName;
                            return {
                                type: "horizBrace",
                                mode: parser.mode,
                                label: funcName,
                                isOver: /^\\over/.test(funcName),
                                base: args[0]
                            };
                        },
                        htmlBuilder: horizBrace_htmlBuilder,
                        mathmlBuilder: function(group, options) {
                            var accentNode = stretchy_mathMLnode$0(group.label);
                            return new mathMLTree.MathNode(group.isOver ? "mover" : "munder", [ buildMathML_buildGroup(group.base, options), accentNode ]);
                        }
                    }), defineFunction({
                        type: "href",
                        names: [ "\\href" ],
                        props: {
                            numArgs: 2,
                            argTypes: [ "url", "original" ],
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, body = args[1], href = assertNodeType(args[0], "url").url;
                            return parser.settings.isTrusted({
                                command: "\\href",
                                url: href
                            }) ? {
                                type: "href",
                                mode: parser.mode,
                                href: href,
                                body: defineFunction_ordargument(body)
                            } : parser.formatUnsupportedCmd("\\href");
                        },
                        htmlBuilder: function(group, options) {
                            var elements = buildHTML_buildExpression(group.body, options, !1);
                            return buildCommon.makeAnchor(group.href, [], elements, options);
                        },
                        mathmlBuilder: function(group, options) {
                            var math = buildExpressionRow(group.body, options);
                            return math instanceof mathMLTree_MathNode || (math = new mathMLTree_MathNode("mrow", [ math ])), 
                            math.setAttribute("href", group.href), math;
                        }
                    }), defineFunction({
                        type: "href",
                        names: [ "\\url" ],
                        props: {
                            numArgs: 1,
                            argTypes: [ "url" ],
                            allowedInText: !0
                        },
                        handler: function(_ref2, args) {
                            var parser = _ref2.parser, href = assertNodeType(args[0], "url").url;
                            if (!parser.settings.isTrusted({
                                command: "\\url",
                                url: href
                            })) return parser.formatUnsupportedCmd("\\url");
                            for (var chars = [], i = 0; i < href.length; i++) {
                                var c = href[i];
                                "~" === c && (c = "\\textasciitilde"), chars.push({
                                    type: "textord",
                                    mode: "text",
                                    text: c
                                });
                            }
                            var body = {
                                type: "text",
                                mode: parser.mode,
                                font: "\\texttt",
                                body: chars
                            };
                            return {
                                type: "href",
                                mode: parser.mode,
                                href: href,
                                body: defineFunction_ordargument(body)
                            };
                        }
                    }), defineFunction({
                        type: "htmlmathml",
                        names: [ "\\html@mathml" ],
                        props: {
                            numArgs: 2,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            return {
                                type: "htmlmathml",
                                mode: _ref.parser.mode,
                                html: defineFunction_ordargument(args[0]),
                                mathml: defineFunction_ordargument(args[1])
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var elements = buildHTML_buildExpression(group.html, options, !1);
                            return buildCommon.makeFragment(elements);
                        },
                        mathmlBuilder: function(group, options) {
                            return buildExpressionRow(group.mathml, options);
                        }
                    });
                    var includegraphics_sizeData = function(str) {
                        if (/^[-+]? *(\d+(\.\d*)?|\.\d+)$/.test(str)) return {
                            number: +str,
                            unit: "bp"
                        };
                        var match = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(str);
                        if (!match) throw new src_ParseError("Invalid size: '" + str + "' in \\includegraphics");
                        var data = {
                            number: +(match[1] + match[2]),
                            unit: match[3]
                        };
                        if (!validUnit(data)) throw new src_ParseError("Invalid unit: '" + data.unit + "' in \\includegraphics.");
                        return data;
                    };
                    defineFunction({
                        type: "includegraphics",
                        names: [ "\\includegraphics" ],
                        props: {
                            numArgs: 1,
                            numOptionalArgs: 1,
                            argTypes: [ "raw", "url" ],
                            allowedInText: !1
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, width = {
                                number: 0,
                                unit: "em"
                            }, height = {
                                number: .9,
                                unit: "em"
                            }, totalheight = {
                                number: 0,
                                unit: "em"
                            }, alt = "";
                            if (optArgs[0]) for (var attributes = assertNodeType(optArgs[0], "raw").string.split(","), i = 0; i < attributes.length; i++) {
                                var keyVal = attributes[i].split("=");
                                if (2 === keyVal.length) {
                                    var str = keyVal[1].trim();
                                    switch (keyVal[0].trim()) {
                                      case "alt":
                                        alt = str;
                                        break;

                                      case "width":
                                        width = includegraphics_sizeData(str);
                                        break;

                                      case "height":
                                        height = includegraphics_sizeData(str);
                                        break;

                                      case "totalheight":
                                        totalheight = includegraphics_sizeData(str);
                                        break;

                                      default:
                                        throw new src_ParseError("Invalid key: '" + keyVal[0] + "' in \\includegraphics.");
                                    }
                                }
                            }
                            var src = assertNodeType(args[0], "url").url;
                            return "" === alt && (alt = (alt = (alt = src).replace(/^.*[\\/]/, "")).substring(0, alt.lastIndexOf("."))), 
                            parser.settings.isTrusted({
                                command: "\\includegraphics",
                                url: src
                            }) ? {
                                type: "includegraphics",
                                mode: parser.mode,
                                alt: alt,
                                width: width,
                                height: height,
                                totalheight: totalheight,
                                src: src
                            } : parser.formatUnsupportedCmd("\\includegraphics");
                        },
                        htmlBuilder: function(group, options) {
                            var height = units_calculateSize(group.height, options), depth = 0;
                            group.totalheight.number > 0 && (depth = units_calculateSize(group.totalheight, options) - height, 
                            depth = Number(depth.toFixed(2)));
                            var width = 0;
                            group.width.number > 0 && (width = units_calculateSize(group.width, options));
                            var style = {
                                height: height + depth + "em"
                            };
                            width > 0 && (style.width = width + "em"), depth > 0 && (style.verticalAlign = -depth + "em");
                            var node = new domTree_Img(group.src, group.alt, style);
                            return node.height = height, node.depth = depth, node;
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mglyph", []);
                            node.setAttribute("alt", group.alt);
                            var height = units_calculateSize(group.height, options), depth = 0;
                            if (group.totalheight.number > 0 && (depth = (depth = units_calculateSize(group.totalheight, options) - height).toFixed(2), 
                            node.setAttribute("valign", "-" + depth + "em")), node.setAttribute("height", height + depth + "em"), 
                            group.width.number > 0) {
                                var width = units_calculateSize(group.width, options);
                                node.setAttribute("width", width + "em");
                            }
                            return node.setAttribute("src", group.src), node;
                        }
                    }), defineFunction({
                        type: "kern",
                        names: [ "\\kern", "\\mkern", "\\hskip", "\\mskip" ],
                        props: {
                            numArgs: 1,
                            argTypes: [ "size" ],
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, size = assertNodeType(args[0], "size");
                            if (parser.settings.strict) {
                                var mathFunction = "m" === funcName[1], muUnit = "mu" === size.value.unit;
                                mathFunction ? (muUnit || parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + funcName + " supports only mu units, not " + size.value.unit + " units"), 
                                "math" !== parser.mode && parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + funcName + " works only in math mode")) : muUnit && parser.settings.reportNonstrict("mathVsTextUnits", "LaTeX's " + funcName + " doesn't support mu units");
                            }
                            return {
                                type: "kern",
                                mode: parser.mode,
                                dimension: size.value
                            };
                        },
                        htmlBuilder: function(group, options) {
                            return buildCommon.makeGlue(group.dimension, options);
                        },
                        mathmlBuilder: function(group, options) {
                            var dimension = units_calculateSize(group.dimension, options);
                            return new mathMLTree.SpaceNode(dimension);
                        }
                    }), defineFunction({
                        type: "lap",
                        names: [ "\\mathllap", "\\mathrlap", "\\mathclap" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, body = args[0];
                            return {
                                type: "lap",
                                mode: parser.mode,
                                alignment: funcName.slice(5),
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var inner;
                            "clap" === group.alignment ? (inner = buildCommon.makeSpan([], [ buildHTML_buildGroup(group.body, options) ]), 
                            inner = buildCommon.makeSpan([ "inner" ], [ inner ], options)) : inner = buildCommon.makeSpan([ "inner" ], [ buildHTML_buildGroup(group.body, options) ]);
                            var fix = buildCommon.makeSpan([ "fix" ], []), node = buildCommon.makeSpan([ group.alignment ], [ inner, fix ], options), strut = buildCommon.makeSpan([ "strut" ]);
                            return strut.style.height = node.height + node.depth + "em", strut.style.verticalAlign = -node.depth + "em", 
                            node.children.unshift(strut), node = buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: node
                                } ]
                            }, options), buildCommon.makeSpan([ "mord" ], [ node ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mpadded", [ buildMathML_buildGroup(group.body, options) ]);
                            if ("rlap" !== group.alignment) {
                                var offset = "llap" === group.alignment ? "-1" : "-0.5";
                                node.setAttribute("lspace", offset + "width");
                            }
                            return node.setAttribute("width", "0px"), node;
                        }
                    }), defineFunction({
                        type: "styling",
                        names: [ "\\(", "$" ],
                        props: {
                            numArgs: 0,
                            allowedInText: !0,
                            allowedInMath: !1
                        },
                        handler: function(_ref, args) {
                            var funcName = _ref.funcName, parser = _ref.parser, outerMode = parser.mode;
                            parser.switchMode("math");
                            var close = "\\(" === funcName ? "\\)" : "$", body = parser.parseExpression(!1, close);
                            return parser.expect(close), parser.switchMode(outerMode), {
                                type: "styling",
                                mode: parser.mode,
                                style: "text",
                                body: body
                            };
                        }
                    }), defineFunction({
                        type: "text",
                        names: [ "\\)", "\\]" ],
                        props: {
                            numArgs: 0,
                            allowedInText: !0,
                            allowedInMath: !1
                        },
                        handler: function(context, args) {
                            throw new src_ParseError("Mismatched " + context.funcName);
                        }
                    });
                    var mathchoice_chooseMathStyle = function(group, options) {
                        switch (options.style.size) {
                          case src_Style.DISPLAY.size:
                            return group.display;

                          case src_Style.TEXT.size:
                            return group.text;

                          case src_Style.SCRIPT.size:
                            return group.script;

                          case src_Style.SCRIPTSCRIPT.size:
                            return group.scriptscript;

                          default:
                            return group.text;
                        }
                    };
                    defineFunction({
                        type: "mathchoice",
                        names: [ "\\mathchoice" ],
                        props: {
                            numArgs: 4
                        },
                        handler: function(_ref, args) {
                            return {
                                type: "mathchoice",
                                mode: _ref.parser.mode,
                                display: defineFunction_ordargument(args[0]),
                                text: defineFunction_ordargument(args[1]),
                                script: defineFunction_ordargument(args[2]),
                                scriptscript: defineFunction_ordargument(args[3])
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var body = mathchoice_chooseMathStyle(group, options), elements = buildHTML_buildExpression(body, options, !1);
                            return buildCommon.makeFragment(elements);
                        },
                        mathmlBuilder: function(group, options) {
                            var body = mathchoice_chooseMathStyle(group, options);
                            return buildExpressionRow(body, options);
                        }
                    });
                    var assembleSupSub_assembleSupSub = function(base, supGroup, subGroup, options, style, slant, baseShift) {
                        var sub, sup, finalGroup;
                        if (base = buildCommon.makeSpan([], [ base ]), supGroup) {
                            var elem = buildHTML_buildGroup(supGroup, options.havingStyle(style.sup()), options);
                            sup = {
                                elem: elem,
                                kern: Math.max(options.fontMetrics().bigOpSpacing1, options.fontMetrics().bigOpSpacing3 - elem.depth)
                            };
                        }
                        if (subGroup) {
                            var _elem = buildHTML_buildGroup(subGroup, options.havingStyle(style.sub()), options);
                            sub = {
                                elem: _elem,
                                kern: Math.max(options.fontMetrics().bigOpSpacing2, options.fontMetrics().bigOpSpacing4 - _elem.height)
                            };
                        }
                        if (sup && sub) {
                            var bottom = options.fontMetrics().bigOpSpacing5 + sub.elem.height + sub.elem.depth + sub.kern + base.depth + baseShift;
                            finalGroup = buildCommon.makeVList({
                                positionType: "bottom",
                                positionData: bottom,
                                children: [ {
                                    type: "kern",
                                    size: options.fontMetrics().bigOpSpacing5
                                }, {
                                    type: "elem",
                                    elem: sub.elem,
                                    marginLeft: -slant + "em"
                                }, {
                                    type: "kern",
                                    size: sub.kern
                                }, {
                                    type: "elem",
                                    elem: base
                                }, {
                                    type: "kern",
                                    size: sup.kern
                                }, {
                                    type: "elem",
                                    elem: sup.elem,
                                    marginLeft: slant + "em"
                                }, {
                                    type: "kern",
                                    size: options.fontMetrics().bigOpSpacing5
                                } ]
                            }, options);
                        } else if (sub) {
                            var top = base.height - baseShift;
                            finalGroup = buildCommon.makeVList({
                                positionType: "top",
                                positionData: top,
                                children: [ {
                                    type: "kern",
                                    size: options.fontMetrics().bigOpSpacing5
                                }, {
                                    type: "elem",
                                    elem: sub.elem,
                                    marginLeft: -slant + "em"
                                }, {
                                    type: "kern",
                                    size: sub.kern
                                }, {
                                    type: "elem",
                                    elem: base
                                } ]
                            }, options);
                        } else {
                            if (!sup) return base;
                            var _bottom = base.depth + baseShift;
                            finalGroup = buildCommon.makeVList({
                                positionType: "bottom",
                                positionData: _bottom,
                                children: [ {
                                    type: "elem",
                                    elem: base
                                }, {
                                    type: "kern",
                                    size: sup.kern
                                }, {
                                    type: "elem",
                                    elem: sup.elem,
                                    marginLeft: slant + "em"
                                }, {
                                    type: "kern",
                                    size: options.fontMetrics().bigOpSpacing5
                                } ]
                            }, options);
                        }
                        return buildCommon.makeSpan([ "mop", "op-limits" ], [ finalGroup ], options);
                    }, noSuccessor = [ "\\smallint" ], op_htmlBuilder = function(grp, options) {
                        var supGroup, subGroup, group, hasLimits = !1, supSub = checkNodeType(grp, "supsub");
                        supSub ? (supGroup = supSub.sup, subGroup = supSub.sub, group = assertNodeType(supSub.base, "op"), 
                        hasLimits = !0) : group = assertNodeType(grp, "op");
                        var base, style = options.style, large = !1;
                        if (style.size === src_Style.DISPLAY.size && group.symbol && !utils.contains(noSuccessor, group.name) && (large = !0), 
                        group.symbol) {
                            var fontName = large ? "Size2-Regular" : "Size1-Regular", stash = "";
                            if ("\\oiint" !== group.name && "\\oiiint" !== group.name || (stash = group.name.substr(1), 
                            group.name = "oiint" === stash ? "\\iint" : "\\iiint"), base = buildCommon.makeSymbol(group.name, fontName, "math", options, [ "mop", "op-symbol", large ? "large-op" : "small-op" ]), 
                            stash.length > 0) {
                                var italic = base.italic, oval = buildCommon.staticSvg(stash + "Size" + (large ? "2" : "1"), options);
                                base = buildCommon.makeVList({
                                    positionType: "individualShift",
                                    children: [ {
                                        type: "elem",
                                        elem: base,
                                        shift: 0
                                    }, {
                                        type: "elem",
                                        elem: oval,
                                        shift: large ? .08 : 0
                                    } ]
                                }, options), group.name = "\\" + stash, base.classes.unshift("mop"), base.italic = italic;
                            }
                        } else if (group.body) {
                            var inner = buildHTML_buildExpression(group.body, options, !0);
                            1 === inner.length && inner[0] instanceof domTree_SymbolNode ? (base = inner[0]).classes[0] = "mop" : base = buildCommon.makeSpan([ "mop" ], buildCommon.tryCombineChars(inner), options);
                        } else {
                            for (var output = [], i = 1; i < group.name.length; i++) output.push(buildCommon.mathsym(group.name[i], group.mode, options));
                            base = buildCommon.makeSpan([ "mop" ], output, options);
                        }
                        var baseShift = 0, slant = 0;
                        return (base instanceof domTree_SymbolNode || "\\oiint" === group.name || "\\oiiint" === group.name) && !group.suppressBaseShift && (baseShift = (base.height - base.depth) / 2 - options.fontMetrics().axisHeight, 
                        slant = base.italic), hasLimits ? assembleSupSub_assembleSupSub(base, supGroup, subGroup, options, style, slant, baseShift) : (baseShift && (base.style.position = "relative", 
                        base.style.top = baseShift + "em"), base);
                    }, op_mathmlBuilder = function(group, options) {
                        var node;
                        if (group.symbol) node = new mathMLTree_MathNode("mo", [ buildMathML_makeText(group.name, group.mode) ]), 
                        utils.contains(noSuccessor, group.name) && node.setAttribute("largeop", "false"); else if (group.body) node = new mathMLTree_MathNode("mo", buildMathML_buildExpression(group.body, options)); else {
                            node = new mathMLTree_MathNode("mi", [ new mathMLTree_TextNode(group.name.slice(1)) ]);
                            var operator = new mathMLTree_MathNode("mo", [ buildMathML_makeText("⁡", "text") ]);
                            node = group.parentIsSupSub ? new mathMLTree_MathNode("mo", [ node, operator ]) : newDocumentFragment([ node, operator ]);
                        }
                        return node;
                    }, singleCharBigOps = {
                        "∏": "\\prod",
                        "∐": "\\coprod",
                        "∑": "\\sum",
                        "⋀": "\\bigwedge",
                        "⋁": "\\bigvee",
                        "⋂": "\\bigcap",
                        "⋃": "\\bigcup",
                        "⨀": "\\bigodot",
                        "⨁": "\\bigoplus",
                        "⨂": "\\bigotimes",
                        "⨄": "\\biguplus",
                        "⨆": "\\bigsqcup"
                    };
                    defineFunction({
                        type: "op",
                        names: [ "\\coprod", "\\bigvee", "\\bigwedge", "\\biguplus", "\\bigcap", "\\bigcup", "\\intop", "\\prod", "\\sum", "\\bigotimes", "\\bigoplus", "\\bigodot", "\\bigsqcup", "\\smallint", "∏", "∐", "∑", "⋀", "⋁", "⋂", "⋃", "⨀", "⨁", "⨂", "⨄", "⨆" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, fName = _ref.funcName;
                            return 1 === fName.length && (fName = singleCharBigOps[fName]), {
                                type: "op",
                                mode: parser.mode,
                                limits: !0,
                                parentIsSupSub: !1,
                                symbol: !0,
                                name: fName
                            };
                        },
                        htmlBuilder: op_htmlBuilder,
                        mathmlBuilder: op_mathmlBuilder
                    }), defineFunction({
                        type: "op",
                        names: [ "\\mathop" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref2, args) {
                            var parser = _ref2.parser, body = args[0];
                            return {
                                type: "op",
                                mode: parser.mode,
                                limits: !1,
                                parentIsSupSub: !1,
                                symbol: !1,
                                body: defineFunction_ordargument(body)
                            };
                        },
                        htmlBuilder: op_htmlBuilder,
                        mathmlBuilder: op_mathmlBuilder
                    });
                    var singleCharIntegrals = {
                        "∫": "\\int",
                        "∬": "\\iint",
                        "∭": "\\iiint",
                        "∮": "\\oint",
                        "∯": "\\oiint",
                        "∰": "\\oiiint"
                    };
                    defineFunction({
                        type: "op",
                        names: [ "\\arcsin", "\\arccos", "\\arctan", "\\arctg", "\\arcctg", "\\arg", "\\ch", "\\cos", "\\cosec", "\\cosh", "\\cot", "\\cotg", "\\coth", "\\csc", "\\ctg", "\\cth", "\\deg", "\\dim", "\\exp", "\\hom", "\\ker", "\\lg", "\\ln", "\\log", "\\sec", "\\sin", "\\sinh", "\\sh", "\\tan", "\\tanh", "\\tg", "\\th" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(_ref3) {
                            var parser = _ref3.parser, funcName = _ref3.funcName;
                            return {
                                type: "op",
                                mode: parser.mode,
                                limits: !1,
                                parentIsSupSub: !1,
                                symbol: !1,
                                name: funcName
                            };
                        },
                        htmlBuilder: op_htmlBuilder,
                        mathmlBuilder: op_mathmlBuilder
                    }), defineFunction({
                        type: "op",
                        names: [ "\\det", "\\gcd", "\\inf", "\\lim", "\\max", "\\min", "\\Pr", "\\sup" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(_ref4) {
                            var parser = _ref4.parser, funcName = _ref4.funcName;
                            return {
                                type: "op",
                                mode: parser.mode,
                                limits: !0,
                                parentIsSupSub: !1,
                                symbol: !1,
                                name: funcName
                            };
                        },
                        htmlBuilder: op_htmlBuilder,
                        mathmlBuilder: op_mathmlBuilder
                    }), defineFunction({
                        type: "op",
                        names: [ "\\int", "\\iint", "\\iiint", "\\oint", "\\oiint", "\\oiiint", "∫", "∬", "∭", "∮", "∯", "∰" ],
                        props: {
                            numArgs: 0
                        },
                        handler: function(_ref5) {
                            var parser = _ref5.parser, fName = _ref5.funcName;
                            return 1 === fName.length && (fName = singleCharIntegrals[fName]), {
                                type: "op",
                                mode: parser.mode,
                                limits: !1,
                                parentIsSupSub: !1,
                                symbol: !0,
                                name: fName
                            };
                        },
                        htmlBuilder: op_htmlBuilder,
                        mathmlBuilder: op_mathmlBuilder
                    });
                    var operatorname_htmlBuilder = function(grp, options) {
                        var supGroup, subGroup, group, base, hasLimits = !1, supSub = checkNodeType(grp, "supsub");
                        if (supSub ? (supGroup = supSub.sup, subGroup = supSub.sub, group = assertNodeType(supSub.base, "operatorname"), 
                        hasLimits = !0) : group = assertNodeType(grp, "operatorname"), group.body.length > 0) {
                            for (var body = group.body.map(function(child) {
                                var childText = child.text;
                                return "string" == typeof childText ? {
                                    type: "textord",
                                    mode: child.mode,
                                    text: childText
                                } : child;
                            }), expression = buildHTML_buildExpression(body, options.withFont("mathrm"), !0), i = 0; i < expression.length; i++) {
                                var child = expression[i];
                                child instanceof domTree_SymbolNode && (child.text = child.text.replace(/\u2212/, "-").replace(/\u2217/, "*"));
                            }
                            base = buildCommon.makeSpan([ "mop" ], expression, options);
                        } else base = buildCommon.makeSpan([ "mop" ], [], options);
                        return hasLimits ? assembleSupSub_assembleSupSub(base, supGroup, subGroup, options, options.style, 0, 0) : base;
                    };
                    function sizingGroup(value, options, baseOptions) {
                        for (var inner = buildHTML_buildExpression(value, options, !1), multiplier = options.sizeMultiplier / baseOptions.sizeMultiplier, i = 0; i < inner.length; i++) {
                            var pos = inner[i].classes.indexOf("sizing");
                            pos < 0 ? Array.prototype.push.apply(inner[i].classes, options.sizingClasses(baseOptions)) : inner[i].classes[pos + 1] === "reset-size" + options.size && (inner[i].classes[pos + 1] = "reset-size" + baseOptions.size), 
                            inner[i].height *= multiplier, inner[i].depth *= multiplier;
                        }
                        return buildCommon.makeFragment(inner);
                    }
                    defineFunction({
                        type: "operatorname",
                        names: [ "\\operatorname", "\\operatorname*" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, body = args[0];
                            return {
                                type: "operatorname",
                                mode: parser.mode,
                                body: defineFunction_ordargument(body),
                                alwaysHandleSupSub: "\\operatorname*" === funcName,
                                limits: !1,
                                parentIsSupSub: !1
                            };
                        },
                        htmlBuilder: operatorname_htmlBuilder,
                        mathmlBuilder: function(group, options) {
                            for (var expression = buildMathML_buildExpression(group.body, options.withFont("mathrm")), isAllString = !0, i = 0; i < expression.length; i++) {
                                var node = expression[i];
                                if (node instanceof mathMLTree.SpaceNode) ; else if (node instanceof mathMLTree.MathNode) switch (node.type) {
                                  case "mi":
                                  case "mn":
                                  case "ms":
                                  case "mspace":
                                  case "mtext":
                                    break;

                                  case "mo":
                                    var child = node.children[0];
                                    1 === node.children.length && child instanceof mathMLTree.TextNode ? child.text = child.text.replace(/\u2212/, "-").replace(/\u2217/, "*") : isAllString = !1;
                                    break;

                                  default:
                                    isAllString = !1;
                                } else isAllString = !1;
                            }
                            if (isAllString) {
                                var word = expression.map(function(node) {
                                    return node.toText();
                                }).join("");
                                expression = [ new mathMLTree.TextNode(word) ];
                            }
                            var identifier = new mathMLTree.MathNode("mi", expression);
                            identifier.setAttribute("mathvariant", "normal");
                            var operator = new mathMLTree.MathNode("mo", [ buildMathML_makeText("⁡", "text") ]);
                            return group.parentIsSupSub ? new mathMLTree.MathNode("mo", [ identifier, operator ]) : mathMLTree.newDocumentFragment([ identifier, operator ]);
                        }
                    }), defineFunctionBuilders({
                        type: "ordgroup",
                        htmlBuilder: function(group, options) {
                            return group.semisimple ? buildCommon.makeFragment(buildHTML_buildExpression(group.body, options, !1)) : buildCommon.makeSpan([ "mord" ], buildHTML_buildExpression(group.body, options, !0), options);
                        },
                        mathmlBuilder: function(group, options) {
                            return buildExpressionRow(group.body, options, !0);
                        }
                    }), defineFunction({
                        type: "overline",
                        names: [ "\\overline" ],
                        props: {
                            numArgs: 1
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, body = args[0];
                            return {
                                type: "overline",
                                mode: parser.mode,
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var innerGroup = buildHTML_buildGroup(group.body, options.havingCrampedStyle()), line = buildCommon.makeLineSpan("overline-line", options), defaultRuleThickness = options.fontMetrics().defaultRuleThickness, vlist = buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: innerGroup
                                }, {
                                    type: "kern",
                                    size: 3 * defaultRuleThickness
                                }, {
                                    type: "elem",
                                    elem: line
                                }, {
                                    type: "kern",
                                    size: defaultRuleThickness
                                } ]
                            }, options);
                            return buildCommon.makeSpan([ "mord", "overline" ], [ vlist ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var operator = new mathMLTree.MathNode("mo", [ new mathMLTree.TextNode("‾") ]);
                            operator.setAttribute("stretchy", "true");
                            var node = new mathMLTree.MathNode("mover", [ buildMathML_buildGroup(group.body, options), operator ]);
                            return node.setAttribute("accent", "true"), node;
                        }
                    }), defineFunction({
                        type: "phantom",
                        names: [ "\\phantom" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, body = args[0];
                            return {
                                type: "phantom",
                                mode: parser.mode,
                                body: defineFunction_ordargument(body)
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var elements = buildHTML_buildExpression(group.body, options.withPhantom(), !1);
                            return buildCommon.makeFragment(elements);
                        },
                        mathmlBuilder: function(group, options) {
                            var inner = buildMathML_buildExpression(group.body, options);
                            return new mathMLTree.MathNode("mphantom", inner);
                        }
                    }), defineFunction({
                        type: "hphantom",
                        names: [ "\\hphantom" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref2, args) {
                            var parser = _ref2.parser, body = args[0];
                            return {
                                type: "hphantom",
                                mode: parser.mode,
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var node = buildCommon.makeSpan([], [ buildHTML_buildGroup(group.body, options.withPhantom()) ]);
                            if (node.height = 0, node.depth = 0, node.children) for (var i = 0; i < node.children.length; i++) node.children[i].height = 0, 
                            node.children[i].depth = 0;
                            return node = buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: node
                                } ]
                            }, options), buildCommon.makeSpan([ "mord" ], [ node ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options), phantom = new mathMLTree.MathNode("mphantom", inner), node = new mathMLTree.MathNode("mpadded", [ phantom ]);
                            return node.setAttribute("height", "0px"), node.setAttribute("depth", "0px"), node;
                        }
                    }), defineFunction({
                        type: "vphantom",
                        names: [ "\\vphantom" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref3, args) {
                            var parser = _ref3.parser, body = args[0];
                            return {
                                type: "vphantom",
                                mode: parser.mode,
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var inner = buildCommon.makeSpan([ "inner" ], [ buildHTML_buildGroup(group.body, options.withPhantom()) ]), fix = buildCommon.makeSpan([ "fix" ], []);
                            return buildCommon.makeSpan([ "mord", "rlap" ], [ inner, fix ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var inner = buildMathML_buildExpression(defineFunction_ordargument(group.body), options), phantom = new mathMLTree.MathNode("mphantom", inner), node = new mathMLTree.MathNode("mpadded", [ phantom ]);
                            return node.setAttribute("width", "0px"), node;
                        }
                    }), defineFunction({
                        type: "raisebox",
                        names: [ "\\raisebox" ],
                        props: {
                            numArgs: 2,
                            argTypes: [ "size", "hbox" ],
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, amount = assertNodeType(args[0], "size").value, body = args[1];
                            return {
                                type: "raisebox",
                                mode: parser.mode,
                                dy: amount,
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var body = buildHTML_buildGroup(group.body, options), dy = units_calculateSize(group.dy, options);
                            return buildCommon.makeVList({
                                positionType: "shift",
                                positionData: -dy,
                                children: [ {
                                    type: "elem",
                                    elem: body
                                } ]
                            }, options);
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mpadded", [ buildMathML_buildGroup(group.body, options) ]), dy = group.dy.number + group.dy.unit;
                            return node.setAttribute("voffset", dy), node;
                        }
                    }), defineFunction({
                        type: "rule",
                        names: [ "\\rule" ],
                        props: {
                            numArgs: 2,
                            numOptionalArgs: 1,
                            argTypes: [ "size", "size", "size" ]
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, shift = optArgs[0], width = assertNodeType(args[0], "size"), height = assertNodeType(args[1], "size");
                            return {
                                type: "rule",
                                mode: parser.mode,
                                shift: shift && assertNodeType(shift, "size").value,
                                width: width.value,
                                height: height.value
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var rule = buildCommon.makeSpan([ "mord", "rule" ], [], options), width = units_calculateSize(group.width, options), height = units_calculateSize(group.height, options), shift = group.shift ? units_calculateSize(group.shift, options) : 0;
                            return rule.style.borderRightWidth = width + "em", rule.style.borderTopWidth = height + "em", 
                            rule.style.bottom = shift + "em", rule.width = width, rule.height = height + shift, 
                            rule.depth = -shift, rule.maxFontSize = 1.125 * height * options.sizeMultiplier, 
                            rule;
                        },
                        mathmlBuilder: function(group, options) {
                            var width = units_calculateSize(group.width, options), height = units_calculateSize(group.height, options), shift = group.shift ? units_calculateSize(group.shift, options) : 0, color = options.color && options.getColor() || "black", rule = new mathMLTree.MathNode("mspace");
                            rule.setAttribute("mathbackground", color), rule.setAttribute("width", width + "em"), 
                            rule.setAttribute("height", height + "em");
                            var wrapper = new mathMLTree.MathNode("mpadded", [ rule ]);
                            return shift >= 0 ? wrapper.setAttribute("height", "+" + shift + "em") : (wrapper.setAttribute("height", shift + "em"), 
                            wrapper.setAttribute("depth", "+" + -shift + "em")), wrapper.setAttribute("voffset", shift + "em"), 
                            wrapper;
                        }
                    });
                    var sizeFuncs = [ "\\tiny", "\\sixptsize", "\\scriptsize", "\\footnotesize", "\\small", "\\normalsize", "\\large", "\\Large", "\\LARGE", "\\huge", "\\Huge" ];
                    defineFunction({
                        type: "sizing",
                        names: sizeFuncs,
                        props: {
                            numArgs: 0,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var breakOnTokenText = _ref.breakOnTokenText, funcName = _ref.funcName, parser = _ref.parser, body = parser.parseExpression(!1, breakOnTokenText);
                            return {
                                type: "sizing",
                                mode: parser.mode,
                                size: sizeFuncs.indexOf(funcName) + 1,
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var newOptions = options.havingSize(group.size);
                            return sizingGroup(group.body, newOptions, options);
                        },
                        mathmlBuilder: function(group, options) {
                            var newOptions = options.havingSize(group.size), inner = buildMathML_buildExpression(group.body, newOptions), node = new mathMLTree.MathNode("mstyle", inner);
                            return node.setAttribute("mathsize", newOptions.sizeMultiplier + "em"), node;
                        }
                    }), defineFunction({
                        type: "smash",
                        names: [ "\\smash" ],
                        props: {
                            numArgs: 1,
                            numOptionalArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, smashHeight = !1, smashDepth = !1, tbArg = optArgs[0] && assertNodeType(optArgs[0], "ordgroup");
                            if (tbArg) for (var letter = "", i = 0; i < tbArg.body.length; ++i) {
                                if ("t" === (letter = tbArg.body[i].text)) smashHeight = !0; else {
                                    if ("b" !== letter) {
                                        smashHeight = !1, smashDepth = !1;
                                        break;
                                    }
                                    smashDepth = !0;
                                }
                            } else smashHeight = !0, smashDepth = !0;
                            var body = args[0];
                            return {
                                type: "smash",
                                mode: parser.mode,
                                body: body,
                                smashHeight: smashHeight,
                                smashDepth: smashDepth
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var node = buildCommon.makeSpan([], [ buildHTML_buildGroup(group.body, options) ]);
                            if (!group.smashHeight && !group.smashDepth) return node;
                            if (group.smashHeight && (node.height = 0, node.children)) for (var i = 0; i < node.children.length; i++) node.children[i].height = 0;
                            if (group.smashDepth && (node.depth = 0, node.children)) for (var _i = 0; _i < node.children.length; _i++) node.children[_i].depth = 0;
                            var smashedNode = buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: node
                                } ]
                            }, options);
                            return buildCommon.makeSpan([ "mord" ], [ smashedNode ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mpadded", [ buildMathML_buildGroup(group.body, options) ]);
                            return group.smashHeight && node.setAttribute("height", "0px"), group.smashDepth && node.setAttribute("depth", "0px"), 
                            node;
                        }
                    }), defineFunction({
                        type: "sqrt",
                        names: [ "\\sqrt" ],
                        props: {
                            numArgs: 1,
                            numOptionalArgs: 1
                        },
                        handler: function(_ref, args, optArgs) {
                            var parser = _ref.parser, index = optArgs[0], body = args[0];
                            return {
                                type: "sqrt",
                                mode: parser.mode,
                                body: body,
                                index: index
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var inner = buildHTML_buildGroup(group.body, options.havingCrampedStyle());
                            0 === inner.height && (inner.height = options.fontMetrics().xHeight), inner = buildCommon.wrapFragment(inner, options);
                            var theta = options.fontMetrics().defaultRuleThickness, phi = theta;
                            options.style.id < src_Style.TEXT.id && (phi = options.fontMetrics().xHeight);
                            var lineClearance = theta + phi / 4, minDelimiterHeight = inner.height + inner.depth + lineClearance + theta, _delimiter$sqrtImage = delimiter_sqrtImage(minDelimiterHeight, options), img = _delimiter$sqrtImage.span, ruleWidth = _delimiter$sqrtImage.ruleWidth, advanceWidth = _delimiter$sqrtImage.advanceWidth, delimDepth = img.height - ruleWidth;
                            delimDepth > inner.height + inner.depth + lineClearance && (lineClearance = (lineClearance + delimDepth - inner.height - inner.depth) / 2);
                            var imgShift = img.height - inner.height - lineClearance - ruleWidth;
                            inner.style.paddingLeft = advanceWidth + "em";
                            var body = buildCommon.makeVList({
                                positionType: "firstBaseline",
                                children: [ {
                                    type: "elem",
                                    elem: inner,
                                    wrapperClasses: [ "svg-align" ]
                                }, {
                                    type: "kern",
                                    size: -(inner.height + imgShift)
                                }, {
                                    type: "elem",
                                    elem: img
                                }, {
                                    type: "kern",
                                    size: ruleWidth
                                } ]
                            }, options);
                            if (group.index) {
                                var newOptions = options.havingStyle(src_Style.SCRIPTSCRIPT), rootm = buildHTML_buildGroup(group.index, newOptions, options), toShift = .6 * (body.height - body.depth), rootVList = buildCommon.makeVList({
                                    positionType: "shift",
                                    positionData: -toShift,
                                    children: [ {
                                        type: "elem",
                                        elem: rootm
                                    } ]
                                }, options), rootVListWrap = buildCommon.makeSpan([ "root" ], [ rootVList ]);
                                return buildCommon.makeSpan([ "mord", "sqrt" ], [ rootVListWrap, body ], options);
                            }
                            return buildCommon.makeSpan([ "mord", "sqrt" ], [ body ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var body = group.body, index = group.index;
                            return index ? new mathMLTree.MathNode("mroot", [ buildMathML_buildGroup(body, options), buildMathML_buildGroup(index, options) ]) : new mathMLTree.MathNode("msqrt", [ buildMathML_buildGroup(body, options) ]);
                        }
                    });
                    var styling_styleMap = {
                        display: src_Style.DISPLAY,
                        text: src_Style.TEXT,
                        script: src_Style.SCRIPT,
                        scriptscript: src_Style.SCRIPTSCRIPT
                    };
                    defineFunction({
                        type: "styling",
                        names: [ "\\displaystyle", "\\textstyle", "\\scriptstyle", "\\scriptscriptstyle" ],
                        props: {
                            numArgs: 0,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var breakOnTokenText = _ref.breakOnTokenText, funcName = _ref.funcName, parser = _ref.parser, body = parser.parseExpression(!0, breakOnTokenText), style = funcName.slice(1, funcName.length - 5);
                            return {
                                type: "styling",
                                mode: parser.mode,
                                style: style,
                                body: body
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var newStyle = styling_styleMap[group.style], newOptions = options.havingStyle(newStyle).withFont("");
                            return sizingGroup(group.body, newOptions, options);
                        },
                        mathmlBuilder: function(group, options) {
                            var newStyle = styling_styleMap[group.style], newOptions = options.havingStyle(newStyle), inner = buildMathML_buildExpression(group.body, newOptions), node = new mathMLTree.MathNode("mstyle", inner), attr = {
                                display: [ "0", "true" ],
                                text: [ "0", "false" ],
                                script: [ "1", "false" ],
                                scriptscript: [ "2", "false" ]
                            }[group.style];
                            return node.setAttribute("scriptlevel", attr[0]), node.setAttribute("displaystyle", attr[1]), 
                            node;
                        }
                    });
                    defineFunctionBuilders({
                        type: "supsub",
                        htmlBuilder: function(group, options) {
                            var builderDelegate = function(group, options) {
                                var base = group.base;
                                return base ? "op" === base.type ? base.limits && (options.style.size === src_Style.DISPLAY.size || base.alwaysHandleSupSub) ? op_htmlBuilder : null : "operatorname" === base.type ? base.alwaysHandleSupSub && (options.style.size === src_Style.DISPLAY.size || base.limits) ? operatorname_htmlBuilder : null : "accent" === base.type ? utils.isCharacterBox(base.base) ? accent_htmlBuilder : null : "horizBrace" === base.type && !group.sub === base.isOver ? horizBrace_htmlBuilder : null : null;
                            }(group, options);
                            if (builderDelegate) return builderDelegate(group, options);
                            var supm, subm, minSupShift, valueBase = group.base, valueSup = group.sup, valueSub = group.sub, base = buildHTML_buildGroup(valueBase, options), metrics = options.fontMetrics(), supShift = 0, subShift = 0, isCharacterBox = valueBase && utils.isCharacterBox(valueBase);
                            if (valueSup) {
                                var newOptions = options.havingStyle(options.style.sup());
                                supm = buildHTML_buildGroup(valueSup, newOptions, options), isCharacterBox || (supShift = base.height - newOptions.fontMetrics().supDrop * newOptions.sizeMultiplier / options.sizeMultiplier);
                            }
                            if (valueSub) {
                                var _newOptions = options.havingStyle(options.style.sub());
                                subm = buildHTML_buildGroup(valueSub, _newOptions, options), isCharacterBox || (subShift = base.depth + _newOptions.fontMetrics().subDrop * _newOptions.sizeMultiplier / options.sizeMultiplier);
                            }
                            minSupShift = options.style === src_Style.DISPLAY ? metrics.sup1 : options.style.cramped ? metrics.sup3 : metrics.sup2;
                            var supsub, multiplier = options.sizeMultiplier, marginRight = .5 / metrics.ptPerEm / multiplier + "em", marginLeft = null;
                            if (subm) {
                                var isOiint = group.base && "op" === group.base.type && group.base.name && ("\\oiint" === group.base.name || "\\oiiint" === group.base.name);
                                (base instanceof domTree_SymbolNode || isOiint) && (marginLeft = -base.italic + "em");
                            }
                            if (supm && subm) {
                                supShift = Math.max(supShift, minSupShift, supm.depth + .25 * metrics.xHeight), 
                                subShift = Math.max(subShift, metrics.sub2);
                                var maxWidth = 4 * metrics.defaultRuleThickness;
                                if (supShift - supm.depth - (subm.height - subShift) < maxWidth) {
                                    subShift = maxWidth - (supShift - supm.depth) + subm.height;
                                    var psi = .8 * metrics.xHeight - (supShift - supm.depth);
                                    psi > 0 && (supShift += psi, subShift -= psi);
                                }
                                var vlistElem = [ {
                                    type: "elem",
                                    elem: subm,
                                    shift: subShift,
                                    marginRight: marginRight,
                                    marginLeft: marginLeft
                                }, {
                                    type: "elem",
                                    elem: supm,
                                    shift: -supShift,
                                    marginRight: marginRight
                                } ];
                                supsub = buildCommon.makeVList({
                                    positionType: "individualShift",
                                    children: vlistElem
                                }, options);
                            } else if (subm) {
                                subShift = Math.max(subShift, metrics.sub1, subm.height - .8 * metrics.xHeight);
                                var _vlistElem = [ {
                                    type: "elem",
                                    elem: subm,
                                    marginLeft: marginLeft,
                                    marginRight: marginRight
                                } ];
                                supsub = buildCommon.makeVList({
                                    positionType: "shift",
                                    positionData: subShift,
                                    children: _vlistElem
                                }, options);
                            } else {
                                if (!supm) throw new Error("supsub must have either sup or sub.");
                                supShift = Math.max(supShift, minSupShift, supm.depth + .25 * metrics.xHeight), 
                                supsub = buildCommon.makeVList({
                                    positionType: "shift",
                                    positionData: -supShift,
                                    children: [ {
                                        type: "elem",
                                        elem: supm,
                                        marginRight: marginRight
                                    } ]
                                }, options);
                            }
                            var mclass = getTypeOfDomTree(base, "right") || "mord";
                            return buildCommon.makeSpan([ mclass ], [ base, buildCommon.makeSpan([ "msupsub" ], [ supsub ]) ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var isOver, isBrace = !1, horizBrace = checkNodeType(group.base, "horizBrace");
                            horizBrace && !!group.sup === horizBrace.isOver && (isBrace = !0, isOver = horizBrace.isOver), 
                            !group.base || "op" !== group.base.type && "operatorname" !== group.base.type || (group.base.parentIsSupSub = !0);
                            var nodeType, children = [ buildMathML_buildGroup(group.base, options) ];
                            if (group.sub && children.push(buildMathML_buildGroup(group.sub, options)), group.sup && children.push(buildMathML_buildGroup(group.sup, options)), 
                            isBrace) nodeType = isOver ? "mover" : "munder"; else if (group.sub) if (group.sup) {
                                var _base2 = group.base;
                                nodeType = _base2 && "op" === _base2.type && _base2.limits && options.style === src_Style.DISPLAY ? "munderover" : _base2 && "operatorname" === _base2.type && _base2.alwaysHandleSupSub && (options.style === src_Style.DISPLAY || _base2.limits) ? "munderover" : "msubsup";
                            } else {
                                var _base = group.base;
                                nodeType = _base && "op" === _base.type && _base.limits && (options.style === src_Style.DISPLAY || _base.alwaysHandleSupSub) ? "munder" : _base && "operatorname" === _base.type && _base.alwaysHandleSupSub && (_base.limits || options.style === src_Style.DISPLAY) ? "munder" : "msub";
                            } else {
                                var base = group.base;
                                nodeType = base && "op" === base.type && base.limits && (options.style === src_Style.DISPLAY || base.alwaysHandleSupSub) ? "mover" : base && "operatorname" === base.type && base.alwaysHandleSupSub && (base.limits || options.style === src_Style.DISPLAY) ? "mover" : "msup";
                            }
                            return new mathMLTree.MathNode(nodeType, children);
                        }
                    }), defineFunctionBuilders({
                        type: "atom",
                        htmlBuilder: function(group, options) {
                            return buildCommon.mathsym(group.text, group.mode, options, [ "m" + group.family ]);
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mo", [ buildMathML_makeText(group.text, group.mode) ]);
                            if ("bin" === group.family) {
                                var variant = buildMathML_getVariant(group, options);
                                "bold-italic" === variant && node.setAttribute("mathvariant", variant);
                            } else "punct" === group.family ? node.setAttribute("separator", "true") : "open" !== group.family && "close" !== group.family || node.setAttribute("stretchy", "false");
                            return node;
                        }
                    });
                    var defaultVariant = {
                        mi: "italic",
                        mn: "normal",
                        mtext: "normal"
                    };
                    defineFunctionBuilders({
                        type: "mathord",
                        htmlBuilder: function(group, options) {
                            return buildCommon.makeOrd(group, options, "mathord");
                        },
                        mathmlBuilder: function(group, options) {
                            var node = new mathMLTree.MathNode("mi", [ buildMathML_makeText(group.text, group.mode, options) ]), variant = buildMathML_getVariant(group, options) || "italic";
                            return variant !== defaultVariant[node.type] && node.setAttribute("mathvariant", variant), 
                            node;
                        }
                    }), defineFunctionBuilders({
                        type: "textord",
                        htmlBuilder: function(group, options) {
                            return buildCommon.makeOrd(group, options, "textord");
                        },
                        mathmlBuilder: function(group, options) {
                            var node, text = buildMathML_makeText(group.text, group.mode, options), variant = buildMathML_getVariant(group, options) || "normal";
                            return node = "text" === group.mode ? new mathMLTree.MathNode("mtext", [ text ]) : /[0-9]/.test(group.text) ? new mathMLTree.MathNode("mn", [ text ]) : "\\prime" === group.text ? new mathMLTree.MathNode("mo", [ text ]) : new mathMLTree.MathNode("mi", [ text ]), 
                            variant !== defaultVariant[node.type] && node.setAttribute("mathvariant", variant), 
                            node;
                        }
                    });
                    var cssSpace = {
                        "\\nobreak": "nobreak",
                        "\\allowbreak": "allowbreak"
                    }, regularSpace = {
                        " ": {},
                        "\\ ": {},
                        "~": {
                            className: "nobreak"
                        },
                        "\\space": {},
                        "\\nobreakspace": {
                            className: "nobreak"
                        }
                    };
                    defineFunctionBuilders({
                        type: "spacing",
                        htmlBuilder: function(group, options) {
                            if (regularSpace.hasOwnProperty(group.text)) {
                                var className = regularSpace[group.text].className || "";
                                if ("text" === group.mode) {
                                    var ord = buildCommon.makeOrd(group, options, "textord");
                                    return ord.classes.push(className), ord;
                                }
                                return buildCommon.makeSpan([ "mspace", className ], [ buildCommon.mathsym(group.text, group.mode, options) ], options);
                            }
                            if (cssSpace.hasOwnProperty(group.text)) return buildCommon.makeSpan([ "mspace", cssSpace[group.text] ], [], options);
                            throw new src_ParseError('Unknown type of space "' + group.text + '"');
                        },
                        mathmlBuilder: function(group, options) {
                            if (!regularSpace.hasOwnProperty(group.text)) {
                                if (cssSpace.hasOwnProperty(group.text)) return new mathMLTree.MathNode("mspace");
                                throw new src_ParseError('Unknown type of space "' + group.text + '"');
                            }
                            return new mathMLTree.MathNode("mtext", [ new mathMLTree.TextNode(" ") ]);
                        }
                    });
                    var tag_pad = function() {
                        var padNode = new mathMLTree.MathNode("mtd", []);
                        return padNode.setAttribute("width", "50%"), padNode;
                    };
                    defineFunctionBuilders({
                        type: "tag",
                        mathmlBuilder: function(group, options) {
                            var table = new mathMLTree.MathNode("mtable", [ new mathMLTree.MathNode("mtr", [ tag_pad(), new mathMLTree.MathNode("mtd", [ buildExpressionRow(group.body, options) ]), tag_pad(), new mathMLTree.MathNode("mtd", [ buildExpressionRow(group.tag, options) ]) ]) ]);
                            return table.setAttribute("width", "100%"), table;
                        }
                    });
                    var textFontFamilies = {
                        "\\text": void 0,
                        "\\textrm": "textrm",
                        "\\textsf": "textsf",
                        "\\texttt": "texttt",
                        "\\textnormal": "textrm"
                    }, textFontWeights = {
                        "\\textbf": "textbf",
                        "\\textmd": "textmd"
                    }, textFontShapes = {
                        "\\textit": "textit",
                        "\\textup": "textup"
                    }, optionsWithFont = function(group, options) {
                        var font = group.font;
                        return font ? textFontFamilies[font] ? options.withTextFontFamily(textFontFamilies[font]) : textFontWeights[font] ? options.withTextFontWeight(textFontWeights[font]) : options.withTextFontShape(textFontShapes[font]) : options;
                    };
                    defineFunction({
                        type: "text",
                        names: [ "\\text", "\\textrm", "\\textsf", "\\texttt", "\\textnormal", "\\textbf", "\\textmd", "\\textit", "\\textup" ],
                        props: {
                            numArgs: 1,
                            argTypes: [ "text" ],
                            greediness: 2,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            var parser = _ref.parser, funcName = _ref.funcName, body = args[0];
                            return {
                                type: "text",
                                mode: parser.mode,
                                body: defineFunction_ordargument(body),
                                font: funcName
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var newOptions = optionsWithFont(group, options), inner = buildHTML_buildExpression(group.body, newOptions, !0);
                            return buildCommon.makeSpan([ "mord", "text" ], buildCommon.tryCombineChars(inner), newOptions);
                        },
                        mathmlBuilder: function(group, options) {
                            var newOptions = optionsWithFont(group, options);
                            return buildExpressionRow(group.body, newOptions);
                        }
                    }), defineFunction({
                        type: "underline",
                        names: [ "\\underline" ],
                        props: {
                            numArgs: 1,
                            allowedInText: !0
                        },
                        handler: function(_ref, args) {
                            return {
                                type: "underline",
                                mode: _ref.parser.mode,
                                body: args[0]
                            };
                        },
                        htmlBuilder: function(group, options) {
                            var innerGroup = buildHTML_buildGroup(group.body, options), line = buildCommon.makeLineSpan("underline-line", options), defaultRuleThickness = options.fontMetrics().defaultRuleThickness, vlist = buildCommon.makeVList({
                                positionType: "top",
                                positionData: innerGroup.height,
                                children: [ {
                                    type: "kern",
                                    size: defaultRuleThickness
                                }, {
                                    type: "elem",
                                    elem: line
                                }, {
                                    type: "kern",
                                    size: 3 * defaultRuleThickness
                                }, {
                                    type: "elem",
                                    elem: innerGroup
                                } ]
                            }, options);
                            return buildCommon.makeSpan([ "mord", "underline" ], [ vlist ], options);
                        },
                        mathmlBuilder: function(group, options) {
                            var operator = new mathMLTree.MathNode("mo", [ new mathMLTree.TextNode("‾") ]);
                            operator.setAttribute("stretchy", "true");
                            var node = new mathMLTree.MathNode("munder", [ buildMathML_buildGroup(group.body, options), operator ]);
                            return node.setAttribute("accentunder", "true"), node;
                        }
                    }), defineFunction({
                        type: "verb",
                        names: [ "\\verb" ],
                        props: {
                            numArgs: 0,
                            allowedInText: !0
                        },
                        handler: function(context, args, optArgs) {
                            throw new src_ParseError("\\verb ended by end of line instead of matching delimiter");
                        },
                        htmlBuilder: function(group, options) {
                            for (var text = makeVerb(group), body = [], newOptions = options.havingStyle(options.style.text()), i = 0; i < text.length; i++) {
                                var c = text[i];
                                "~" === c && (c = "\\textasciitilde"), body.push(buildCommon.makeSymbol(c, "Typewriter-Regular", group.mode, newOptions, [ "mord", "texttt" ]));
                            }
                            return buildCommon.makeSpan([ "mord", "text" ].concat(newOptions.sizingClasses(options)), buildCommon.tryCombineChars(body), newOptions);
                        },
                        mathmlBuilder: function(group, options) {
                            var text = new mathMLTree.TextNode(makeVerb(group)), node = new mathMLTree.MathNode("mtext", [ text ]);
                            return node.setAttribute("mathvariant", "monospace"), node;
                        }
                    });
                    var makeVerb = function(group) {
                        return group.body.replace(/ /g, group.star ? "␣" : " ");
                    }, src_functions = _functions, controlWordWhitespaceRegex = new RegExp("^(\\\\[a-zA-Z@]+)[ \r\n\t]*$"), combiningDiacriticalMarksEndRegex = new RegExp("[̀-ͯ]+$"), tokenRegexString = "([ \r\n\t]+)|([!-\\[\\]-‧‪-퟿豈-￿][̀-ͯ]*|[\ud800-\udbff][\udc00-\udfff][̀-ͯ]*|\\\\verb\\*([^]).*?\\3|\\\\verb([^*a-zA-Z]).*?\\4|\\\\operatorname\\*|\\\\[a-zA-Z@]+[ \r\n\t]*|\\\\[^\ud800-\udfff])", Lexer_Lexer = function() {
                        function Lexer(input, settings) {
                            this.input = void 0, this.settings = void 0, this.tokenRegex = void 0, this.catcodes = void 0, 
                            this.input = input, this.settings = settings, this.tokenRegex = new RegExp(tokenRegexString, "g"), 
                            this.catcodes = {
                                "%": 14
                            };
                        }
                        var _proto = Lexer.prototype;
                        return _proto.setCatcode = function(char, code) {
                            this.catcodes[char] = code;
                        }, _proto.lex = function() {
                            var input = this.input, pos = this.tokenRegex.lastIndex;
                            if (pos === input.length) return new Token_Token("EOF", new SourceLocation(this, pos, pos));
                            var match = this.tokenRegex.exec(input);
                            if (null === match || match.index !== pos) throw new src_ParseError("Unexpected character: '" + input[pos] + "'", new Token_Token(input[pos], new SourceLocation(this, pos, pos + 1)));
                            var text = match[2] || " ";
                            if (14 === this.catcodes[text]) {
                                var nlIndex = input.indexOf("\n", this.tokenRegex.lastIndex);
                                return -1 === nlIndex ? (this.tokenRegex.lastIndex = input.length, this.settings.reportNonstrict("commentAtEnd", "% comment has no terminating newline; LaTeX would fail because of commenting the end of math mode (e.g. $)")) : this.tokenRegex.lastIndex = nlIndex + 1, 
                                this.lex();
                            }
                            var controlMatch = text.match(controlWordWhitespaceRegex);
                            return controlMatch && (text = controlMatch[1]), new Token_Token(text, new SourceLocation(this, pos, this.tokenRegex.lastIndex));
                        }, Lexer;
                    }(), Namespace_Namespace = function() {
                        function Namespace(builtins, globalMacros) {
                            void 0 === builtins && (builtins = {}), void 0 === globalMacros && (globalMacros = {}), 
                            this.current = void 0, this.builtins = void 0, this.undefStack = void 0, this.current = globalMacros, 
                            this.builtins = builtins, this.undefStack = [];
                        }
                        var _proto = Namespace.prototype;
                        return _proto.beginGroup = function() {
                            this.undefStack.push({});
                        }, _proto.endGroup = function() {
                            if (0 === this.undefStack.length) throw new src_ParseError("Unbalanced namespace destruction: attempt to pop global namespace; please report this as a bug");
                            var undefs = this.undefStack.pop();
                            for (var undef in undefs) undefs.hasOwnProperty(undef) && (void 0 === undefs[undef] ? delete this.current[undef] : this.current[undef] = undefs[undef]);
                        }, _proto.has = function(name) {
                            return this.current.hasOwnProperty(name) || this.builtins.hasOwnProperty(name);
                        }, _proto.get = function(name) {
                            return this.current.hasOwnProperty(name) ? this.current[name] : this.builtins[name];
                        }, _proto.set = function(name, value, global) {
                            if (void 0 === global && (global = !1), global) {
                                for (var i = 0; i < this.undefStack.length; i++) delete this.undefStack[i][name];
                                this.undefStack.length > 0 && (this.undefStack[this.undefStack.length - 1][name] = value);
                            } else {
                                var top = this.undefStack[this.undefStack.length - 1];
                                top && !top.hasOwnProperty(name) && (top[name] = this.current[name]);
                            }
                            this.current[name] = value;
                        }, Namespace;
                    }(), builtinMacros = {}, macros = builtinMacros;
                    function defineMacro(name, body) {
                        builtinMacros[name] = body;
                    }
                    defineMacro("\\@firstoftwo", function(context) {
                        return {
                            tokens: context.consumeArgs(2)[0],
                            numArgs: 0
                        };
                    }), defineMacro("\\@secondoftwo", function(context) {
                        return {
                            tokens: context.consumeArgs(2)[1],
                            numArgs: 0
                        };
                    }), defineMacro("\\@ifnextchar", function(context) {
                        var args = context.consumeArgs(3), nextToken = context.future();
                        return 1 === args[0].length && args[0][0].text === nextToken.text ? {
                            tokens: args[1],
                            numArgs: 0
                        } : {
                            tokens: args[2],
                            numArgs: 0
                        };
                    }), defineMacro("\\@ifstar", "\\@ifnextchar *{\\@firstoftwo{#1}}"), defineMacro("\\TextOrMath", function(context) {
                        var args = context.consumeArgs(2);
                        return "text" === context.mode ? {
                            tokens: args[0],
                            numArgs: 0
                        } : {
                            tokens: args[1],
                            numArgs: 0
                        };
                    });
                    var digitToNumber = {
                        0: 0,
                        1: 1,
                        2: 2,
                        3: 3,
                        4: 4,
                        5: 5,
                        6: 6,
                        7: 7,
                        8: 8,
                        9: 9,
                        a: 10,
                        A: 10,
                        b: 11,
                        B: 11,
                        c: 12,
                        C: 12,
                        d: 13,
                        D: 13,
                        e: 14,
                        E: 14,
                        f: 15,
                        F: 15
                    };
                    defineMacro("\\char", function(context) {
                        var base, token = context.popToken(), number = "";
                        if ("'" === token.text) base = 8, token = context.popToken(); else if ('"' === token.text) base = 16, 
                        token = context.popToken(); else if ("`" === token.text) if ("\\" === (token = context.popToken()).text[0]) number = token.text.charCodeAt(1); else {
                            if ("EOF" === token.text) throw new src_ParseError("\\char` missing argument");
                            number = token.text.charCodeAt(0);
                        } else base = 10;
                        if (base) {
                            if (null == (number = digitToNumber[token.text]) || number >= base) throw new src_ParseError("Invalid base-" + base + " digit " + token.text);
                            for (var digit; null != (digit = digitToNumber[context.future().text]) && digit < base; ) number *= base, 
                            number += digit, context.popToken();
                        }
                        return "\\@char{" + number + "}";
                    });
                    var macros_def = function(context, global) {
                        var arg = context.consumeArgs(1)[0];
                        if (1 !== arg.length) throw new src_ParseError("\\gdef's first argument must be a macro name");
                        var name = arg[0].text, numArgs = 0;
                        for (arg = context.consumeArgs(1)[0]; 1 === arg.length && "#" === arg[0].text; ) {
                            if (1 !== (arg = context.consumeArgs(1)[0]).length) throw new src_ParseError('Invalid argument number length "' + arg.length + '"');
                            if (!/^[1-9]$/.test(arg[0].text)) throw new src_ParseError('Invalid argument number "' + arg[0].text + '"');
                            if (numArgs++, parseInt(arg[0].text) !== numArgs) throw new src_ParseError('Argument number "' + arg[0].text + '" out of order');
                            arg = context.consumeArgs(1)[0];
                        }
                        return context.macros.set(name, {
                            tokens: arg,
                            numArgs: numArgs
                        }, global), "";
                    };
                    defineMacro("\\gdef", function(context) {
                        return macros_def(context, !0);
                    }), defineMacro("\\def", function(context) {
                        return macros_def(context, !1);
                    }), defineMacro("\\global", function(context) {
                        var next = context.consumeArgs(1)[0];
                        if (1 !== next.length) throw new src_ParseError("Invalid command after \\global");
                        var command = next[0].text;
                        if ("\\def" === command) return macros_def(context, !0);
                        throw new src_ParseError("Invalid command '" + command + "' after \\global");
                    });
                    var macros_newcommand = function(context, existsOK, nonexistsOK) {
                        var arg = context.consumeArgs(1)[0];
                        if (1 !== arg.length) throw new src_ParseError("\\newcommand's first argument must be a macro name");
                        var name = arg[0].text, exists = context.isDefined(name);
                        if (exists && !existsOK) throw new src_ParseError("\\newcommand{" + name + "} attempting to redefine " + name + "; use \\renewcommand");
                        if (!exists && !nonexistsOK) throw new src_ParseError("\\renewcommand{" + name + "} when command " + name + " does not yet exist; use \\newcommand");
                        var numArgs = 0;
                        if (1 === (arg = context.consumeArgs(1)[0]).length && "[" === arg[0].text) {
                            for (var argText = "", token = context.expandNextToken(); "]" !== token.text && "EOF" !== token.text; ) argText += token.text, 
                            token = context.expandNextToken();
                            if (!argText.match(/^\s*[0-9]+\s*$/)) throw new src_ParseError("Invalid number of arguments: " + argText);
                            numArgs = parseInt(argText), arg = context.consumeArgs(1)[0];
                        }
                        return context.macros.set(name, {
                            tokens: arg,
                            numArgs: numArgs
                        }), "";
                    };
                    defineMacro("\\newcommand", function(context) {
                        return macros_newcommand(context, !1, !0);
                    }), defineMacro("\\renewcommand", function(context) {
                        return macros_newcommand(context, !0, !1);
                    }), defineMacro("\\providecommand", function(context) {
                        return macros_newcommand(context, !0, !0);
                    }), defineMacro("\\bgroup", "{"), defineMacro("\\egroup", "}"), defineMacro("\\lq", "`"), 
                    defineMacro("\\rq", "'"), defineMacro("\\aa", "\\r a"), defineMacro("\\AA", "\\r A"), 
                    defineMacro("\\textcopyright", "\\html@mathml{\\textcircled{c}}{\\char`©}"), defineMacro("\\copyright", "\\TextOrMath{\\textcopyright}{\\text{\\textcopyright}}"), 
                    defineMacro("\\textregistered", "\\html@mathml{\\textcircled{\\scriptsize R}}{\\char`®}"), 
                    defineMacro("ℬ", "\\mathscr{B}"), defineMacro("ℰ", "\\mathscr{E}"), defineMacro("ℱ", "\\mathscr{F}"), 
                    defineMacro("ℋ", "\\mathscr{H}"), defineMacro("ℐ", "\\mathscr{I}"), defineMacro("ℒ", "\\mathscr{L}"), 
                    defineMacro("ℳ", "\\mathscr{M}"), defineMacro("ℛ", "\\mathscr{R}"), defineMacro("ℭ", "\\mathfrak{C}"), 
                    defineMacro("ℌ", "\\mathfrak{H}"), defineMacro("ℨ", "\\mathfrak{Z}"), defineMacro("\\Bbbk", "\\Bbb{k}"), 
                    defineMacro("·", "\\cdotp"), defineMacro("\\llap", "\\mathllap{\\textrm{#1}}"), 
                    defineMacro("\\rlap", "\\mathrlap{\\textrm{#1}}"), defineMacro("\\clap", "\\mathclap{\\textrm{#1}}"), 
                    defineMacro("\\not", '\\html@mathml{\\mathrel{\\mathrlap\\@not}}{\\char"338}'), 
                    defineMacro("\\neq", "\\html@mathml{\\mathrel{\\not=}}{\\mathrel{\\char`≠}}"), defineMacro("\\ne", "\\neq"), 
                    defineMacro("≠", "\\neq"), defineMacro("\\notin", "\\html@mathml{\\mathrel{{\\in}\\mathllap{/\\mskip1mu}}}{\\mathrel{\\char`∉}}"), 
                    defineMacro("∉", "\\notin"), defineMacro("≘", "\\html@mathml{\\mathrel{=\\kern{-1em}\\raisebox{0.4em}{$\\scriptsize\\frown$}}}{\\mathrel{\\char`≘}}"), 
                    defineMacro("≙", "\\html@mathml{\\stackrel{\\tiny\\wedge}{=}}{\\mathrel{\\char`≘}}"), 
                    defineMacro("≚", "\\html@mathml{\\stackrel{\\tiny\\vee}{=}}{\\mathrel{\\char`≚}}"), 
                    defineMacro("≛", "\\html@mathml{\\stackrel{\\scriptsize\\star}{=}}{\\mathrel{\\char`≛}}"), 
                    defineMacro("≝", "\\html@mathml{\\stackrel{\\tiny\\mathrm{def}}{=}}{\\mathrel{\\char`≝}}"), 
                    defineMacro("≞", "\\html@mathml{\\stackrel{\\tiny\\mathrm{m}}{=}}{\\mathrel{\\char`≞}}"), 
                    defineMacro("≟", "\\html@mathml{\\stackrel{\\tiny?}{=}}{\\mathrel{\\char`≟}}"), 
                    defineMacro("⟂", "\\perp"), defineMacro("‼", "\\mathclose{!\\mkern-0.8mu!}"), defineMacro("∌", "\\notni"), 
                    defineMacro("⌜", "\\ulcorner"), defineMacro("⌝", "\\urcorner"), defineMacro("⌞", "\\llcorner"), 
                    defineMacro("⌟", "\\lrcorner"), defineMacro("©", "\\copyright"), defineMacro("®", "\\textregistered"), 
                    defineMacro("️", "\\textregistered"), defineMacro("\\vdots", "\\mathord{\\varvdots\\rule{0pt}{15pt}}"), 
                    defineMacro("⋮", "\\vdots"), defineMacro("\\varGamma", "\\mathit{\\Gamma}"), defineMacro("\\varDelta", "\\mathit{\\Delta}"), 
                    defineMacro("\\varTheta", "\\mathit{\\Theta}"), defineMacro("\\varLambda", "\\mathit{\\Lambda}"), 
                    defineMacro("\\varXi", "\\mathit{\\Xi}"), defineMacro("\\varPi", "\\mathit{\\Pi}"), 
                    defineMacro("\\varSigma", "\\mathit{\\Sigma}"), defineMacro("\\varUpsilon", "\\mathit{\\Upsilon}"), 
                    defineMacro("\\varPhi", "\\mathit{\\Phi}"), defineMacro("\\varPsi", "\\mathit{\\Psi}"), 
                    defineMacro("\\varOmega", "\\mathit{\\Omega}"), defineMacro("\\substack", "\\begin{subarray}{c}#1\\end{subarray}"), 
                    defineMacro("\\colon", "\\nobreak\\mskip2mu\\mathpunct{}\\mathchoice{\\mkern-3mu}{\\mkern-3mu}{}{}{:}\\mskip6mu"), 
                    defineMacro("\\boxed", "\\fbox{$\\displaystyle{#1}$}"), defineMacro("\\iff", "\\DOTSB\\;\\Longleftrightarrow\\;"), 
                    defineMacro("\\implies", "\\DOTSB\\;\\Longrightarrow\\;"), defineMacro("\\impliedby", "\\DOTSB\\;\\Longleftarrow\\;");
                    var dotsByToken = {
                        ",": "\\dotsc",
                        "\\not": "\\dotsb",
                        "+": "\\dotsb",
                        "=": "\\dotsb",
                        "<": "\\dotsb",
                        ">": "\\dotsb",
                        "-": "\\dotsb",
                        "*": "\\dotsb",
                        ":": "\\dotsb",
                        "\\DOTSB": "\\dotsb",
                        "\\coprod": "\\dotsb",
                        "\\bigvee": "\\dotsb",
                        "\\bigwedge": "\\dotsb",
                        "\\biguplus": "\\dotsb",
                        "\\bigcap": "\\dotsb",
                        "\\bigcup": "\\dotsb",
                        "\\prod": "\\dotsb",
                        "\\sum": "\\dotsb",
                        "\\bigotimes": "\\dotsb",
                        "\\bigoplus": "\\dotsb",
                        "\\bigodot": "\\dotsb",
                        "\\bigsqcup": "\\dotsb",
                        "\\And": "\\dotsb",
                        "\\longrightarrow": "\\dotsb",
                        "\\Longrightarrow": "\\dotsb",
                        "\\longleftarrow": "\\dotsb",
                        "\\Longleftarrow": "\\dotsb",
                        "\\longleftrightarrow": "\\dotsb",
                        "\\Longleftrightarrow": "\\dotsb",
                        "\\mapsto": "\\dotsb",
                        "\\longmapsto": "\\dotsb",
                        "\\hookrightarrow": "\\dotsb",
                        "\\doteq": "\\dotsb",
                        "\\mathbin": "\\dotsb",
                        "\\mathrel": "\\dotsb",
                        "\\relbar": "\\dotsb",
                        "\\Relbar": "\\dotsb",
                        "\\xrightarrow": "\\dotsb",
                        "\\xleftarrow": "\\dotsb",
                        "\\DOTSI": "\\dotsi",
                        "\\int": "\\dotsi",
                        "\\oint": "\\dotsi",
                        "\\iint": "\\dotsi",
                        "\\iiint": "\\dotsi",
                        "\\iiiint": "\\dotsi",
                        "\\idotsint": "\\dotsi",
                        "\\DOTSX": "\\dotsx"
                    };
                    defineMacro("\\dots", function(context) {
                        var thedots = "\\dotso", next = context.expandAfterFuture().text;
                        return next in dotsByToken ? thedots = dotsByToken[next] : "\\not" === next.substr(0, 4) ? thedots = "\\dotsb" : next in src_symbols.math && utils.contains([ "bin", "rel" ], src_symbols.math[next].group) && (thedots = "\\dotsb"), 
                        thedots;
                    });
                    var spaceAfterDots = {
                        ")": !0,
                        "]": !0,
                        "\\rbrack": !0,
                        "\\}": !0,
                        "\\rbrace": !0,
                        "\\rangle": !0,
                        "\\rceil": !0,
                        "\\rfloor": !0,
                        "\\rgroup": !0,
                        "\\rmoustache": !0,
                        "\\right": !0,
                        "\\bigr": !0,
                        "\\biggr": !0,
                        "\\Bigr": !0,
                        "\\Biggr": !0,
                        $: !0,
                        ";": !0,
                        ".": !0,
                        ",": !0
                    };
                    defineMacro("\\dotso", function(context) {
                        return context.future().text in spaceAfterDots ? "\\ldots\\," : "\\ldots";
                    }), defineMacro("\\dotsc", function(context) {
                        var next = context.future().text;
                        return next in spaceAfterDots && "," !== next ? "\\ldots\\," : "\\ldots";
                    }), defineMacro("\\cdots", function(context) {
                        return context.future().text in spaceAfterDots ? "\\@cdots\\," : "\\@cdots";
                    }), defineMacro("\\dotsb", "\\cdots"), defineMacro("\\dotsm", "\\cdots"), defineMacro("\\dotsi", "\\!\\cdots"), 
                    defineMacro("\\dotsx", "\\ldots\\,"), defineMacro("\\DOTSI", "\\relax"), defineMacro("\\DOTSB", "\\relax"), 
                    defineMacro("\\DOTSX", "\\relax"), defineMacro("\\tmspace", "\\TextOrMath{\\kern#1#3}{\\mskip#1#2}\\relax"), 
                    defineMacro("\\,", "\\tmspace+{3mu}{.1667em}"), defineMacro("\\thinspace", "\\,"), 
                    defineMacro("\\>", "\\mskip{4mu}"), defineMacro("\\:", "\\tmspace+{4mu}{.2222em}"), 
                    defineMacro("\\medspace", "\\:"), defineMacro("\\;", "\\tmspace+{5mu}{.2777em}"), 
                    defineMacro("\\thickspace", "\\;"), defineMacro("\\!", "\\tmspace-{3mu}{.1667em}"), 
                    defineMacro("\\negthinspace", "\\!"), defineMacro("\\negmedspace", "\\tmspace-{4mu}{.2222em}"), 
                    defineMacro("\\negthickspace", "\\tmspace-{5mu}{.277em}"), defineMacro("\\enspace", "\\kern.5em "), 
                    defineMacro("\\enskip", "\\hskip.5em\\relax"), defineMacro("\\quad", "\\hskip1em\\relax"), 
                    defineMacro("\\qquad", "\\hskip2em\\relax"), defineMacro("\\tag", "\\@ifstar\\tag@literal\\tag@paren"), 
                    defineMacro("\\tag@paren", "\\tag@literal{({#1})}"), defineMacro("\\tag@literal", function(context) {
                        if (context.macros.get("\\df@tag")) throw new src_ParseError("Multiple \\tag");
                        return "\\gdef\\df@tag{\\text{#1}}";
                    }), defineMacro("\\bmod", "\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}\\mathbin{\\rm mod}\\mathchoice{\\mskip1mu}{\\mskip1mu}{\\mskip5mu}{\\mskip5mu}"), 
                    defineMacro("\\pod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern8mu}{\\mkern8mu}{\\mkern8mu}(#1)"), 
                    defineMacro("\\pmod", "\\pod{{\\rm mod}\\mkern6mu#1}"), defineMacro("\\mod", "\\allowbreak\\mathchoice{\\mkern18mu}{\\mkern12mu}{\\mkern12mu}{\\mkern12mu}{\\rm mod}\\,\\,#1"), 
                    defineMacro("\\pmb", "\\html@mathml{\\@binrel{#1}{\\mathrlap{#1}\\kern0.5px#1}}{\\mathbf{#1}}"), 
                    defineMacro("\\\\", "\\newline"), defineMacro("\\TeX", "\\textrm{\\html@mathml{T\\kern-.1667em\\raisebox{-.5ex}{E}\\kern-.125emX}{TeX}}");
                    var latexRaiseA = fontMetricsData["Main-Regular"]["T".charCodeAt(0)][1] - .7 * fontMetricsData["Main-Regular"]["A".charCodeAt(0)][1] + "em";
                    defineMacro("\\LaTeX", "\\textrm{\\html@mathml{L\\kern-.36em\\raisebox{" + latexRaiseA + "}{\\scriptstyle A}\\kern-.15em\\TeX}{LaTeX}}"), 
                    defineMacro("\\KaTeX", "\\textrm{\\html@mathml{K\\kern-.17em\\raisebox{" + latexRaiseA + "}{\\scriptstyle A}\\kern-.15em\\TeX}{KaTeX}}"), 
                    defineMacro("\\hspace", "\\@ifstar\\@hspacer\\@hspace"), defineMacro("\\@hspace", "\\hskip #1\\relax"), 
                    defineMacro("\\@hspacer", "\\rule{0pt}{0pt}\\hskip #1\\relax"), defineMacro("\\ordinarycolon", ":"), 
                    defineMacro("\\vcentcolon", "\\mathrel{\\mathop\\ordinarycolon}"), defineMacro("\\dblcolon", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-.9mu}\\vcentcolon}}{\\mathop{\\char"2237}}'), 
                    defineMacro("\\coloneqq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2254}}'), 
                    defineMacro("\\Coloneqq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}=}}{\\mathop{\\char"2237\\char"3d}}'), 
                    defineMacro("\\coloneq", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"3a\\char"2212}}'), 
                    defineMacro("\\Coloneq", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\mathrel{-}}}{\\mathop{\\char"2237\\char"2212}}'), 
                    defineMacro("\\eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2255}}'), 
                    defineMacro("\\Eqqcolon", '\\html@mathml{\\mathrel{=\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"3d\\char"2237}}'), 
                    defineMacro("\\eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\vcentcolon}}{\\mathop{\\char"2239}}'), 
                    defineMacro("\\Eqcolon", '\\html@mathml{\\mathrel{\\mathrel{-}\\mathrel{\\mkern-1.2mu}\\dblcolon}}{\\mathop{\\char"2212\\char"2237}}'), 
                    defineMacro("\\colonapprox", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"3a\\char"2248}}'), 
                    defineMacro("\\Colonapprox", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\approx}}{\\mathop{\\char"2237\\char"2248}}'), 
                    defineMacro("\\colonsim", '\\html@mathml{\\mathrel{\\vcentcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"3a\\char"223c}}'), 
                    defineMacro("\\Colonsim", '\\html@mathml{\\mathrel{\\dblcolon\\mathrel{\\mkern-1.2mu}\\sim}}{\\mathop{\\char"2237\\char"223c}}'), 
                    defineMacro("∷", "\\dblcolon"), defineMacro("∹", "\\eqcolon"), defineMacro("≔", "\\coloneqq"), 
                    defineMacro("≕", "\\eqqcolon"), defineMacro("⩴", "\\Coloneqq"), defineMacro("\\ratio", "\\vcentcolon"), 
                    defineMacro("\\coloncolon", "\\dblcolon"), defineMacro("\\colonequals", "\\coloneqq"), 
                    defineMacro("\\coloncolonequals", "\\Coloneqq"), defineMacro("\\equalscolon", "\\eqqcolon"), 
                    defineMacro("\\equalscoloncolon", "\\Eqqcolon"), defineMacro("\\colonminus", "\\coloneq"), 
                    defineMacro("\\coloncolonminus", "\\Coloneq"), defineMacro("\\minuscolon", "\\eqcolon"), 
                    defineMacro("\\minuscoloncolon", "\\Eqcolon"), defineMacro("\\coloncolonapprox", "\\Colonapprox"), 
                    defineMacro("\\coloncolonsim", "\\Colonsim"), defineMacro("\\simcolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\vcentcolon}"), 
                    defineMacro("\\simcoloncolon", "\\mathrel{\\sim\\mathrel{\\mkern-1.2mu}\\dblcolon}"), 
                    defineMacro("\\approxcolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\vcentcolon}"), 
                    defineMacro("\\approxcoloncolon", "\\mathrel{\\approx\\mathrel{\\mkern-1.2mu}\\dblcolon}"), 
                    defineMacro("\\notni", "\\html@mathml{\\not\\ni}{\\mathrel{\\char`∌}}"), defineMacro("\\limsup", "\\DOTSB\\operatorname*{lim\\,sup}"), 
                    defineMacro("\\liminf", "\\DOTSB\\operatorname*{lim\\,inf}"), defineMacro("\\gvertneqq", "\\html@mathml{\\@gvertneqq}{≩}"), 
                    defineMacro("\\lvertneqq", "\\html@mathml{\\@lvertneqq}{≨}"), defineMacro("\\ngeqq", "\\html@mathml{\\@ngeqq}{≱}"), 
                    defineMacro("\\ngeqslant", "\\html@mathml{\\@ngeqslant}{≱}"), defineMacro("\\nleqq", "\\html@mathml{\\@nleqq}{≰}"), 
                    defineMacro("\\nleqslant", "\\html@mathml{\\@nleqslant}{≰}"), defineMacro("\\nshortmid", "\\html@mathml{\\@nshortmid}{∤}"), 
                    defineMacro("\\nshortparallel", "\\html@mathml{\\@nshortparallel}{∦}"), defineMacro("\\nsubseteqq", "\\html@mathml{\\@nsubseteqq}{⊈}"), 
                    defineMacro("\\nsupseteqq", "\\html@mathml{\\@nsupseteqq}{⊉}"), defineMacro("\\varsubsetneq", "\\html@mathml{\\@varsubsetneq}{⊊}"), 
                    defineMacro("\\varsubsetneqq", "\\html@mathml{\\@varsubsetneqq}{⫋}"), defineMacro("\\varsupsetneq", "\\html@mathml{\\@varsupsetneq}{⊋}"), 
                    defineMacro("\\varsupsetneqq", "\\html@mathml{\\@varsupsetneqq}{⫌}"), defineMacro("\\llbracket", "\\html@mathml{\\mathopen{[\\mkern-3.2mu[}}{\\mathopen{\\char`⟦}}"), 
                    defineMacro("\\rrbracket", "\\html@mathml{\\mathclose{]\\mkern-3.2mu]}}{\\mathclose{\\char`⟧}}"), 
                    defineMacro("⟦", "\\llbracket"), defineMacro("⟧", "\\rrbracket"), defineMacro("\\lBrace", "\\html@mathml{\\mathopen{\\{\\mkern-3.2mu[}}{\\mathopen{\\char`⦃}}"), 
                    defineMacro("\\rBrace", "\\html@mathml{\\mathclose{]\\mkern-3.2mu\\}}}{\\mathclose{\\char`⦄}}"), 
                    defineMacro("⦃", "\\lBrace"), defineMacro("⦄", "\\rBrace"), defineMacro("\\darr", "\\downarrow"), 
                    defineMacro("\\dArr", "\\Downarrow"), defineMacro("\\Darr", "\\Downarrow"), defineMacro("\\lang", "\\langle"), 
                    defineMacro("\\rang", "\\rangle"), defineMacro("\\uarr", "\\uparrow"), defineMacro("\\uArr", "\\Uparrow"), 
                    defineMacro("\\Uarr", "\\Uparrow"), defineMacro("\\N", "\\mathbb{N}"), defineMacro("\\R", "\\mathbb{R}"), 
                    defineMacro("\\Z", "\\mathbb{Z}"), defineMacro("\\alef", "\\aleph"), defineMacro("\\alefsym", "\\aleph"), 
                    defineMacro("\\Alpha", "\\mathrm{A}"), defineMacro("\\Beta", "\\mathrm{B}"), defineMacro("\\bull", "\\bullet"), 
                    defineMacro("\\Chi", "\\mathrm{X}"), defineMacro("\\clubs", "\\clubsuit"), defineMacro("\\cnums", "\\mathbb{C}"), 
                    defineMacro("\\Complex", "\\mathbb{C}"), defineMacro("\\Dagger", "\\ddagger"), defineMacro("\\diamonds", "\\diamondsuit"), 
                    defineMacro("\\empty", "\\emptyset"), defineMacro("\\Epsilon", "\\mathrm{E}"), defineMacro("\\Eta", "\\mathrm{H}"), 
                    defineMacro("\\exist", "\\exists"), defineMacro("\\harr", "\\leftrightarrow"), defineMacro("\\hArr", "\\Leftrightarrow"), 
                    defineMacro("\\Harr", "\\Leftrightarrow"), defineMacro("\\hearts", "\\heartsuit"), 
                    defineMacro("\\image", "\\Im"), defineMacro("\\infin", "\\infty"), defineMacro("\\Iota", "\\mathrm{I}"), 
                    defineMacro("\\isin", "\\in"), defineMacro("\\Kappa", "\\mathrm{K}"), defineMacro("\\larr", "\\leftarrow"), 
                    defineMacro("\\lArr", "\\Leftarrow"), defineMacro("\\Larr", "\\Leftarrow"), defineMacro("\\lrarr", "\\leftrightarrow"), 
                    defineMacro("\\lrArr", "\\Leftrightarrow"), defineMacro("\\Lrarr", "\\Leftrightarrow"), 
                    defineMacro("\\Mu", "\\mathrm{M}"), defineMacro("\\natnums", "\\mathbb{N}"), defineMacro("\\Nu", "\\mathrm{N}"), 
                    defineMacro("\\Omicron", "\\mathrm{O}"), defineMacro("\\plusmn", "\\pm"), defineMacro("\\rarr", "\\rightarrow"), 
                    defineMacro("\\rArr", "\\Rightarrow"), defineMacro("\\Rarr", "\\Rightarrow"), defineMacro("\\real", "\\Re"), 
                    defineMacro("\\reals", "\\mathbb{R}"), defineMacro("\\Reals", "\\mathbb{R}"), defineMacro("\\Rho", "\\mathrm{P}"), 
                    defineMacro("\\sdot", "\\cdot"), defineMacro("\\sect", "\\S"), defineMacro("\\spades", "\\spadesuit"), 
                    defineMacro("\\sub", "\\subset"), defineMacro("\\sube", "\\subseteq"), defineMacro("\\supe", "\\supseteq"), 
                    defineMacro("\\Tau", "\\mathrm{T}"), defineMacro("\\thetasym", "\\vartheta"), defineMacro("\\weierp", "\\wp"), 
                    defineMacro("\\Zeta", "\\mathrm{Z}"), defineMacro("\\argmin", "\\DOTSB\\operatorname*{arg\\,min}"), 
                    defineMacro("\\argmax", "\\DOTSB\\operatorname*{arg\\,max}"), defineMacro("\\plim", "\\DOTSB\\mathop{\\operatorname{plim}}\\limits"), 
                    defineMacro("\\blue", "\\textcolor{##6495ed}{#1}"), defineMacro("\\orange", "\\textcolor{##ffa500}{#1}"), 
                    defineMacro("\\pink", "\\textcolor{##ff00af}{#1}"), defineMacro("\\red", "\\textcolor{##df0030}{#1}"), 
                    defineMacro("\\green", "\\textcolor{##28ae7b}{#1}"), defineMacro("\\gray", "\\textcolor{gray}{#1}"), 
                    defineMacro("\\purple", "\\textcolor{##9d38bd}{#1}"), defineMacro("\\blueA", "\\textcolor{##ccfaff}{#1}"), 
                    defineMacro("\\blueB", "\\textcolor{##80f6ff}{#1}"), defineMacro("\\blueC", "\\textcolor{##63d9ea}{#1}"), 
                    defineMacro("\\blueD", "\\textcolor{##11accd}{#1}"), defineMacro("\\blueE", "\\textcolor{##0c7f99}{#1}"), 
                    defineMacro("\\tealA", "\\textcolor{##94fff5}{#1}"), defineMacro("\\tealB", "\\textcolor{##26edd5}{#1}"), 
                    defineMacro("\\tealC", "\\textcolor{##01d1c1}{#1}"), defineMacro("\\tealD", "\\textcolor{##01a995}{#1}"), 
                    defineMacro("\\tealE", "\\textcolor{##208170}{#1}"), defineMacro("\\greenA", "\\textcolor{##b6ffb0}{#1}"), 
                    defineMacro("\\greenB", "\\textcolor{##8af281}{#1}"), defineMacro("\\greenC", "\\textcolor{##74cf70}{#1}"), 
                    defineMacro("\\greenD", "\\textcolor{##1fab54}{#1}"), defineMacro("\\greenE", "\\textcolor{##0d923f}{#1}"), 
                    defineMacro("\\goldA", "\\textcolor{##ffd0a9}{#1}"), defineMacro("\\goldB", "\\textcolor{##ffbb71}{#1}"), 
                    defineMacro("\\goldC", "\\textcolor{##ff9c39}{#1}"), defineMacro("\\goldD", "\\textcolor{##e07d10}{#1}"), 
                    defineMacro("\\goldE", "\\textcolor{##a75a05}{#1}"), defineMacro("\\redA", "\\textcolor{##fca9a9}{#1}"), 
                    defineMacro("\\redB", "\\textcolor{##ff8482}{#1}"), defineMacro("\\redC", "\\textcolor{##f9685d}{#1}"), 
                    defineMacro("\\redD", "\\textcolor{##e84d39}{#1}"), defineMacro("\\redE", "\\textcolor{##bc2612}{#1}"), 
                    defineMacro("\\maroonA", "\\textcolor{##ffbde0}{#1}"), defineMacro("\\maroonB", "\\textcolor{##ff92c6}{#1}"), 
                    defineMacro("\\maroonC", "\\textcolor{##ed5fa6}{#1}"), defineMacro("\\maroonD", "\\textcolor{##ca337c}{#1}"), 
                    defineMacro("\\maroonE", "\\textcolor{##9e034e}{#1}"), defineMacro("\\purpleA", "\\textcolor{##ddd7ff}{#1}"), 
                    defineMacro("\\purpleB", "\\textcolor{##c6b9fc}{#1}"), defineMacro("\\purpleC", "\\textcolor{##aa87ff}{#1}"), 
                    defineMacro("\\purpleD", "\\textcolor{##7854ab}{#1}"), defineMacro("\\purpleE", "\\textcolor{##543b78}{#1}"), 
                    defineMacro("\\mintA", "\\textcolor{##f5f9e8}{#1}"), defineMacro("\\mintB", "\\textcolor{##edf2df}{#1}"), 
                    defineMacro("\\mintC", "\\textcolor{##e0e5cc}{#1}"), defineMacro("\\grayA", "\\textcolor{##f6f7f7}{#1}"), 
                    defineMacro("\\grayB", "\\textcolor{##f0f1f2}{#1}"), defineMacro("\\grayC", "\\textcolor{##e3e5e6}{#1}"), 
                    defineMacro("\\grayD", "\\textcolor{##d6d8da}{#1}"), defineMacro("\\grayE", "\\textcolor{##babec2}{#1}"), 
                    defineMacro("\\grayF", "\\textcolor{##888d93}{#1}"), defineMacro("\\grayG", "\\textcolor{##626569}{#1}"), 
                    defineMacro("\\grayH", "\\textcolor{##3b3e40}{#1}"), defineMacro("\\grayI", "\\textcolor{##21242c}{#1}"), 
                    defineMacro("\\kaBlue", "\\textcolor{##314453}{#1}"), defineMacro("\\kaGreen", "\\textcolor{##71B307}{#1}");
                    var implicitCommands = {
                        "\\relax": !0,
                        "^": !0,
                        _: !0,
                        "\\limits": !0,
                        "\\nolimits": !0
                    }, MacroExpander_MacroExpander = function() {
                        function MacroExpander(input, settings, mode) {
                            this.settings = void 0, this.expansionCount = void 0, this.lexer = void 0, this.macros = void 0, 
                            this.stack = void 0, this.mode = void 0, this.settings = settings, this.expansionCount = 0, 
                            this.feed(input), this.macros = new Namespace_Namespace(macros, settings.macros), 
                            this.mode = mode, this.stack = [];
                        }
                        var _proto = MacroExpander.prototype;
                        return _proto.feed = function(input) {
                            this.lexer = new Lexer_Lexer(input, this.settings);
                        }, _proto.switchMode = function(newMode) {
                            this.mode = newMode;
                        }, _proto.beginGroup = function() {
                            this.macros.beginGroup();
                        }, _proto.endGroup = function() {
                            this.macros.endGroup();
                        }, _proto.future = function() {
                            return 0 === this.stack.length && this.pushToken(this.lexer.lex()), this.stack[this.stack.length - 1];
                        }, _proto.popToken = function() {
                            return this.future(), this.stack.pop();
                        }, _proto.pushToken = function(token) {
                            this.stack.push(token);
                        }, _proto.pushTokens = function(tokens) {
                            var _this$stack;
                            (_this$stack = this.stack).push.apply(_this$stack, tokens);
                        }, _proto.consumeSpaces = function() {
                            for (;;) {
                                if (" " !== this.future().text) break;
                                this.stack.pop();
                            }
                        }, _proto.consumeArgs = function(numArgs) {
                            for (var args = [], i = 0; i < numArgs; ++i) {
                                this.consumeSpaces();
                                var startOfArg = this.popToken();
                                if ("{" === startOfArg.text) {
                                    for (var arg = [], depth = 1; 0 !== depth; ) {
                                        var tok = this.popToken();
                                        if (arg.push(tok), "{" === tok.text) ++depth; else if ("}" === tok.text) --depth; else if ("EOF" === tok.text) throw new src_ParseError("End of input in macro argument", startOfArg);
                                    }
                                    arg.pop(), arg.reverse(), args[i] = arg;
                                } else {
                                    if ("EOF" === startOfArg.text) throw new src_ParseError("End of input expecting macro argument");
                                    args[i] = [ startOfArg ];
                                }
                            }
                            return args;
                        }, _proto.expandOnce = function() {
                            var topToken = this.popToken(), name = topToken.text, expansion = this._getExpansion(name);
                            if (null == expansion) return this.pushToken(topToken), topToken;
                            if (this.expansionCount++, this.expansionCount > this.settings.maxExpand) throw new src_ParseError("Too many expansions: infinite loop or need to increase maxExpand setting");
                            var tokens = expansion.tokens;
                            if (expansion.numArgs) for (var args = this.consumeArgs(expansion.numArgs), i = (tokens = tokens.slice()).length - 1; i >= 0; --i) {
                                var tok = tokens[i];
                                if ("#" === tok.text) {
                                    if (0 === i) throw new src_ParseError("Incomplete placeholder at end of macro body", tok);
                                    if ("#" === (tok = tokens[--i]).text) tokens.splice(i + 1, 1); else {
                                        if (!/^[1-9]$/.test(tok.text)) throw new src_ParseError("Not a valid argument number", tok);
                                        var _tokens;
                                        (_tokens = tokens).splice.apply(_tokens, [ i, 2 ].concat(args[+tok.text - 1]));
                                    }
                                }
                            }
                            return this.pushTokens(tokens), tokens;
                        }, _proto.expandAfterFuture = function() {
                            return this.expandOnce(), this.future();
                        }, _proto.expandNextToken = function() {
                            for (;;) {
                                var expanded = this.expandOnce();
                                if (expanded instanceof Token_Token) {
                                    if ("\\relax" !== expanded.text) return this.stack.pop();
                                    this.stack.pop();
                                }
                            }
                            throw new Error();
                        }, _proto.expandMacro = function(name) {
                            if (this.macros.get(name)) {
                                var output = [], oldStackLength = this.stack.length;
                                for (this.pushToken(new Token_Token(name)); this.stack.length > oldStackLength; ) {
                                    this.expandOnce() instanceof Token_Token && output.push(this.stack.pop());
                                }
                                return output;
                            }
                        }, _proto.expandMacroAsText = function(name) {
                            var tokens = this.expandMacro(name);
                            return tokens ? tokens.map(function(token) {
                                return token.text;
                            }).join("") : tokens;
                        }, _proto._getExpansion = function(name) {
                            var definition = this.macros.get(name);
                            if (null == definition) return definition;
                            var expansion = "function" == typeof definition ? definition(this) : definition;
                            if ("string" == typeof expansion) {
                                var numArgs = 0;
                                if (-1 !== expansion.indexOf("#")) for (var stripped = expansion.replace(/##/g, ""); -1 !== stripped.indexOf("#" + (numArgs + 1)); ) ++numArgs;
                                for (var bodyLexer = new Lexer_Lexer(expansion, this.settings), tokens = [], tok = bodyLexer.lex(); "EOF" !== tok.text; ) tokens.push(tok), 
                                tok = bodyLexer.lex();
                                return tokens.reverse(), {
                                    tokens: tokens,
                                    numArgs: numArgs
                                };
                            }
                            return expansion;
                        }, _proto.isDefined = function(name) {
                            return this.macros.has(name) || src_functions.hasOwnProperty(name) || src_symbols.math.hasOwnProperty(name) || src_symbols.text.hasOwnProperty(name) || implicitCommands.hasOwnProperty(name);
                        }, MacroExpander;
                    }(), unicodeAccents = {
                        "́": {
                            text: "\\'",
                            math: "\\acute"
                        },
                        "̀": {
                            text: "\\`",
                            math: "\\grave"
                        },
                        "̈": {
                            text: '\\"',
                            math: "\\ddot"
                        },
                        "̃": {
                            text: "\\~",
                            math: "\\tilde"
                        },
                        "̄": {
                            text: "\\=",
                            math: "\\bar"
                        },
                        "̆": {
                            text: "\\u",
                            math: "\\breve"
                        },
                        "̌": {
                            text: "\\v",
                            math: "\\check"
                        },
                        "̂": {
                            text: "\\^",
                            math: "\\hat"
                        },
                        "̇": {
                            text: "\\.",
                            math: "\\dot"
                        },
                        "̊": {
                            text: "\\r",
                            math: "\\mathring"
                        },
                        "̋": {
                            text: "\\H"
                        }
                    }, unicodeSymbols = {
                        "á": "á",
                        "à": "à",
                        "ä": "ä",
                        "ǟ": "ǟ",
                        "ã": "ã",
                        "ā": "ā",
                        "ă": "ă",
                        "ắ": "ắ",
                        "ằ": "ằ",
                        "ẵ": "ẵ",
                        "ǎ": "ǎ",
                        "â": "â",
                        "ấ": "ấ",
                        "ầ": "ầ",
                        "ẫ": "ẫ",
                        "ȧ": "ȧ",
                        "ǡ": "ǡ",
                        "å": "å",
                        "ǻ": "ǻ",
                        "ḃ": "ḃ",
                        "ć": "ć",
                        "č": "č",
                        "ĉ": "ĉ",
                        "ċ": "ċ",
                        "ď": "ď",
                        "ḋ": "ḋ",
                        "é": "é",
                        "è": "è",
                        "ë": "ë",
                        "ẽ": "ẽ",
                        "ē": "ē",
                        "ḗ": "ḗ",
                        "ḕ": "ḕ",
                        "ĕ": "ĕ",
                        "ě": "ě",
                        "ê": "ê",
                        "ế": "ế",
                        "ề": "ề",
                        "ễ": "ễ",
                        "ė": "ė",
                        "ḟ": "ḟ",
                        "ǵ": "ǵ",
                        "ḡ": "ḡ",
                        "ğ": "ğ",
                        "ǧ": "ǧ",
                        "ĝ": "ĝ",
                        "ġ": "ġ",
                        "ḧ": "ḧ",
                        "ȟ": "ȟ",
                        "ĥ": "ĥ",
                        "ḣ": "ḣ",
                        "í": "í",
                        "ì": "ì",
                        "ï": "ï",
                        "ḯ": "ḯ",
                        "ĩ": "ĩ",
                        "ī": "ī",
                        "ĭ": "ĭ",
                        "ǐ": "ǐ",
                        "î": "î",
                        "ǰ": "ǰ",
                        "ĵ": "ĵ",
                        "ḱ": "ḱ",
                        "ǩ": "ǩ",
                        "ĺ": "ĺ",
                        "ľ": "ľ",
                        "ḿ": "ḿ",
                        "ṁ": "ṁ",
                        "ń": "ń",
                        "ǹ": "ǹ",
                        "ñ": "ñ",
                        "ň": "ň",
                        "ṅ": "ṅ",
                        "ó": "ó",
                        "ò": "ò",
                        "ö": "ö",
                        "ȫ": "ȫ",
                        "õ": "õ",
                        "ṍ": "ṍ",
                        "ṏ": "ṏ",
                        "ȭ": "ȭ",
                        "ō": "ō",
                        "ṓ": "ṓ",
                        "ṑ": "ṑ",
                        "ŏ": "ŏ",
                        "ǒ": "ǒ",
                        "ô": "ô",
                        "ố": "ố",
                        "ồ": "ồ",
                        "ỗ": "ỗ",
                        "ȯ": "ȯ",
                        "ȱ": "ȱ",
                        "ő": "ő",
                        "ṕ": "ṕ",
                        "ṗ": "ṗ",
                        "ŕ": "ŕ",
                        "ř": "ř",
                        "ṙ": "ṙ",
                        "ś": "ś",
                        "ṥ": "ṥ",
                        "š": "š",
                        "ṧ": "ṧ",
                        "ŝ": "ŝ",
                        "ṡ": "ṡ",
                        "ẗ": "ẗ",
                        "ť": "ť",
                        "ṫ": "ṫ",
                        "ú": "ú",
                        "ù": "ù",
                        "ü": "ü",
                        "ǘ": "ǘ",
                        "ǜ": "ǜ",
                        "ǖ": "ǖ",
                        "ǚ": "ǚ",
                        "ũ": "ũ",
                        "ṹ": "ṹ",
                        "ū": "ū",
                        "ṻ": "ṻ",
                        "ŭ": "ŭ",
                        "ǔ": "ǔ",
                        "û": "û",
                        "ů": "ů",
                        "ű": "ű",
                        "ṽ": "ṽ",
                        "ẃ": "ẃ",
                        "ẁ": "ẁ",
                        "ẅ": "ẅ",
                        "ŵ": "ŵ",
                        "ẇ": "ẇ",
                        "ẘ": "ẘ",
                        "ẍ": "ẍ",
                        "ẋ": "ẋ",
                        "ý": "ý",
                        "ỳ": "ỳ",
                        "ÿ": "ÿ",
                        "ỹ": "ỹ",
                        "ȳ": "ȳ",
                        "ŷ": "ŷ",
                        "ẏ": "ẏ",
                        "ẙ": "ẙ",
                        "ź": "ź",
                        "ž": "ž",
                        "ẑ": "ẑ",
                        "ż": "ż",
                        "Á": "Á",
                        "À": "À",
                        "Ä": "Ä",
                        "Ǟ": "Ǟ",
                        "Ã": "Ã",
                        "Ā": "Ā",
                        "Ă": "Ă",
                        "Ắ": "Ắ",
                        "Ằ": "Ằ",
                        "Ẵ": "Ẵ",
                        "Ǎ": "Ǎ",
                        "Â": "Â",
                        "Ấ": "Ấ",
                        "Ầ": "Ầ",
                        "Ẫ": "Ẫ",
                        "Ȧ": "Ȧ",
                        "Ǡ": "Ǡ",
                        "Å": "Å",
                        "Ǻ": "Ǻ",
                        "Ḃ": "Ḃ",
                        "Ć": "Ć",
                        "Č": "Č",
                        "Ĉ": "Ĉ",
                        "Ċ": "Ċ",
                        "Ď": "Ď",
                        "Ḋ": "Ḋ",
                        "É": "É",
                        "È": "È",
                        "Ë": "Ë",
                        "Ẽ": "Ẽ",
                        "Ē": "Ē",
                        "Ḗ": "Ḗ",
                        "Ḕ": "Ḕ",
                        "Ĕ": "Ĕ",
                        "Ě": "Ě",
                        "Ê": "Ê",
                        "Ế": "Ế",
                        "Ề": "Ề",
                        "Ễ": "Ễ",
                        "Ė": "Ė",
                        "Ḟ": "Ḟ",
                        "Ǵ": "Ǵ",
                        "Ḡ": "Ḡ",
                        "Ğ": "Ğ",
                        "Ǧ": "Ǧ",
                        "Ĝ": "Ĝ",
                        "Ġ": "Ġ",
                        "Ḧ": "Ḧ",
                        "Ȟ": "Ȟ",
                        "Ĥ": "Ĥ",
                        "Ḣ": "Ḣ",
                        "Í": "Í",
                        "Ì": "Ì",
                        "Ï": "Ï",
                        "Ḯ": "Ḯ",
                        "Ĩ": "Ĩ",
                        "Ī": "Ī",
                        "Ĭ": "Ĭ",
                        "Ǐ": "Ǐ",
                        "Î": "Î",
                        "İ": "İ",
                        "Ĵ": "Ĵ",
                        "Ḱ": "Ḱ",
                        "Ǩ": "Ǩ",
                        "Ĺ": "Ĺ",
                        "Ľ": "Ľ",
                        "Ḿ": "Ḿ",
                        "Ṁ": "Ṁ",
                        "Ń": "Ń",
                        "Ǹ": "Ǹ",
                        "Ñ": "Ñ",
                        "Ň": "Ň",
                        "Ṅ": "Ṅ",
                        "Ó": "Ó",
                        "Ò": "Ò",
                        "Ö": "Ö",
                        "Ȫ": "Ȫ",
                        "Õ": "Õ",
                        "Ṍ": "Ṍ",
                        "Ṏ": "Ṏ",
                        "Ȭ": "Ȭ",
                        "Ō": "Ō",
                        "Ṓ": "Ṓ",
                        "Ṑ": "Ṑ",
                        "Ŏ": "Ŏ",
                        "Ǒ": "Ǒ",
                        "Ô": "Ô",
                        "Ố": "Ố",
                        "Ồ": "Ồ",
                        "Ỗ": "Ỗ",
                        "Ȯ": "Ȯ",
                        "Ȱ": "Ȱ",
                        "Ő": "Ő",
                        "Ṕ": "Ṕ",
                        "Ṗ": "Ṗ",
                        "Ŕ": "Ŕ",
                        "Ř": "Ř",
                        "Ṙ": "Ṙ",
                        "Ś": "Ś",
                        "Ṥ": "Ṥ",
                        "Š": "Š",
                        "Ṧ": "Ṧ",
                        "Ŝ": "Ŝ",
                        "Ṡ": "Ṡ",
                        "Ť": "Ť",
                        "Ṫ": "Ṫ",
                        "Ú": "Ú",
                        "Ù": "Ù",
                        "Ü": "Ü",
                        "Ǘ": "Ǘ",
                        "Ǜ": "Ǜ",
                        "Ǖ": "Ǖ",
                        "Ǚ": "Ǚ",
                        "Ũ": "Ũ",
                        "Ṹ": "Ṹ",
                        "Ū": "Ū",
                        "Ṻ": "Ṻ",
                        "Ŭ": "Ŭ",
                        "Ǔ": "Ǔ",
                        "Û": "Û",
                        "Ů": "Ů",
                        "Ű": "Ű",
                        "Ṽ": "Ṽ",
                        "Ẃ": "Ẃ",
                        "Ẁ": "Ẁ",
                        "Ẅ": "Ẅ",
                        "Ŵ": "Ŵ",
                        "Ẇ": "Ẇ",
                        "Ẍ": "Ẍ",
                        "Ẋ": "Ẋ",
                        "Ý": "Ý",
                        "Ỳ": "Ỳ",
                        "Ÿ": "Ÿ",
                        "Ỹ": "Ỹ",
                        "Ȳ": "Ȳ",
                        "Ŷ": "Ŷ",
                        "Ẏ": "Ẏ",
                        "Ź": "Ź",
                        "Ž": "Ž",
                        "Ẑ": "Ẑ",
                        "Ż": "Ż",
                        "ά": "ά",
                        "ὰ": "ὰ",
                        "ᾱ": "ᾱ",
                        "ᾰ": "ᾰ",
                        "έ": "έ",
                        "ὲ": "ὲ",
                        "ή": "ή",
                        "ὴ": "ὴ",
                        "ί": "ί",
                        "ὶ": "ὶ",
                        "ϊ": "ϊ",
                        "ΐ": "ΐ",
                        "ῒ": "ῒ",
                        "ῑ": "ῑ",
                        "ῐ": "ῐ",
                        "ό": "ό",
                        "ὸ": "ὸ",
                        "ύ": "ύ",
                        "ὺ": "ὺ",
                        "ϋ": "ϋ",
                        "ΰ": "ΰ",
                        "ῢ": "ῢ",
                        "ῡ": "ῡ",
                        "ῠ": "ῠ",
                        "ώ": "ώ",
                        "ὼ": "ὼ",
                        "Ύ": "Ύ",
                        "Ὺ": "Ὺ",
                        "Ϋ": "Ϋ",
                        "Ῡ": "Ῡ",
                        "Ῠ": "Ῠ",
                        "Ώ": "Ώ",
                        "Ὼ": "Ὼ"
                    }, Parser_Parser = function() {
                        function Parser(input, settings) {
                            this.mode = void 0, this.gullet = void 0, this.settings = void 0, this.leftrightDepth = void 0, 
                            this.nextToken = void 0, this.mode = "math", this.gullet = new MacroExpander_MacroExpander(input, settings, this.mode), 
                            this.settings = settings, this.leftrightDepth = 0;
                        }
                        var _proto = Parser.prototype;
                        return _proto.expect = function(text, consume) {
                            if (void 0 === consume && (consume = !0), this.fetch().text !== text) throw new src_ParseError("Expected '" + text + "', got '" + this.fetch().text + "'", this.fetch());
                            consume && this.consume();
                        }, _proto.consume = function() {
                            this.nextToken = null;
                        }, _proto.fetch = function() {
                            return null == this.nextToken && (this.nextToken = this.gullet.expandNextToken()), 
                            this.nextToken;
                        }, _proto.switchMode = function(newMode) {
                            this.mode = newMode, this.gullet.switchMode(newMode);
                        }, _proto.parse = function() {
                            this.gullet.beginGroup(), this.settings.colorIsTextColor && this.gullet.macros.set("\\color", "\\textcolor");
                            var parse = this.parseExpression(!1);
                            return this.expect("EOF"), this.gullet.endGroup(), parse;
                        }, _proto.parseExpression = function(breakOnInfix, breakOnTokenText) {
                            for (var body = []; ;) {
                                "math" === this.mode && this.consumeSpaces();
                                var lex = this.fetch();
                                if (-1 !== Parser.endOfExpression.indexOf(lex.text)) break;
                                if (breakOnTokenText && lex.text === breakOnTokenText) break;
                                if (breakOnInfix && src_functions[lex.text] && src_functions[lex.text].infix) break;
                                var atom = this.parseAtom(breakOnTokenText);
                                if (!atom) break;
                                body.push(atom);
                            }
                            return "text" === this.mode && this.formLigatures(body), this.handleInfixNodes(body);
                        }, _proto.handleInfixNodes = function(body) {
                            for (var funcName, overIndex = -1, i = 0; i < body.length; i++) {
                                var node = checkNodeType(body[i], "infix");
                                if (node) {
                                    if (-1 !== overIndex) throw new src_ParseError("only one infix operator per group", node.token);
                                    overIndex = i, funcName = node.replaceWith;
                                }
                            }
                            if (-1 !== overIndex && funcName) {
                                var numerNode, denomNode, numerBody = body.slice(0, overIndex), denomBody = body.slice(overIndex + 1);
                                return numerNode = 1 === numerBody.length && "ordgroup" === numerBody[0].type ? numerBody[0] : {
                                    type: "ordgroup",
                                    mode: this.mode,
                                    body: numerBody
                                }, denomNode = 1 === denomBody.length && "ordgroup" === denomBody[0].type ? denomBody[0] : {
                                    type: "ordgroup",
                                    mode: this.mode,
                                    body: denomBody
                                }, [ "\\\\abovefrac" === funcName ? this.callFunction(funcName, [ numerNode, body[overIndex], denomNode ], []) : this.callFunction(funcName, [ numerNode, denomNode ], []) ];
                            }
                            return body;
                        }, _proto.handleSupSubscript = function(name) {
                            var symbolToken = this.fetch(), symbol = symbolToken.text;
                            this.consume();
                            var group = this.parseGroup(name, !1, Parser.SUPSUB_GREEDINESS, void 0, void 0, !0);
                            if (!group) throw new src_ParseError("Expected group after '" + symbol + "'", symbolToken);
                            return group;
                        }, _proto.formatUnsupportedCmd = function(text) {
                            for (var textordArray = [], i = 0; i < text.length; i++) textordArray.push({
                                type: "textord",
                                mode: "text",
                                text: text[i]
                            });
                            var textNode = {
                                type: "text",
                                mode: this.mode,
                                body: textordArray
                            };
                            return {
                                type: "color",
                                mode: this.mode,
                                color: this.settings.errorColor,
                                body: [ textNode ]
                            };
                        }, _proto.parseAtom = function(breakOnTokenText) {
                            var superscript, subscript, base = this.parseGroup("atom", !1, null, breakOnTokenText);
                            if ("text" === this.mode) return base;
                            for (;;) {
                                this.consumeSpaces();
                                var lex = this.fetch();
                                if ("\\limits" === lex.text || "\\nolimits" === lex.text) {
                                    var opNode = checkNodeType(base, "op");
                                    if (opNode) {
                                        var limits = "\\limits" === lex.text;
                                        opNode.limits = limits, opNode.alwaysHandleSupSub = !0;
                                    } else {
                                        if (!(opNode = checkNodeType(base, "operatorname")) || !opNode.alwaysHandleSupSub) throw new src_ParseError("Limit controls must follow a math operator", lex);
                                        var _limits = "\\limits" === lex.text;
                                        opNode.limits = _limits;
                                    }
                                    this.consume();
                                } else if ("^" === lex.text) {
                                    if (superscript) throw new src_ParseError("Double superscript", lex);
                                    superscript = this.handleSupSubscript("superscript");
                                } else if ("_" === lex.text) {
                                    if (subscript) throw new src_ParseError("Double subscript", lex);
                                    subscript = this.handleSupSubscript("subscript");
                                } else {
                                    if ("'" !== lex.text) break;
                                    if (superscript) throw new src_ParseError("Double superscript", lex);
                                    var prime = {
                                        type: "textord",
                                        mode: this.mode,
                                        text: "\\prime"
                                    }, primes = [ prime ];
                                    for (this.consume(); "'" === this.fetch().text; ) primes.push(prime), this.consume();
                                    "^" === this.fetch().text && primes.push(this.handleSupSubscript("superscript")), 
                                    superscript = {
                                        type: "ordgroup",
                                        mode: this.mode,
                                        body: primes
                                    };
                                }
                            }
                            return superscript || subscript ? {
                                type: "supsub",
                                mode: this.mode,
                                base: base,
                                sup: superscript,
                                sub: subscript
                            } : base;
                        }, _proto.parseFunction = function(breakOnTokenText, name, greediness) {
                            var token = this.fetch(), func = token.text, funcData = src_functions[func];
                            if (!funcData) return null;
                            if (this.consume(), null != greediness && funcData.greediness <= greediness) throw new src_ParseError("Got function '" + func + "' with no arguments" + (name ? " as " + name : ""), token);
                            if ("text" === this.mode && !funcData.allowedInText) throw new src_ParseError("Can't use function '" + func + "' in text mode", token);
                            if ("math" === this.mode && !1 === funcData.allowedInMath) throw new src_ParseError("Can't use function '" + func + "' in math mode", token);
                            var _this$parseArguments = this.parseArguments(func, funcData), args = _this$parseArguments.args, optArgs = _this$parseArguments.optArgs;
                            return this.callFunction(func, args, optArgs, token, breakOnTokenText);
                        }, _proto.callFunction = function(name, args, optArgs, token, breakOnTokenText) {
                            var context = {
                                funcName: name,
                                parser: this,
                                token: token,
                                breakOnTokenText: breakOnTokenText
                            }, func = src_functions[name];
                            if (func && func.handler) return func.handler(context, args, optArgs);
                            throw new src_ParseError("No function handler for " + name);
                        }, _proto.parseArguments = function(func, funcData) {
                            var totalArgs = funcData.numArgs + funcData.numOptionalArgs;
                            if (0 === totalArgs) return {
                                args: [],
                                optArgs: []
                            };
                            for (var baseGreediness = funcData.greediness, args = [], optArgs = [], i = 0; i < totalArgs; i++) {
                                var argType = funcData.argTypes && funcData.argTypes[i], isOptional = i < funcData.numOptionalArgs, consumeSpaces = i > 0 && !isOptional || 0 === i && !isOptional && "math" === this.mode, arg = this.parseGroupOfType("argument to '" + func + "'", argType, isOptional, baseGreediness, consumeSpaces);
                                if (!arg) {
                                    if (isOptional) {
                                        optArgs.push(null);
                                        continue;
                                    }
                                    throw new src_ParseError("Expected group after '" + func + "'", this.fetch());
                                }
                                (isOptional ? optArgs : args).push(arg);
                            }
                            return {
                                args: args,
                                optArgs: optArgs
                            };
                        }, _proto.parseGroupOfType = function(name, type, optional, greediness, consumeSpaces) {
                            switch (type) {
                              case "color":
                                return consumeSpaces && this.consumeSpaces(), this.parseColorGroup(optional);

                              case "size":
                                return consumeSpaces && this.consumeSpaces(), this.parseSizeGroup(optional);

                              case "url":
                                return this.parseUrlGroup(optional, consumeSpaces);

                              case "math":
                              case "text":
                                return this.parseGroup(name, optional, greediness, void 0, type, consumeSpaces);

                              case "hbox":
                                var group = this.parseGroup(name, optional, greediness, void 0, "text", consumeSpaces);
                                return group ? {
                                    type: "styling",
                                    mode: group.mode,
                                    body: [ group ],
                                    style: "text"
                                } : group;

                              case "raw":
                                if (consumeSpaces && this.consumeSpaces(), optional && "{" === this.fetch().text) return null;
                                var token = this.parseStringGroup("raw", optional, !0);
                                if (token) return {
                                    type: "raw",
                                    mode: "text",
                                    string: token.text
                                };
                                throw new src_ParseError("Expected raw group", this.fetch());

                              case "original":
                              case null:
                              case void 0:
                                return this.parseGroup(name, optional, greediness, void 0, void 0, consumeSpaces);

                              default:
                                throw new src_ParseError("Unknown group type as " + name, this.fetch());
                            }
                        }, _proto.consumeSpaces = function() {
                            for (;" " === this.fetch().text; ) this.consume();
                        }, _proto.parseStringGroup = function(modeName, optional, raw) {
                            var groupBegin = optional ? "[" : "{", groupEnd = optional ? "]" : "}", beginToken = this.fetch();
                            if (beginToken.text !== groupBegin) {
                                if (optional) return null;
                                if (raw && "EOF" !== beginToken.text && /[^{}[\]]/.test(beginToken.text)) return this.consume(), 
                                beginToken;
                            }
                            var outerMode = this.mode;
                            this.mode = "text", this.expect(groupBegin);
                            for (var nextToken, str = "", firstToken = this.fetch(), nested = 0, lastToken = firstToken; (nextToken = this.fetch()).text !== groupEnd || raw && nested > 0; ) {
                                switch (nextToken.text) {
                                  case "EOF":
                                    throw new src_ParseError("Unexpected end of input in " + modeName, firstToken.range(lastToken, str));

                                  case groupBegin:
                                    nested++;
                                    break;

                                  case groupEnd:
                                    nested--;
                                }
                                str += (lastToken = nextToken).text, this.consume();
                            }
                            return this.expect(groupEnd), this.mode = outerMode, firstToken.range(lastToken, str);
                        }, _proto.parseRegexGroup = function(regex, modeName) {
                            var outerMode = this.mode;
                            this.mode = "text";
                            for (var nextToken, firstToken = this.fetch(), lastToken = firstToken, str = ""; "EOF" !== (nextToken = this.fetch()).text && regex.test(str + nextToken.text); ) str += (lastToken = nextToken).text, 
                            this.consume();
                            if ("" === str) throw new src_ParseError("Invalid " + modeName + ": '" + firstToken.text + "'", firstToken);
                            return this.mode = outerMode, firstToken.range(lastToken, str);
                        }, _proto.parseColorGroup = function(optional) {
                            var res = this.parseStringGroup("color", optional);
                            if (!res) return null;
                            var match = /^(#[a-f0-9]{3}|#?[a-f0-9]{6}|[a-z]+)$/i.exec(res.text);
                            if (!match) throw new src_ParseError("Invalid color: '" + res.text + "'", res);
                            var color = match[0];
                            return /^[0-9a-f]{6}$/i.test(color) && (color = "#" + color), {
                                type: "color-token",
                                mode: this.mode,
                                color: color
                            };
                        }, _proto.parseSizeGroup = function(optional) {
                            var res, isBlank = !1;
                            if (!(res = optional || "{" === this.fetch().text ? this.parseStringGroup("size", optional) : this.parseRegexGroup(/^[-+]? *(?:$|\d+|\d+\.\d*|\.\d*) *[a-z]{0,2} *$/, "size"))) return null;
                            optional || 0 !== res.text.length || (res.text = "0pt", isBlank = !0);
                            var match = /([-+]?) *(\d+(?:\.\d*)?|\.\d+) *([a-z]{2})/.exec(res.text);
                            if (!match) throw new src_ParseError("Invalid size: '" + res.text + "'", res);
                            var data = {
                                number: +(match[1] + match[2]),
                                unit: match[3]
                            };
                            if (!validUnit(data)) throw new src_ParseError("Invalid unit: '" + data.unit + "'", res);
                            return {
                                type: "size",
                                mode: this.mode,
                                value: data,
                                isBlank: isBlank
                            };
                        }, _proto.parseUrlGroup = function(optional, consumeSpaces) {
                            this.gullet.lexer.setCatcode("%", 13);
                            var res = this.parseStringGroup("url", optional, !0);
                            if (this.gullet.lexer.setCatcode("%", 14), !res) return null;
                            var url = res.text.replace(/\\([#$%&~_^{}])/g, "$1");
                            return {
                                type: "url",
                                mode: this.mode,
                                url: url
                            };
                        }, _proto.parseGroup = function(name, optional, greediness, breakOnTokenText, mode, consumeSpaces) {
                            var outerMode = this.mode;
                            mode && this.switchMode(mode), consumeSpaces && this.consumeSpaces();
                            var result, firstToken = this.fetch(), text = firstToken.text;
                            if (optional ? "[" === text : "{" === text || "\\begingroup" === text) {
                                this.consume();
                                var groupEnd = Parser.endOfGroup[text];
                                this.gullet.beginGroup();
                                var expression = this.parseExpression(!1, groupEnd), lastToken = this.fetch();
                                this.expect(groupEnd), this.gullet.endGroup(), result = {
                                    type: "ordgroup",
                                    mode: this.mode,
                                    loc: SourceLocation.range(firstToken, lastToken),
                                    body: expression,
                                    semisimple: "\\begingroup" === text || void 0
                                };
                            } else if (optional) result = null; else if (null == (result = this.parseFunction(breakOnTokenText, name, greediness) || this.parseSymbol()) && "\\" === text[0] && !implicitCommands.hasOwnProperty(text)) {
                                if (this.settings.throwOnError) throw new src_ParseError("Undefined control sequence: " + text, firstToken);
                                result = this.formatUnsupportedCmd(text), this.consume();
                            }
                            return mode && this.switchMode(outerMode), result;
                        }, _proto.formLigatures = function(group) {
                            for (var n = group.length - 1, i = 0; i < n; ++i) {
                                var a = group[i], v = a.text;
                                "-" === v && "-" === group[i + 1].text && (i + 1 < n && "-" === group[i + 2].text ? (group.splice(i, 3, {
                                    type: "textord",
                                    mode: "text",
                                    loc: SourceLocation.range(a, group[i + 2]),
                                    text: "---"
                                }), n -= 2) : (group.splice(i, 2, {
                                    type: "textord",
                                    mode: "text",
                                    loc: SourceLocation.range(a, group[i + 1]),
                                    text: "--"
                                }), n -= 1)), "'" !== v && "`" !== v || group[i + 1].text !== v || (group.splice(i, 2, {
                                    type: "textord",
                                    mode: "text",
                                    loc: SourceLocation.range(a, group[i + 1]),
                                    text: v + v
                                }), n -= 1);
                            }
                        }, _proto.parseSymbol = function() {
                            var nucleus = this.fetch(), text = nucleus.text;
                            if (/^\\verb[^a-zA-Z]/.test(text)) {
                                this.consume();
                                var arg = text.slice(5), star = "*" === arg.charAt(0);
                                if (star && (arg = arg.slice(1)), arg.length < 2 || arg.charAt(0) !== arg.slice(-1)) throw new src_ParseError("\\verb assertion failed --\n                    please report what input caused this bug");
                                return {
                                    type: "verb",
                                    mode: "text",
                                    body: arg = arg.slice(1, -1),
                                    star: star
                                };
                            }
                            unicodeSymbols.hasOwnProperty(text[0]) && !src_symbols[this.mode][text[0]] && (this.settings.strict && "math" === this.mode && this.settings.reportNonstrict("unicodeTextInMathMode", 'Accented Unicode text character "' + text[0] + '" used in math mode', nucleus), 
                            text = unicodeSymbols[text[0]] + text.substr(1));
                            var symbol, match = combiningDiacriticalMarksEndRegex.exec(text);
                            if (match && ("i" === (text = text.substring(0, match.index)) ? text = "ı" : "j" === text && (text = "ȷ")), 
                            src_symbols[this.mode][text]) {
                                this.settings.strict && "math" === this.mode && "ÇÐÞçþ".indexOf(text) >= 0 && this.settings.reportNonstrict("unicodeTextInMathMode", 'Latin-1/Unicode text character "' + text[0] + '" used in math mode', nucleus);
                                var s, group = src_symbols[this.mode][text].group, loc = SourceLocation.range(nucleus);
                                if (ATOMS.hasOwnProperty(group)) {
                                    var family = group;
                                    s = {
                                        type: "atom",
                                        mode: this.mode,
                                        family: family,
                                        loc: loc,
                                        text: text
                                    };
                                } else s = {
                                    type: group,
                                    mode: this.mode,
                                    loc: loc,
                                    text: text
                                };
                                symbol = s;
                            } else {
                                if (!(text.charCodeAt(0) >= 128)) return null;
                                this.settings.strict && (supportedCodepoint(text.charCodeAt(0)) ? "math" === this.mode && this.settings.reportNonstrict("unicodeTextInMathMode", 'Unicode text character "' + text[0] + '" used in math mode', nucleus) : this.settings.reportNonstrict("unknownSymbol", 'Unrecognized Unicode character "' + text[0] + '" (' + text.charCodeAt(0) + ")", nucleus)), 
                                symbol = {
                                    type: "textord",
                                    mode: "text",
                                    loc: SourceLocation.range(nucleus),
                                    text: text
                                };
                            }
                            if (this.consume(), match) for (var i = 0; i < match[0].length; i++) {
                                var accent = match[0][i];
                                if (!unicodeAccents[accent]) throw new src_ParseError("Unknown accent ' " + accent + "'", nucleus);
                                var command = unicodeAccents[accent][this.mode];
                                if (!command) throw new src_ParseError("Accent " + accent + " unsupported in " + this.mode + " mode", nucleus);
                                symbol = {
                                    type: "accent",
                                    mode: this.mode,
                                    loc: SourceLocation.range(nucleus),
                                    label: command,
                                    isStretchy: !1,
                                    isShifty: !0,
                                    base: symbol
                                };
                            }
                            return symbol;
                        }, Parser;
                    }();
                    Parser_Parser.endOfExpression = [ "}", "\\endgroup", "\\end", "\\right", "&" ], 
                    Parser_Parser.endOfGroup = {
                        "[": "]",
                        "{": "}",
                        "\\begingroup": "\\endgroup"
                    }, Parser_Parser.SUPSUB_GREEDINESS = 1;
                    var src_parseTree = function(toParse, settings) {
                        if (!("string" == typeof toParse || toParse instanceof String)) throw new TypeError("KaTeX can only parse string typed expression");
                        var parser = new Parser_Parser(toParse, settings);
                        delete parser.gullet.macros.current["\\df@tag"];
                        var tree = parser.parse();
                        if (parser.gullet.macros.get("\\df@tag")) {
                            if (!settings.displayMode) throw new src_ParseError("\\tag works only in display equations");
                            parser.gullet.feed("\\df@tag"), tree = [ {
                                type: "tag",
                                mode: "text",
                                body: tree,
                                tag: parser.parse()
                            } ];
                        }
                        return tree;
                    }, katex_render = function(expression, baseNode, options) {
                        baseNode.textContent = "";
                        var node = katex_renderToDomTree(expression, options).toNode();
                        baseNode.appendChild(node);
                    };
                    "undefined" != typeof document && "CSS1Compat" !== document.compatMode && ("undefined" != typeof console && console.warn("Warning: KaTeX doesn't work in quirks mode. Make sure your website has a suitable doctype."), 
                    katex_render = function() {
                        throw new src_ParseError("KaTeX doesn't work in quirks mode.");
                    });
                    var katex_renderError = function(error, expression, options) {
                        if (options.throwOnError || !(error instanceof src_ParseError)) throw error;
                        var node = buildCommon.makeSpan([ "katex-error" ], [ new domTree_SymbolNode(expression) ]);
                        return node.setAttribute("title", error.toString()), node.setAttribute("style", "color:" + options.errorColor), 
                        node;
                    }, katex_renderToDomTree = function(expression, options) {
                        var settings = new Settings_Settings(options);
                        try {
                            var tree = src_parseTree(expression, settings);
                            return buildTree_buildTree(tree, expression, settings);
                        } catch (error) {
                            return katex_renderError(error, expression, settings);
                        }
                    }, katex_0 = {
                        version: "0.11.1",
                        render: katex_render,
                        renderToString: function(expression, options) {
                            return katex_renderToDomTree(expression, options).toMarkup();
                        },
                        ParseError: src_ParseError,
                        __parse: function(expression, options) {
                            var settings = new Settings_Settings(options);
                            return src_parseTree(expression, settings);
                        },
                        __renderToDomTree: katex_renderToDomTree,
                        __renderToHTMLTree: function(expression, options) {
                            var settings = new Settings_Settings(options);
                            try {
                                return function(tree, expression, settings) {
                                    var htmlNode = buildHTML(tree, buildTree_optionsFromSettings(settings)), katexNode = buildCommon.makeSpan([ "katex" ], [ htmlNode ]);
                                    return buildTree_displayWrap(katexNode, settings);
                                }(src_parseTree(expression, settings), 0, settings);
                            } catch (error) {
                                return katex_renderError(error, expression, settings);
                            }
                        },
                        __setFontMetrics: function(fontName, metrics) {
                            fontMetricsData[fontName] = metrics;
                        },
                        __defineSymbol: defineSymbol,
                        __defineMacro: defineMacro,
                        __domTree: {
                            Span: domTree_Span,
                            Anchor: domTree_Anchor,
                            SymbolNode: domTree_SymbolNode,
                            SvgNode: SvgNode,
                            PathNode: domTree_PathNode,
                            LineNode: LineNode
                        }
                    };
                    __webpack_exports__.default = katex_0;
                } ]).default;
            });
        },
        "./node_modules/marked/src/InlineLexer.js": function(module, exports, __webpack_require__) {
            const Renderer = __webpack_require__("./node_modules/marked/src/Renderer.js"), {defaults: defaults} = __webpack_require__("./node_modules/marked/src/defaults.js"), {inline: inline} = __webpack_require__("./node_modules/marked/src/rules.js"), {findClosingBracket: findClosingBracket, escape: escape} = __webpack_require__("./node_modules/marked/src/helpers.js");
            module.exports = class InlineLexer {
                constructor(links, options) {
                    if (this.options = options || defaults, this.links = links, this.rules = inline.normal, 
                    this.options.renderer = this.options.renderer || new Renderer(), this.renderer = this.options.renderer, 
                    this.renderer.options = this.options, !this.links) throw new Error("Tokens array requires a `links` property.");
                    this.options.pedantic ? this.rules = inline.pedantic : this.options.gfm && (this.options.breaks ? this.rules = inline.breaks : this.rules = inline.gfm);
                }
                static get rules() {
                    return inline;
                }
                static output(src, links, options) {
                    return new InlineLexer(links, options).output(src);
                }
                output(src) {
                    let link, text, href, title, cap, prevCapZero, out = "";
                    for (;src; ) if (cap = this.rules.escape.exec(src)) src = src.substring(cap[0].length), 
                    out += escape(cap[1]); else if (cap = this.rules.tag.exec(src)) !this.inLink && /^<a /i.test(cap[0]) ? this.inLink = !0 : this.inLink && /^<\/a>/i.test(cap[0]) && (this.inLink = !1), 
                    !this.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0]) ? this.inRawBlock = !0 : this.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0]) && (this.inRawBlock = !1), 
                    src = src.substring(cap[0].length), out += this.renderer.html(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]); else if (cap = this.rules.link.exec(src)) {
                        const lastParenIndex = findClosingBracket(cap[2], "()");
                        if (lastParenIndex > -1) {
                            const linkLen = (0 === cap[0].indexOf("!") ? 5 : 4) + cap[1].length + lastParenIndex;
                            cap[2] = cap[2].substring(0, lastParenIndex), cap[0] = cap[0].substring(0, linkLen).trim(), 
                            cap[3] = "";
                        }
                        src = src.substring(cap[0].length), this.inLink = !0, href = cap[2], this.options.pedantic ? (link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href)) ? (href = link[1], 
                        title = link[3]) : title = "" : title = cap[3] ? cap[3].slice(1, -1) : "", href = href.trim().replace(/^<([\s\S]*)>$/, "$1"), 
                        out += this.outputLink(cap, {
                            href: InlineLexer.escapes(href),
                            title: InlineLexer.escapes(title)
                        }), this.inLink = !1;
                    } else if ((cap = this.rules.reflink.exec(src)) || (cap = this.rules.nolink.exec(src))) {
                        if (src = src.substring(cap[0].length), link = (cap[2] || cap[1]).replace(/\s+/g, " "), 
                        !(link = this.links[link.toLowerCase()]) || !link.href) {
                            out += cap[0].charAt(0), src = cap[0].substring(1) + src;
                            continue;
                        }
                        this.inLink = !0, out += this.outputLink(cap, link), this.inLink = !1;
                    } else if (cap = this.rules.strong.exec(src)) src = src.substring(cap[0].length), 
                    out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1])); else if (cap = this.rules.em.exec(src)) src = src.substring(cap[0].length), 
                    out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1])); else if (cap = this.rules.code.exec(src)) src = src.substring(cap[0].length), 
                    out += this.renderer.codespan(escape(cap[2].trim(), !0)); else if (cap = this.rules.br.exec(src)) src = src.substring(cap[0].length), 
                    out += this.renderer.br(); else if (cap = this.rules.del.exec(src)) src = src.substring(cap[0].length), 
                    out += this.renderer.del(this.output(cap[1])); else if (cap = this.rules.autolink.exec(src)) src = src.substring(cap[0].length), 
                    href = "@" === cap[2] ? "mailto:" + (text = escape(this.mangle(cap[1]))) : text = escape(cap[1]), 
                    out += this.renderer.link(href, null, text); else if (this.inLink || !(cap = this.rules.url.exec(src))) {
                        if (cap = this.rules.text.exec(src)) src = src.substring(cap[0].length), this.inRawBlock ? out += this.renderer.text(this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]) : out += this.renderer.text(escape(this.smartypants(cap[0]))); else if (src) throw new Error("Infinite loop on byte: " + src.charCodeAt(0));
                    } else {
                        if ("@" === cap[2]) href = "mailto:" + (text = escape(cap[0])); else {
                            do {
                                prevCapZero = cap[0], cap[0] = this.rules._backpedal.exec(cap[0])[0];
                            } while (prevCapZero !== cap[0]);
                            text = escape(cap[0]), href = "www." === cap[1] ? "http://" + text : text;
                        }
                        src = src.substring(cap[0].length), out += this.renderer.link(href, null, text);
                    }
                    return out;
                }
                static escapes(text) {
                    return text ? text.replace(InlineLexer.rules._escapes, "$1") : text;
                }
                outputLink(cap, link) {
                    const href = link.href, title = link.title ? escape(link.title) : null;
                    return "!" !== cap[0].charAt(0) ? this.renderer.link(href, title, this.output(cap[1])) : this.renderer.image(href, title, escape(cap[1]));
                }
                smartypants(text) {
                    return this.options.smartypants ? text.replace(/---/g, "—").replace(/--/g, "–").replace(/(^|[-\u2014/(\[{"\s])'/g, "$1‘").replace(/'/g, "’").replace(/(^|[-\u2014/(\[{\u2018\s])"/g, "$1“").replace(/"/g, "”").replace(/\.{3}/g, "…") : text;
                }
                mangle(text) {
                    if (!this.options.mangle) return text;
                    const l = text.length;
                    let ch, out = "", i = 0;
                    for (;i < l; i++) ch = text.charCodeAt(i), Math.random() > .5 && (ch = "x" + ch.toString(16)), 
                    out += "&#" + ch + ";";
                    return out;
                }
            };
        },
        "./node_modules/marked/src/Lexer.js": function(module, exports, __webpack_require__) {
            const {defaults: defaults} = __webpack_require__("./node_modules/marked/src/defaults.js"), {block: block} = __webpack_require__("./node_modules/marked/src/rules.js"), {rtrim: rtrim, splitCells: splitCells, escape: escape} = __webpack_require__("./node_modules/marked/src/helpers.js");
            module.exports = class Lexer {
                constructor(options) {
                    this.tokens = [], this.tokens.links = Object.create(null), this.options = options || defaults, 
                    this.rules = block.normal, this.options.pedantic ? this.rules = block.pedantic : this.options.gfm && (this.rules = block.gfm);
                }
                static get rules() {
                    return block;
                }
                static lex(src, options) {
                    return new Lexer(options).lex(src);
                }
                lex(src) {
                    return src = src.replace(/\r\n|\r/g, "\n").replace(/\t/g, "    "), this.token(src, !0);
                }
                token(src, top) {
                    let next, loose, cap, bull, b, item, listStart, listItems, t, space, i, tag, l, isordered, istask, ischecked;
                    for (src = src.replace(/^ +$/gm, ""); src; ) if ((cap = this.rules.newline.exec(src)) && (src = src.substring(cap[0].length), 
                    cap[0].length > 1 && this.tokens.push({
                        type: "space"
                    })), cap = this.rules.code.exec(src)) {
                        const lastToken = this.tokens[this.tokens.length - 1];
                        src = src.substring(cap[0].length), lastToken && "paragraph" === lastToken.type ? lastToken.text += "\n" + cap[0].trimRight() : (cap = cap[0].replace(/^ {4}/gm, ""), 
                        this.tokens.push({
                            type: "code",
                            codeBlockStyle: "indented",
                            text: this.options.pedantic ? cap : rtrim(cap, "\n")
                        }));
                    } else if (cap = this.rules.fences.exec(src)) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: "code",
                        lang: cap[2] ? cap[2].trim() : cap[2],
                        text: cap[3] || ""
                    }); else if (cap = this.rules.heading.exec(src)) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: "heading",
                        depth: cap[1].length,
                        text: cap[2]
                    }); else if ((cap = this.rules.nptable.exec(src)) && (item = {
                        type: "table",
                        header: splitCells(cap[1].replace(/^ *| *\| *$/g, "")),
                        align: cap[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
                        cells: cap[3] ? cap[3].replace(/\n$/, "").split("\n") : []
                    }).header.length === item.align.length) {
                        for (src = src.substring(cap[0].length), i = 0; i < item.align.length; i++) /^ *-+: *$/.test(item.align[i]) ? item.align[i] = "right" : /^ *:-+: *$/.test(item.align[i]) ? item.align[i] = "center" : /^ *:-+ *$/.test(item.align[i]) ? item.align[i] = "left" : item.align[i] = null;
                        for (i = 0; i < item.cells.length; i++) item.cells[i] = splitCells(item.cells[i], item.header.length);
                        this.tokens.push(item);
                    } else if (cap = this.rules.hr.exec(src)) src = src.substring(cap[0].length), this.tokens.push({
                        type: "hr"
                    }); else if (cap = this.rules.blockquote.exec(src)) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: "blockquote_start"
                    }), cap = cap[0].replace(/^ *> ?/gm, ""), this.token(cap, top), this.tokens.push({
                        type: "blockquote_end"
                    }); else if (cap = this.rules.list.exec(src)) {
                        for (src = src.substring(cap[0].length), listStart = {
                            type: "list_start",
                            ordered: isordered = (bull = cap[2]).length > 1,
                            start: isordered ? +bull : "",
                            loose: !1
                        }, this.tokens.push(listStart), listItems = [], next = !1, l = (cap = cap[0].match(this.rules.item)).length, 
                        i = 0; i < l; i++) space = (item = cap[i]).length, ~(item = item.replace(/^ *([*+-]|\d+\.) */, "")).indexOf("\n ") && (space -= item.length, 
                        item = this.options.pedantic ? item.replace(/^ {1,4}/gm, "") : item.replace(new RegExp("^ {1," + space + "}", "gm"), "")), 
                        i !== l - 1 && (b = block.bullet.exec(cap[i + 1])[0], (bull.length > 1 ? 1 === b.length : b.length > 1 || this.options.smartLists && b !== bull) && (src = cap.slice(i + 1).join("\n") + src, 
                        i = l - 1)), loose = next || /\n\n(?!\s*$)/.test(item), i !== l - 1 && (next = "\n" === item.charAt(item.length - 1), 
                        loose || (loose = next)), loose && (listStart.loose = !0), ischecked = void 0, (istask = /^\[[ xX]\] /.test(item)) && (ischecked = " " !== item[1], 
                        item = item.replace(/^\[[ xX]\] +/, "")), t = {
                            type: "list_item_start",
                            task: istask,
                            checked: ischecked,
                            loose: loose
                        }, listItems.push(t), this.tokens.push(t), this.token(item, !1), this.tokens.push({
                            type: "list_item_end"
                        });
                        if (listStart.loose) for (l = listItems.length, i = 0; i < l; i++) listItems[i].loose = !0;
                        this.tokens.push({
                            type: "list_end"
                        });
                    } else if (cap = this.rules.html.exec(src)) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: this.options.sanitize ? "paragraph" : "html",
                        pre: !this.options.sanitizer && ("pre" === cap[1] || "script" === cap[1] || "style" === cap[1]),
                        text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]
                    }); else if (top && (cap = this.rules.def.exec(src))) src = src.substring(cap[0].length), 
                    cap[3] && (cap[3] = cap[3].substring(1, cap[3].length - 1)), tag = cap[1].toLowerCase().replace(/\s+/g, " "), 
                    this.tokens.links[tag] || (this.tokens.links[tag] = {
                        href: cap[2],
                        title: cap[3]
                    }); else if ((cap = this.rules.table.exec(src)) && (item = {
                        type: "table",
                        header: splitCells(cap[1].replace(/^ *| *\| *$/g, "")),
                        align: cap[2].replace(/^ *|\| *$/g, "").split(/ *\| */),
                        cells: cap[3] ? cap[3].replace(/\n$/, "").split("\n") : []
                    }).header.length === item.align.length) {
                        for (src = src.substring(cap[0].length), i = 0; i < item.align.length; i++) /^ *-+: *$/.test(item.align[i]) ? item.align[i] = "right" : /^ *:-+: *$/.test(item.align[i]) ? item.align[i] = "center" : /^ *:-+ *$/.test(item.align[i]) ? item.align[i] = "left" : item.align[i] = null;
                        for (i = 0; i < item.cells.length; i++) item.cells[i] = splitCells(item.cells[i].replace(/^ *\| *| *\| *$/g, ""), item.header.length);
                        this.tokens.push(item);
                    } else if (cap = this.rules.lheading.exec(src)) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: "heading",
                        depth: "=" === cap[2].charAt(0) ? 1 : 2,
                        text: cap[1]
                    }); else if (top && (cap = this.rules.paragraph.exec(src))) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: "paragraph",
                        text: "\n" === cap[1].charAt(cap[1].length - 1) ? cap[1].slice(0, -1) : cap[1]
                    }); else if (cap = this.rules.text.exec(src)) src = src.substring(cap[0].length), 
                    this.tokens.push({
                        type: "text",
                        text: cap[0]
                    }); else if (src) throw new Error("Infinite loop on byte: " + src.charCodeAt(0));
                    return this.tokens;
                }
            };
        },
        "./node_modules/marked/src/Parser.js": function(module, exports, __webpack_require__) {
            const Renderer = __webpack_require__("./node_modules/marked/src/Renderer.js"), Slugger = __webpack_require__("./node_modules/marked/src/Slugger.js"), InlineLexer = __webpack_require__("./node_modules/marked/src/InlineLexer.js"), TextRenderer = __webpack_require__("./node_modules/marked/src/TextRenderer.js"), {defaults: defaults} = __webpack_require__("./node_modules/marked/src/defaults.js"), {merge: merge, unescape: unescape} = __webpack_require__("./node_modules/marked/src/helpers.js");
            module.exports = class Parser {
                constructor(options) {
                    this.tokens = [], this.token = null, this.options = options || defaults, this.options.renderer = this.options.renderer || new Renderer(), 
                    this.renderer = this.options.renderer, this.renderer.options = this.options, this.slugger = new Slugger();
                }
                static parse(tokens, options) {
                    return new Parser(options).parse(tokens);
                }
                parse(tokens) {
                    this.inline = new InlineLexer(tokens.links, this.options), this.inlineText = new InlineLexer(tokens.links, merge({}, this.options, {
                        renderer: new TextRenderer()
                    })), this.tokens = tokens.reverse();
                    let out = "";
                    for (;this.next(); ) out += this.tok();
                    return out;
                }
                next() {
                    return this.token = this.tokens.pop(), this.token;
                }
                peek() {
                    return this.tokens[this.tokens.length - 1] || 0;
                }
                parseText() {
                    let body = this.token.text;
                    for (;"text" === this.peek().type; ) body += "\n" + this.next().text;
                    return this.inline.output(body);
                }
                tok() {
                    let body = "";
                    switch (this.token.type) {
                      case "space":
                        return "";

                      case "hr":
                        return this.renderer.hr();

                      case "heading":
                        return this.renderer.heading(this.inline.output(this.token.text), this.token.depth, unescape(this.inlineText.output(this.token.text)), this.slugger);

                      case "code":
                        return this.renderer.code(this.token.text, this.token.lang, this.token.escaped);

                      case "table":
                        {
                            let i, row, cell, j, header = "";
                            for (cell = "", i = 0; i < this.token.header.length; i++) cell += this.renderer.tablecell(this.inline.output(this.token.header[i]), {
                                header: !0,
                                align: this.token.align[i]
                            });
                            for (header += this.renderer.tablerow(cell), i = 0; i < this.token.cells.length; i++) {
                                for (row = this.token.cells[i], cell = "", j = 0; j < row.length; j++) cell += this.renderer.tablecell(this.inline.output(row[j]), {
                                    header: !1,
                                    align: this.token.align[j]
                                });
                                body += this.renderer.tablerow(cell);
                            }
                            return this.renderer.table(header, body);
                        }

                      case "blockquote_start":
                        for (body = ""; "blockquote_end" !== this.next().type; ) body += this.tok();
                        return this.renderer.blockquote(body);

                      case "list_start":
                        {
                            body = "";
                            const ordered = this.token.ordered, start = this.token.start;
                            for (;"list_end" !== this.next().type; ) body += this.tok();
                            return this.renderer.list(body, ordered, start);
                        }

                      case "list_item_start":
                        {
                            body = "";
                            const loose = this.token.loose, checked = this.token.checked, task = this.token.task;
                            if (this.token.task) if (loose) if ("text" === this.peek().type) {
                                const nextToken = this.peek();
                                nextToken.text = this.renderer.checkbox(checked) + " " + nextToken.text;
                            } else this.tokens.push({
                                type: "text",
                                text: this.renderer.checkbox(checked)
                            }); else body += this.renderer.checkbox(checked);
                            for (;"list_item_end" !== this.next().type; ) body += loose || "text" !== this.token.type ? this.tok() : this.parseText();
                            return this.renderer.listitem(body, task, checked);
                        }

                      case "html":
                        return this.renderer.html(this.token.text);

                      case "paragraph":
                        return this.renderer.paragraph(this.inline.output(this.token.text));

                      case "text":
                        return this.renderer.paragraph(this.parseText());

                      default:
                        {
                            const errMsg = 'Token with "' + this.token.type + '" type was not found.';
                            if (!this.options.silent) throw new Error(errMsg);
                            console.log(errMsg);
                        }
                    }
                }
            };
        },
        "./node_modules/marked/src/Renderer.js": function(module, exports, __webpack_require__) {
            const {defaults: defaults} = __webpack_require__("./node_modules/marked/src/defaults.js"), {cleanUrl: cleanUrl, escape: escape} = __webpack_require__("./node_modules/marked/src/helpers.js");
            module.exports = class {
                constructor(options) {
                    this.options = options || defaults;
                }
                code(code, infostring, escaped) {
                    const lang = (infostring || "").match(/\S*/)[0];
                    if (this.options.highlight) {
                        const out = this.options.highlight(code, lang);
                        null != out && out !== code && (escaped = !0, code = out);
                    }
                    return lang ? '<pre><code class="' + this.options.langPrefix + escape(lang, !0) + '">' + (escaped ? code : escape(code, !0)) + "</code></pre>\n" : "<pre><code>" + (escaped ? code : escape(code, !0)) + "</code></pre>";
                }
                blockquote(quote) {
                    return "<blockquote>\n" + quote + "</blockquote>\n";
                }
                html(html) {
                    return html;
                }
                heading(text, level, raw, slugger) {
                    return this.options.headerIds ? "<h" + level + ' id="' + this.options.headerPrefix + slugger.slug(raw) + '">' + text + "</h" + level + ">\n" : "<h" + level + ">" + text + "</h" + level + ">\n";
                }
                hr() {
                    return this.options.xhtml ? "<hr/>\n" : "<hr>\n";
                }
                list(body, ordered, start) {
                    const type = ordered ? "ol" : "ul";
                    return "<" + type + (ordered && 1 !== start ? ' start="' + start + '"' : "") + ">\n" + body + "</" + type + ">\n";
                }
                listitem(text) {
                    return "<li>" + text + "</li>\n";
                }
                checkbox(checked) {
                    return "<input " + (checked ? 'checked="" ' : "") + 'disabled="" type="checkbox"' + (this.options.xhtml ? " /" : "") + "> ";
                }
                paragraph(text) {
                    return "<p>" + text + "</p>\n";
                }
                table(header, body) {
                    return body && (body = "<tbody>" + body + "</tbody>"), "<table>\n<thead>\n" + header + "</thead>\n" + body + "</table>\n";
                }
                tablerow(content) {
                    return "<tr>\n" + content + "</tr>\n";
                }
                tablecell(content, flags) {
                    const type = flags.header ? "th" : "td";
                    return (flags.align ? "<" + type + ' align="' + flags.align + '">' : "<" + type + ">") + content + "</" + type + ">\n";
                }
                strong(text) {
                    return "<strong>" + text + "</strong>";
                }
                em(text) {
                    return "<em>" + text + "</em>";
                }
                codespan(text) {
                    return "<code>" + text + "</code>";
                }
                br() {
                    return this.options.xhtml ? "<br/>" : "<br>";
                }
                del(text) {
                    return "<del>" + text + "</del>";
                }
                link(href, title, text) {
                    if (null === (href = cleanUrl(this.options.sanitize, this.options.baseUrl, href))) return text;
                    let out = '<a href="' + escape(href) + '"';
                    return title && (out += ' title="' + title + '"'), out += ">" + text + "</a>";
                }
                image(href, title, text) {
                    if (null === (href = cleanUrl(this.options.sanitize, this.options.baseUrl, href))) return text;
                    let out = '<img src="' + href + '" alt="' + text + '"';
                    return title && (out += ' title="' + title + '"'), out += this.options.xhtml ? "/>" : ">";
                }
                text(text) {
                    return text;
                }
            };
        },
        "./node_modules/marked/src/Slugger.js": function(module, exports) {
            module.exports = class {
                constructor() {
                    this.seen = {};
                }
                slug(value) {
                    let slug = value.toLowerCase().trim().replace(/<[!\/a-z].*?>/gi, "").replace(/[\u2000-\u206F\u2E00-\u2E7F\\'!"#$%&()*+,./:;<=>?@[\]^`{|}~]/g, "").replace(/\s/g, "-");
                    if (this.seen.hasOwnProperty(slug)) {
                        const originalSlug = slug;
                        do {
                            this.seen[originalSlug]++, slug = originalSlug + "-" + this.seen[originalSlug];
                        } while (this.seen.hasOwnProperty(slug));
                    }
                    return this.seen[slug] = 0, slug;
                }
            };
        },
        "./node_modules/marked/src/TextRenderer.js": function(module, exports) {
            module.exports = class {
                strong(text) {
                    return text;
                }
                em(text) {
                    return text;
                }
                codespan(text) {
                    return text;
                }
                del(text) {
                    return text;
                }
                html(text) {
                    return text;
                }
                text(text) {
                    return text;
                }
                link(href, title, text) {
                    return "" + text;
                }
                image(href, title, text) {
                    return "" + text;
                }
                br() {
                    return "";
                }
            };
        },
        "./node_modules/marked/src/defaults.js": function(module, exports) {
            function getDefaults() {
                return {
                    baseUrl: null,
                    breaks: !1,
                    gfm: !0,
                    headerIds: !0,
                    headerPrefix: "",
                    highlight: null,
                    langPrefix: "language-",
                    mangle: !0,
                    pedantic: !1,
                    renderer: null,
                    sanitize: !1,
                    sanitizer: null,
                    silent: !1,
                    smartLists: !1,
                    smartypants: !1,
                    xhtml: !1
                };
            }
            module.exports = {
                defaults: {
                    baseUrl: null,
                    breaks: !1,
                    gfm: !0,
                    headerIds: !0,
                    headerPrefix: "",
                    highlight: null,
                    langPrefix: "language-",
                    mangle: !0,
                    pedantic: !1,
                    renderer: null,
                    sanitize: !1,
                    sanitizer: null,
                    silent: !1,
                    smartLists: !1,
                    smartypants: !1,
                    xhtml: !1
                },
                getDefaults: getDefaults,
                changeDefaults: function(newDefaults) {
                    module.exports.defaults = newDefaults;
                }
            };
        },
        "./node_modules/marked/src/helpers.js": function(module, exports) {
            const escapeTest = /[&<>"']/, escapeReplace = /[&<>"']/g, escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/, escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g, escapeReplacements = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;"
            }, getEscapeReplacement = ch => escapeReplacements[ch];
            const unescapeTest = /&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/gi;
            function unescape(html) {
                return html.replace(unescapeTest, (_, n) => "colon" === (n = n.toLowerCase()) ? ":" : "#" === n.charAt(0) ? "x" === n.charAt(1) ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1)) : "");
            }
            const caret = /(^|[^\[])\^/g;
            const nonWordAndColonTest = /[^\w:]/g, originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;
            const baseUrls = {}, justDomain = /^[^:]+:\/*[^/]*$/, protocol = /^([^:]+:)[\s\S]*$/, domain = /^([^:]+:\/*[^/]*)[\s\S]*$/;
            function resolveUrl(base, href) {
                baseUrls[" " + base] || (justDomain.test(base) ? baseUrls[" " + base] = base + "/" : baseUrls[" " + base] = rtrim(base, "/", !0));
                const relativeBase = -1 === (base = baseUrls[" " + base]).indexOf(":");
                return "//" === href.substring(0, 2) ? relativeBase ? href : base.replace(protocol, "$1") + href : "/" === href.charAt(0) ? relativeBase ? href : base.replace(domain, "$1") + href : base + href;
            }
            function rtrim(str, c, invert) {
                const l = str.length;
                if (0 === l) return "";
                let suffLen = 0;
                for (;suffLen < l; ) {
                    const currChar = str.charAt(l - suffLen - 1);
                    if (currChar !== c || invert) {
                        if (currChar === c || !invert) break;
                        suffLen++;
                    } else suffLen++;
                }
                return str.substr(0, l - suffLen);
            }
            module.exports = {
                escape: function(html, encode) {
                    if (encode) {
                        if (escapeTest.test(html)) return html.replace(escapeReplace, getEscapeReplacement);
                    } else if (escapeTestNoEncode.test(html)) return html.replace(escapeReplaceNoEncode, getEscapeReplacement);
                    return html;
                },
                unescape: unescape,
                edit: function(regex, opt) {
                    regex = regex.source || regex, opt = opt || "";
                    const obj = {
                        replace: (name, val) => (val = (val = val.source || val).replace(caret, "$1"), regex = regex.replace(name, val), 
                        obj),
                        getRegex: () => new RegExp(regex, opt)
                    };
                    return obj;
                },
                cleanUrl: function(sanitize, base, href) {
                    if (sanitize) {
                        let prot;
                        try {
                            prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, "").toLowerCase();
                        } catch (e) {
                            return null;
                        }
                        if (0 === prot.indexOf("javascript:") || 0 === prot.indexOf("vbscript:") || 0 === prot.indexOf("data:")) return null;
                    }
                    base && !originIndependentUrl.test(href) && (href = resolveUrl(base, href));
                    try {
                        href = encodeURI(href).replace(/%25/g, "%");
                    } catch (e) {
                        return null;
                    }
                    return href;
                },
                resolveUrl: resolveUrl,
                noopTest: {
                    exec: function() {}
                },
                merge: function(obj) {
                    let target, key, i = 1;
                    for (;i < arguments.length; i++) for (key in target = arguments[i]) Object.prototype.hasOwnProperty.call(target, key) && (obj[key] = target[key]);
                    return obj;
                },
                splitCells: function(tableRow, count) {
                    const cells = tableRow.replace(/\|/g, (match, offset, str) => {
                        let escaped = !1, curr = offset;
                        for (;--curr >= 0 && "\\" === str[curr]; ) escaped = !escaped;
                        return escaped ? "|" : " |";
                    }).split(/ \|/);
                    let i = 0;
                    if (cells.length > count) cells.splice(count); else for (;cells.length < count; ) cells.push("");
                    for (;i < cells.length; i++) cells[i] = cells[i].trim().replace(/\\\|/g, "|");
                    return cells;
                },
                rtrim: rtrim,
                findClosingBracket: function(str, b) {
                    if (-1 === str.indexOf(b[1])) return -1;
                    const l = str.length;
                    let level = 0, i = 0;
                    for (;i < l; i++) if ("\\" === str[i]) i++; else if (str[i] === b[0]) level++; else if (str[i] === b[1] && --level < 0) return i;
                    return -1;
                },
                checkSanitizeDeprecation: function(opt) {
                    opt && opt.sanitize && !opt.silent && console.warn("marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options");
                }
            };
        },
        "./node_modules/marked/src/marked.js": function(module, exports, __webpack_require__) {
            const Lexer = __webpack_require__("./node_modules/marked/src/Lexer.js"), Parser = __webpack_require__("./node_modules/marked/src/Parser.js"), Renderer = __webpack_require__("./node_modules/marked/src/Renderer.js"), TextRenderer = __webpack_require__("./node_modules/marked/src/TextRenderer.js"), InlineLexer = __webpack_require__("./node_modules/marked/src/InlineLexer.js"), Slugger = __webpack_require__("./node_modules/marked/src/Slugger.js"), {merge: merge, checkSanitizeDeprecation: checkSanitizeDeprecation, escape: escape} = __webpack_require__("./node_modules/marked/src/helpers.js"), {getDefaults: getDefaults, changeDefaults: changeDefaults, defaults: defaults} = __webpack_require__("./node_modules/marked/src/defaults.js");
            function marked(src, opt, callback) {
                if (void 0 === src || null === src) throw new Error("marked(): input parameter is undefined or null");
                if ("string" != typeof src) throw new Error("marked(): input parameter is of type " + Object.prototype.toString.call(src) + ", string expected");
                if (callback || "function" == typeof opt) {
                    callback || (callback = opt, opt = null), opt = merge({}, marked.defaults, opt || {}), 
                    checkSanitizeDeprecation(opt);
                    const highlight = opt.highlight;
                    let tokens, pending, i = 0;
                    try {
                        tokens = Lexer.lex(src, opt);
                    } catch (e) {
                        return callback(e);
                    }
                    pending = tokens.length;
                    const done = function(err) {
                        if (err) return opt.highlight = highlight, callback(err);
                        let out;
                        try {
                            out = Parser.parse(tokens, opt);
                        } catch (e) {
                            err = e;
                        }
                        return opt.highlight = highlight, err ? callback(err) : callback(null, out);
                    };
                    if (!highlight || highlight.length < 3) return done();
                    if (delete opt.highlight, !pending) return done();
                    for (;i < tokens.length; i++) !function(token) {
                        "code" !== token.type ? --pending || done() : highlight(token.text, token.lang, function(err, code) {
                            return err ? done(err) : null == code || code === token.text ? --pending || done() : (token.text = code, 
                            token.escaped = !0, void (--pending || done()));
                        });
                    }(tokens[i]);
                } else try {
                    return opt = merge({}, marked.defaults, opt || {}), checkSanitizeDeprecation(opt), 
                    Parser.parse(Lexer.lex(src, opt), opt);
                } catch (e) {
                    if (e.message += "\nPlease report this to https://github.com/markedjs/marked.", 
                    (opt || marked.defaults).silent) return "<p>An error occurred:</p><pre>" + escape(e.message + "", !0) + "</pre>";
                    throw e;
                }
            }
            marked.options = marked.setOptions = function(opt) {
                return merge(marked.defaults, opt), changeDefaults(marked.defaults), marked;
            }, marked.getDefaults = getDefaults, marked.defaults = defaults, marked.Parser = Parser, 
            marked.parser = Parser.parse, marked.Renderer = Renderer, marked.TextRenderer = TextRenderer, 
            marked.Lexer = Lexer, marked.lexer = Lexer.lex, marked.InlineLexer = InlineLexer, 
            marked.inlineLexer = InlineLexer.output, marked.Slugger = Slugger, marked.parse = marked, 
            module.exports = marked;
        },
        "./node_modules/marked/src/rules.js": function(module, exports, __webpack_require__) {
            const {noopTest: noopTest, edit: edit, merge: merge} = __webpack_require__("./node_modules/marked/src/helpers.js"), block = {
                newline: /^\n+/,
                code: /^( {4}[^\n]+\n*)+/,
                fences: /^ {0,3}(`{3,}(?=[^`\n]*\n)|~{3,})([^\n]*)\n(?:|([\s\S]*?)\n)(?: {0,3}\1[~`]* *(?:\n+|$)|$)/,
                hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
                heading: /^ {0,3}(#{1,6}) +([^\n]*?)(?: +#+)? *(?:\n+|$)/,
                blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
                list: /^( {0,3})(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
                html: "^ {0,3}(?:<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)|comment[^\\n]*(\\n+|$)|<\\?[\\s\\S]*?\\?>\\n*|<![A-Z][\\s\\S]*?>\\n*|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$)|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=[ \\t]*(?:\\n|$))[\\s\\S]*?(?:\\n{2,}|$))",
                def: /^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,
                nptable: noopTest,
                table: noopTest,
                lheading: /^([^\n]+)\n {0,3}(=+|-+) *(?:\n+|$)/,
                _paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading|blockquote|fences|list|html)[^\n]+)*)/,
                text: /^[^\n]+/,
                _label: /(?!\s*\])(?:\\[\[\]]|[^\[\]])+/,
                _title: /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/
            };
            block.def = edit(block.def).replace("label", block._label).replace("title", block._title).getRegex(), 
            block.bullet = /(?:[*+-]|\d{1,9}\.)/, block.item = /^( *)(bull) ?[^\n]*(?:\n(?!\1bull ?)[^\n]*)*/, 
            block.item = edit(block.item, "gm").replace(/bull/g, block.bullet).getRegex(), block.list = edit(block.list).replace(/bull/g, block.bullet).replace("hr", "\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))").replace("def", "\\n+(?=" + block.def.source + ")").getRegex(), 
            block._tag = "address|article|aside|base|basefont|blockquote|body|caption|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr|track|ul", 
            block._comment = /<!--(?!-?>)[\s\S]*?-->/, block.html = edit(block.html, "i").replace("comment", block._comment).replace("tag", block._tag).replace("attribute", / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/).getRegex(), 
            block.paragraph = edit(block._paragraph).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("|lheading", "").replace("blockquote", " {0,3}>").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag", block._tag).getRegex(), 
            block.blockquote = edit(block.blockquote).replace("paragraph", block.paragraph).getRegex(), 
            block.normal = merge({}, block), block.gfm = merge({}, block.normal, {
                nptable: "^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)",
                table: "^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n *((?:(?!\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\n|$))*)\\n*|$)"
            }), block.gfm.nptable = edit(block.gfm.nptable).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag", block._tag).getRegex(), 
            block.gfm.table = edit(block.gfm.table).replace("hr", block.hr).replace("heading", " {0,3}#{1,6} ").replace("blockquote", " {0,3}>").replace("code", " {4}[^\\n]").replace("fences", " {0,3}(?:`{3,}(?=[^`\\n]*\\n)|~{3,})[^\\n]*\\n").replace("list", " {0,3}(?:[*+-]|1[.)]) ").replace("html", "</?(?:tag)(?: +|\\n|/?>)|<(?:script|pre|style|!--)").replace("tag", block._tag).getRegex(), 
            block.pedantic = merge({}, block.normal, {
                html: edit("^ *(?:comment *(?:\\n|\\s*$)|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)|<tag(?:\"[^\"]*\"|'[^']*'|\\s[^'\"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))").replace("comment", block._comment).replace(/tag/g, "(?!(?:a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)\\b)\\w+(?!:|[^\\w\\s@]*@)\\b").getRegex(),
                def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/,
                heading: /^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,
                fences: noopTest,
                paragraph: edit(block.normal._paragraph).replace("hr", block.hr).replace("heading", " *#{1,6} *[^\n]").replace("lheading", block.lheading).replace("blockquote", " {0,3}>").replace("|fences", "").replace("|list", "").replace("|html", "").getRegex()
            });
            const inline = {
                escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
                autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
                url: noopTest,
                tag: "^comment|^</[a-zA-Z][\\w:-]*\\s*>|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>|^<\\?[\\s\\S]*?\\?>|^<![a-zA-Z]+\\s[\\s\\S]*?>|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>",
                link: /^!?\[(label)\]\(\s*(href)(?:\s+(title))?\s*\)/,
                reflink: /^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,
                nolink: /^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,
                strong: /^__([^\s_])__(?!_)|^\*\*([^\s*])\*\*(?!\*)|^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)/,
                em: /^_([^\s_])_(?!_)|^\*([^\s*<\[])\*(?!\*)|^_([^\s<][\s\S]*?[^\s_])_(?!_|[^\spunctuation])|^_([^\s_<][\s\S]*?[^\s])_(?!_|[^\spunctuation])|^\*([^\s<"][\s\S]*?[^\s\*])\*(?!\*|[^\spunctuation])|^\*([^\s*"<\[][\s\S]*?[^\s])\*(?!\*)/,
                code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
                br: /^( {2,}|\\)\n(?!\s*$)/,
                del: noopTest,
                text: /^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*]|\b_|$)|[^ ](?= {2,}\n))|(?= {2,}\n))/,
                _punctuation: "!\"#$%&'()*+,\\-./:;<=>?@\\[^_{|}~"
            };
            inline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex(), 
            inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g, inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/, 
            inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/, 
            inline.autolink = edit(inline.autolink).replace("scheme", inline._scheme).replace("email", inline._email).getRegex(), 
            inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/, 
            inline.tag = edit(inline.tag).replace("comment", block._comment).replace("attribute", inline._attribute).getRegex(), 
            inline._label = /(?:\[[^\[\]]*\]|\\.|`[^`]*`|[^\[\]\\`])*?/, inline._href = /<(?:\\[<>]?|[^\s<>\\])*>|[^\s\x00-\x1f]*/, 
            inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/, inline.link = edit(inline.link).replace("label", inline._label).replace("href", inline._href).replace("title", inline._title).getRegex(), 
            inline.reflink = edit(inline.reflink).replace("label", inline._label).getRegex(), 
            inline.normal = merge({}, inline), inline.pedantic = merge({}, inline.normal, {
                strong: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
                em: /^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,
                link: edit(/^!?\[(label)\]\((.*?)\)/).replace("label", inline._label).getRegex(),
                reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/).replace("label", inline._label).getRegex()
            }), inline.gfm = merge({}, inline.normal, {
                escape: edit(inline.escape).replace("])", "~|])").getRegex(),
                _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
                url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
                _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
                del: /^~+(?=\S)([\s\S]*?\S)~+/,
                text: /^(`+|[^`])(?:[\s\S]*?(?:(?=[\\<!\[`*~]|\b_|https?:\/\/|ftp:\/\/|www\.|$)|[^ ](?= {2,}\n)|[^a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-](?=[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))|(?= {2,}\n|[a-zA-Z0-9.!#$%&'*+\/=?_`{\|}~-]+@))/
            }), inline.gfm.url = edit(inline.gfm.url, "i").replace("email", inline.gfm._extended_email).getRegex(), 
            inline.breaks = merge({}, inline.gfm, {
                br: edit(inline.br).replace("{2,}", "*").getRegex(),
                text: edit(inline.gfm.text).replace("\\b_", "\\b_| {2,}\\n").replace(/\{2,\}/g, "*").getRegex()
            }), module.exports = {
                block: block,
                inline: inline
            };
        },
        "./node_modules/object-assign/index.js": function(module, exports, __webpack_require__) {
            "use strict";
            var getOwnPropertySymbols = Object.getOwnPropertySymbols, hasOwnProperty = Object.prototype.hasOwnProperty, propIsEnumerable = Object.prototype.propertyIsEnumerable;
            module.exports = function() {
                try {
                    if (!Object.assign) return !1;
                    var test1 = new String("abc");
                    if (test1[5] = "de", "5" === Object.getOwnPropertyNames(test1)[0]) return !1;
                    for (var test2 = {}, i = 0; i < 10; i++) test2["_" + String.fromCharCode(i)] = i;
                    if ("0123456789" !== Object.getOwnPropertyNames(test2).map(function(n) {
                        return test2[n];
                    }).join("")) return !1;
                    var test3 = {};
                    return "abcdefghijklmnopqrst".split("").forEach(function(letter) {
                        test3[letter] = letter;
                    }), "abcdefghijklmnopqrst" === Object.keys(Object.assign({}, test3)).join("");
                } catch (err) {
                    return !1;
                }
            }() ? Object.assign : function(target, source) {
                for (var from, symbols, to = function(val) {
                    if (null === val || void 0 === val) throw new TypeError("Object.assign cannot be called with null or undefined");
                    return Object(val);
                }(target), s = 1; s < arguments.length; s++) {
                    for (var key in from = Object(arguments[s])) hasOwnProperty.call(from, key) && (to[key] = from[key]);
                    if (getOwnPropertySymbols) {
                        symbols = getOwnPropertySymbols(from);
                        for (var i = 0; i < symbols.length; i++) propIsEnumerable.call(from, symbols[i]) && (to[symbols[i]] = from[symbols[i]]);
                    }
                }
                return to;
            };
        },
        "./node_modules/react-dom/cjs/react-dom.production.min.js": function(module, exports, __webpack_require__) {
            "use strict";
            var aa = __webpack_require__("./node_modules/react/index.js"), n = __webpack_require__("./node_modules/object-assign/index.js"), q = __webpack_require__("./node_modules/scheduler/index.js");
            function u(a) {
                for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
                return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
            }
            if (!aa) throw Error(u(227));
            var ba = null, ca = {};
            function da() {
                if (ba) for (var a in ca) {
                    var b = ca[a], c = ba.indexOf(a);
                    if (!(-1 < c)) throw Error(u(96, a));
                    if (!ea[c]) {
                        if (!b.extractEvents) throw Error(u(97, a));
                        for (var d in ea[c] = b, c = b.eventTypes) {
                            var e = void 0, f = c[d], g = b, h = d;
                            if (fa.hasOwnProperty(h)) throw Error(u(99, h));
                            fa[h] = f;
                            var k = f.phasedRegistrationNames;
                            if (k) {
                                for (e in k) k.hasOwnProperty(e) && ha(k[e], g, h);
                                e = !0;
                            } else f.registrationName ? (ha(f.registrationName, g, h), e = !0) : e = !1;
                            if (!e) throw Error(u(98, d, a));
                        }
                    }
                }
            }
            function ha(a, b, c) {
                if (ia[a]) throw Error(u(100, a));
                ia[a] = b, ja[a] = b.eventTypes[c].dependencies;
            }
            var ea = [], fa = {}, ia = {}, ja = {};
            var la = !1, ma = null, na = !1, oa = null, pa = {
                onError: function(a) {
                    la = !0, ma = a;
                }
            };
            function qa(a, b, c, d, e, f, g, h, k) {
                la = !1, ma = null, function(a, b, c, d, e, f, g, h, k) {
                    var l = Array.prototype.slice.call(arguments, 3);
                    try {
                        b.apply(c, l);
                    } catch (m) {
                        this.onError(m);
                    }
                }.apply(pa, arguments);
            }
            var sa = null, ua = null, va = null;
            function wa(a, b, c) {
                var d = a.type || "unknown-event";
                a.currentTarget = va(c), function(a, b, c, d, e, f, g, h, k) {
                    if (qa.apply(this, arguments), la) {
                        if (!la) throw Error(u(198));
                        var l = ma;
                        la = !1, ma = null, na || (na = !0, oa = l);
                    }
                }(d, b, void 0, a), a.currentTarget = null;
            }
            function xa(a, b) {
                if (null == b) throw Error(u(30));
                return null == a ? b : Array.isArray(a) ? Array.isArray(b) ? (a.push.apply(a, b), 
                a) : (a.push(b), a) : Array.isArray(b) ? [ a ].concat(b) : [ a, b ];
            }
            function ya(a, b, c) {
                Array.isArray(a) ? a.forEach(b, c) : a && b.call(c, a);
            }
            var za = null;
            function Aa(a) {
                if (a) {
                    var b = a._dispatchListeners, c = a._dispatchInstances;
                    if (Array.isArray(b)) for (var d = 0; d < b.length && !a.isPropagationStopped(); d++) wa(a, b[d], c[d]); else b && wa(a, b, c);
                    a._dispatchListeners = null, a._dispatchInstances = null, a.isPersistent() || a.constructor.release(a);
                }
            }
            function Ba(a) {
                if (null !== a && (za = xa(za, a)), a = za, za = null, a) {
                    if (ya(a, Aa), za) throw Error(u(95));
                    if (na) throw a = oa, na = !1, oa = null, a;
                }
            }
            var Ca = {
                injectEventPluginOrder: function(a) {
                    if (ba) throw Error(u(101));
                    ba = Array.prototype.slice.call(a), da();
                },
                injectEventPluginsByName: function(a) {
                    var c, b = !1;
                    for (c in a) if (a.hasOwnProperty(c)) {
                        var d = a[c];
                        if (!ca.hasOwnProperty(c) || ca[c] !== d) {
                            if (ca[c]) throw Error(u(102, c));
                            ca[c] = d, b = !0;
                        }
                    }
                    b && da();
                }
            };
            function Da(a, b) {
                var c = a.stateNode;
                if (!c) return null;
                var d = sa(c);
                if (!d) return null;
                c = d[b];
                a: switch (b) {
                  case "onClick":
                  case "onClickCapture":
                  case "onDoubleClick":
                  case "onDoubleClickCapture":
                  case "onMouseDown":
                  case "onMouseDownCapture":
                  case "onMouseMove":
                  case "onMouseMoveCapture":
                  case "onMouseUp":
                  case "onMouseUpCapture":
                    (d = !d.disabled) || (d = !("button" === (a = a.type) || "input" === a || "select" === a || "textarea" === a)), 
                    a = !d;
                    break a;

                  default:
                    a = !1;
                }
                if (a) return null;
                if (c && "function" != typeof c) throw Error(u(231, b, typeof c));
                return c;
            }
            var Ea = aa.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;
            Ea.hasOwnProperty("ReactCurrentDispatcher") || (Ea.ReactCurrentDispatcher = {
                current: null
            }), Ea.hasOwnProperty("ReactCurrentBatchConfig") || (Ea.ReactCurrentBatchConfig = {
                suspense: null
            });
            var Fa = /^(.*)[\\\/]/, w = "function" == typeof Symbol && Symbol.for, Ga = w ? Symbol.for("react.element") : 60103, Ha = w ? Symbol.for("react.portal") : 60106, Ia = w ? Symbol.for("react.fragment") : 60107, Ja = w ? Symbol.for("react.strict_mode") : 60108, Ka = w ? Symbol.for("react.profiler") : 60114, La = w ? Symbol.for("react.provider") : 60109, Ma = w ? Symbol.for("react.context") : 60110, Na = w ? Symbol.for("react.concurrent_mode") : 60111, Oa = w ? Symbol.for("react.forward_ref") : 60112, Pa = w ? Symbol.for("react.suspense") : 60113, Qa = w ? Symbol.for("react.suspense_list") : 60120, Ra = w ? Symbol.for("react.memo") : 60115, Sa = w ? Symbol.for("react.lazy") : 60116;
            w && Symbol.for("react.fundamental"), w && Symbol.for("react.responder"), w && Symbol.for("react.scope");
            var Ta = "function" == typeof Symbol && Symbol.iterator;
            function Ua(a) {
                return null === a || "object" != typeof a ? null : "function" == typeof (a = Ta && a[Ta] || a["@@iterator"]) ? a : null;
            }
            function Wa(a) {
                if (null == a) return null;
                if ("function" == typeof a) return a.displayName || a.name || null;
                if ("string" == typeof a) return a;
                switch (a) {
                  case Ia:
                    return "Fragment";

                  case Ha:
                    return "Portal";

                  case Ka:
                    return "Profiler";

                  case Ja:
                    return "StrictMode";

                  case Pa:
                    return "Suspense";

                  case Qa:
                    return "SuspenseList";
                }
                if ("object" == typeof a) switch (a.$$typeof) {
                  case Ma:
                    return "Context.Consumer";

                  case La:
                    return "Context.Provider";

                  case Oa:
                    var b = a.render;
                    return b = b.displayName || b.name || "", a.displayName || ("" !== b ? "ForwardRef(" + b + ")" : "ForwardRef");

                  case Ra:
                    return Wa(a.type);

                  case Sa:
                    if (a = 1 === a._status ? a._result : null) return Wa(a);
                }
                return null;
            }
            function Xa(a) {
                var b = "";
                do {
                    a: switch (a.tag) {
                      case 3:
                      case 4:
                      case 6:
                      case 7:
                      case 10:
                      case 9:
                        var c = "";
                        break a;

                      default:
                        var d = a._debugOwner, e = a._debugSource, f = Wa(a.type);
                        c = null, d && (c = Wa(d.type)), d = f, f = "", e ? f = " (at " + e.fileName.replace(Fa, "") + ":" + e.lineNumber + ")" : c && (f = " (created by " + c + ")"), 
                        c = "\n    in " + (d || "Unknown") + f;
                    }
                    b += c, a = a.return;
                } while (a);
                return b;
            }
            var Ya = !("undefined" == typeof window || void 0 === window.document || void 0 === window.document.createElement), Za = null, $a = null, ab = null;
            function bb(a) {
                if (a = ua(a)) {
                    if ("function" != typeof Za) throw Error(u(280));
                    var b = sa(a.stateNode);
                    Za(a.stateNode, a.type, b);
                }
            }
            function cb(a) {
                $a ? ab ? ab.push(a) : ab = [ a ] : $a = a;
            }
            function db() {
                if ($a) {
                    var a = $a, b = ab;
                    if (ab = $a = null, bb(a), b) for (a = 0; a < b.length; a++) bb(b[a]);
                }
            }
            function eb(a, b) {
                return a(b);
            }
            function fb(a, b, c, d) {
                return a(b, c, d);
            }
            function gb() {}
            var hb = eb, ib = !1, jb = !1;
            function kb() {
                null === $a && null === ab || (gb(), db());
            }
            new Map();
            var lb = /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/, mb = Object.prototype.hasOwnProperty, nb = {}, ob = {};
            function B(a, b, c, d, e, f) {
                this.acceptsBooleans = 2 === b || 3 === b || 4 === b, this.attributeName = d, this.attributeNamespace = e, 
                this.mustUseProperty = c, this.propertyName = a, this.type = b, this.sanitizeURL = f;
            }
            var D = {};
            "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach(function(a) {
                D[a] = new B(a, 0, !1, a, null, !1);
            }), [ [ "acceptCharset", "accept-charset" ], [ "className", "class" ], [ "htmlFor", "for" ], [ "httpEquiv", "http-equiv" ] ].forEach(function(a) {
                var b = a[0];
                D[b] = new B(b, 1, !1, a[1], null, !1);
            }), [ "contentEditable", "draggable", "spellCheck", "value" ].forEach(function(a) {
                D[a] = new B(a, 2, !1, a.toLowerCase(), null, !1);
            }), [ "autoReverse", "externalResourcesRequired", "focusable", "preserveAlpha" ].forEach(function(a) {
                D[a] = new B(a, 2, !1, a, null, !1);
            }), "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach(function(a) {
                D[a] = new B(a, 3, !1, a.toLowerCase(), null, !1);
            }), [ "checked", "multiple", "muted", "selected" ].forEach(function(a) {
                D[a] = new B(a, 3, !0, a, null, !1);
            }), [ "capture", "download" ].forEach(function(a) {
                D[a] = new B(a, 4, !1, a, null, !1);
            }), [ "cols", "rows", "size", "span" ].forEach(function(a) {
                D[a] = new B(a, 6, !1, a, null, !1);
            }), [ "rowSpan", "start" ].forEach(function(a) {
                D[a] = new B(a, 5, !1, a.toLowerCase(), null, !1);
            });
            var sb = /[\-:]([a-z])/g;
            function tb(a) {
                return a[1].toUpperCase();
            }
            function ub(a) {
                switch (typeof a) {
                  case "boolean":
                  case "number":
                  case "object":
                  case "string":
                  case "undefined":
                    return a;

                  default:
                    return "";
                }
            }
            function vb(a, b, c, d) {
                var e = D.hasOwnProperty(b) ? D[b] : null;
                (null !== e ? 0 === e.type : !d && (2 < b.length && ("o" === b[0] || "O" === b[0]) && ("n" === b[1] || "N" === b[1]))) || (function(a, b, c, d) {
                    if (null === b || void 0 === b || function(a, b, c, d) {
                        if (null !== c && 0 === c.type) return !1;
                        switch (typeof b) {
                          case "function":
                          case "symbol":
                            return !0;

                          case "boolean":
                            return !d && (null !== c ? !c.acceptsBooleans : "data-" !== (a = a.toLowerCase().slice(0, 5)) && "aria-" !== a);

                          default:
                            return !1;
                        }
                    }(a, b, c, d)) return !0;
                    if (d) return !1;
                    if (null !== c) switch (c.type) {
                      case 3:
                        return !b;

                      case 4:
                        return !1 === b;

                      case 5:
                        return isNaN(b);

                      case 6:
                        return isNaN(b) || 1 > b;
                    }
                    return !1;
                }(b, c, e, d) && (c = null), d || null === e ? function(a) {
                    return !!mb.call(ob, a) || !mb.call(nb, a) && (lb.test(a) ? ob[a] = !0 : (nb[a] = !0, 
                    !1));
                }(b) && (null === c ? a.removeAttribute(b) : a.setAttribute(b, "" + c)) : e.mustUseProperty ? a[e.propertyName] = null === c ? 3 !== e.type && "" : c : (b = e.attributeName, 
                d = e.attributeNamespace, null === c ? a.removeAttribute(b) : (c = 3 === (e = e.type) || 4 === e && !0 === c ? "" : "" + c, 
                d ? a.setAttributeNS(d, b, c) : a.setAttribute(b, c))));
            }
            function wb(a) {
                var b = a.type;
                return (a = a.nodeName) && "input" === a.toLowerCase() && ("checkbox" === b || "radio" === b);
            }
            function yb(a) {
                a._valueTracker || (a._valueTracker = function(a) {
                    var b = wb(a) ? "checked" : "value", c = Object.getOwnPropertyDescriptor(a.constructor.prototype, b), d = "" + a[b];
                    if (!a.hasOwnProperty(b) && void 0 !== c && "function" == typeof c.get && "function" == typeof c.set) {
                        var e = c.get, f = c.set;
                        return Object.defineProperty(a, b, {
                            configurable: !0,
                            get: function() {
                                return e.call(this);
                            },
                            set: function(a) {
                                d = "" + a, f.call(this, a);
                            }
                        }), Object.defineProperty(a, b, {
                            enumerable: c.enumerable
                        }), {
                            getValue: function() {
                                return d;
                            },
                            setValue: function(a) {
                                d = "" + a;
                            },
                            stopTracking: function() {
                                a._valueTracker = null, delete a[b];
                            }
                        };
                    }
                }(a));
            }
            function zb(a) {
                if (!a) return !1;
                var b = a._valueTracker;
                if (!b) return !0;
                var c = b.getValue(), d = "";
                return a && (d = wb(a) ? a.checked ? "true" : "false" : a.value), (a = d) !== c && (b.setValue(a), 
                !0);
            }
            function Ab(a, b) {
                var c = b.checked;
                return n({}, b, {
                    defaultChecked: void 0,
                    defaultValue: void 0,
                    value: void 0,
                    checked: null != c ? c : a._wrapperState.initialChecked
                });
            }
            function Bb(a, b) {
                var c = null == b.defaultValue ? "" : b.defaultValue, d = null != b.checked ? b.checked : b.defaultChecked;
                c = ub(null != b.value ? b.value : c), a._wrapperState = {
                    initialChecked: d,
                    initialValue: c,
                    controlled: "checkbox" === b.type || "radio" === b.type ? null != b.checked : null != b.value
                };
            }
            function Cb(a, b) {
                null != (b = b.checked) && vb(a, "checked", b, !1);
            }
            function Eb(a, b) {
                Cb(a, b);
                var c = ub(b.value), d = b.type;
                if (null != c) "number" === d ? (0 === c && "" === a.value || a.value != c) && (a.value = "" + c) : a.value !== "" + c && (a.value = "" + c); else if ("submit" === d || "reset" === d) return void a.removeAttribute("value");
                b.hasOwnProperty("value") ? Fb(a, b.type, c) : b.hasOwnProperty("defaultValue") && Fb(a, b.type, ub(b.defaultValue)), 
                null == b.checked && null != b.defaultChecked && (a.defaultChecked = !!b.defaultChecked);
            }
            function Gb(a, b, c) {
                if (b.hasOwnProperty("value") || b.hasOwnProperty("defaultValue")) {
                    var d = b.type;
                    if (!("submit" !== d && "reset" !== d || void 0 !== b.value && null !== b.value)) return;
                    b = "" + a._wrapperState.initialValue, c || b === a.value || (a.value = b), a.defaultValue = b;
                }
                "" !== (c = a.name) && (a.name = ""), a.defaultChecked = !a.defaultChecked, a.defaultChecked = !!a._wrapperState.initialChecked, 
                "" !== c && (a.name = c);
            }
            function Fb(a, b, c) {
                "number" === b && a.ownerDocument.activeElement === a || (null == c ? a.defaultValue = "" + a._wrapperState.initialValue : a.defaultValue !== "" + c && (a.defaultValue = "" + c));
            }
            function Ib(a, b) {
                return a = n({
                    children: void 0
                }, b), (b = function(a) {
                    var b = "";
                    return aa.Children.forEach(a, function(a) {
                        null != a && (b += a);
                    }), b;
                }(b.children)) && (a.children = b), a;
            }
            function Jb(a, b, c, d) {
                if (a = a.options, b) {
                    b = {};
                    for (var e = 0; e < c.length; e++) b["$" + c[e]] = !0;
                    for (c = 0; c < a.length; c++) e = b.hasOwnProperty("$" + a[c].value), a[c].selected !== e && (a[c].selected = e), 
                    e && d && (a[c].defaultSelected = !0);
                } else {
                    for (c = "" + ub(c), b = null, e = 0; e < a.length; e++) {
                        if (a[e].value === c) return a[e].selected = !0, void (d && (a[e].defaultSelected = !0));
                        null !== b || a[e].disabled || (b = a[e]);
                    }
                    null !== b && (b.selected = !0);
                }
            }
            function Kb(a, b) {
                if (null != b.dangerouslySetInnerHTML) throw Error(u(91));
                return n({}, b, {
                    value: void 0,
                    defaultValue: void 0,
                    children: "" + a._wrapperState.initialValue
                });
            }
            function Lb(a, b) {
                var c = b.value;
                if (null == c) {
                    if (c = b.defaultValue, null != (b = b.children)) {
                        if (null != c) throw Error(u(92));
                        if (Array.isArray(b)) {
                            if (!(1 >= b.length)) throw Error(u(93));
                            b = b[0];
                        }
                        c = b;
                    }
                    null == c && (c = "");
                }
                a._wrapperState = {
                    initialValue: ub(c)
                };
            }
            function Mb(a, b) {
                var c = ub(b.value), d = ub(b.defaultValue);
                null != c && ((c = "" + c) !== a.value && (a.value = c), null == b.defaultValue && a.defaultValue !== c && (a.defaultValue = c)), 
                null != d && (a.defaultValue = "" + d);
            }
            function Nb(a) {
                var b = a.textContent;
                b === a._wrapperState.initialValue && "" !== b && null !== b && (a.value = b);
            }
            "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach(function(a) {
                var b = a.replace(sb, tb);
                D[b] = new B(b, 1, !1, a, null, !1);
            }), "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach(function(a) {
                var b = a.replace(sb, tb);
                D[b] = new B(b, 1, !1, a, "http://www.w3.org/1999/xlink", !1);
            }), [ "xml:base", "xml:lang", "xml:space" ].forEach(function(a) {
                var b = a.replace(sb, tb);
                D[b] = new B(b, 1, !1, a, "http://www.w3.org/XML/1998/namespace", !1);
            }), [ "tabIndex", "crossOrigin" ].forEach(function(a) {
                D[a] = new B(a, 1, !1, a.toLowerCase(), null, !1);
            }), D.xlinkHref = new B("xlinkHref", 1, !1, "xlink:href", "http://www.w3.org/1999/xlink", !0), 
            [ "src", "href", "action", "formAction" ].forEach(function(a) {
                D[a] = new B(a, 1, !1, a.toLowerCase(), null, !0);
            });
            var Ob = {
                html: "http://www.w3.org/1999/xhtml",
                mathml: "http://www.w3.org/1998/Math/MathML",
                svg: "http://www.w3.org/2000/svg"
            };
            function Pb(a) {
                switch (a) {
                  case "svg":
                    return "http://www.w3.org/2000/svg";

                  case "math":
                    return "http://www.w3.org/1998/Math/MathML";

                  default:
                    return "http://www.w3.org/1999/xhtml";
                }
            }
            function Qb(a, b) {
                return null == a || "http://www.w3.org/1999/xhtml" === a ? Pb(b) : "http://www.w3.org/2000/svg" === a && "foreignObject" === b ? "http://www.w3.org/1999/xhtml" : a;
            }
            var Rb, Sb = function(a) {
                return "undefined" != typeof MSApp && MSApp.execUnsafeLocalFunction ? function(b, c, d, e) {
                    MSApp.execUnsafeLocalFunction(function() {
                        return a(b, c);
                    });
                } : a;
            }(function(a, b) {
                if (a.namespaceURI !== Ob.svg || "innerHTML" in a) a.innerHTML = b; else {
                    for ((Rb = Rb || document.createElement("div")).innerHTML = "<svg>" + b.valueOf().toString() + "</svg>", 
                    b = Rb.firstChild; a.firstChild; ) a.removeChild(a.firstChild);
                    for (;b.firstChild; ) a.appendChild(b.firstChild);
                }
            });
            function Tb(a, b) {
                if (b) {
                    var c = a.firstChild;
                    if (c && c === a.lastChild && 3 === c.nodeType) return void (c.nodeValue = b);
                }
                a.textContent = b;
            }
            function Ub(a, b) {
                var c = {};
                return c[a.toLowerCase()] = b.toLowerCase(), c["Webkit" + a] = "webkit" + b, c["Moz" + a] = "moz" + b, 
                c;
            }
            var Vb = {
                animationend: Ub("Animation", "AnimationEnd"),
                animationiteration: Ub("Animation", "AnimationIteration"),
                animationstart: Ub("Animation", "AnimationStart"),
                transitionend: Ub("Transition", "TransitionEnd")
            }, Wb = {}, Xb = {};
            function Yb(a) {
                if (Wb[a]) return Wb[a];
                if (!Vb[a]) return a;
                var c, b = Vb[a];
                for (c in b) if (b.hasOwnProperty(c) && c in Xb) return Wb[a] = b[c];
                return a;
            }
            Ya && (Xb = document.createElement("div").style, "AnimationEvent" in window || (delete Vb.animationend.animation, 
            delete Vb.animationiteration.animation, delete Vb.animationstart.animation), "TransitionEvent" in window || delete Vb.transitionend.transition);
            var Zb = Yb("animationend"), $b = Yb("animationiteration"), ac = Yb("animationstart"), bc = Yb("transitionend"), cc = "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" ");
            function ec(a) {
                var b = a, c = a;
                if (a.alternate) for (;b.return; ) b = b.return; else {
                    a = b;
                    do {
                        0 != (1026 & (b = a).effectTag) && (c = b.return), a = b.return;
                    } while (a);
                }
                return 3 === b.tag ? c : null;
            }
            function fc(a) {
                if (13 === a.tag) {
                    var b = a.memoizedState;
                    if (null === b && (null !== (a = a.alternate) && (b = a.memoizedState)), null !== b) return b.dehydrated;
                }
                return null;
            }
            function gc(a) {
                if (ec(a) !== a) throw Error(u(188));
            }
            function ic(a) {
                if (!(a = function(a) {
                    var b = a.alternate;
                    if (!b) {
                        if (null === (b = ec(a))) throw Error(u(188));
                        return b !== a ? null : a;
                    }
                    for (var c = a, d = b; ;) {
                        var e = c.return;
                        if (null === e) break;
                        var f = e.alternate;
                        if (null === f) {
                            if (null !== (d = e.return)) {
                                c = d;
                                continue;
                            }
                            break;
                        }
                        if (e.child === f.child) {
                            for (f = e.child; f; ) {
                                if (f === c) return gc(e), a;
                                if (f === d) return gc(e), b;
                                f = f.sibling;
                            }
                            throw Error(u(188));
                        }
                        if (c.return !== d.return) c = e, d = f; else {
                            for (var g = !1, h = e.child; h; ) {
                                if (h === c) {
                                    g = !0, c = e, d = f;
                                    break;
                                }
                                if (h === d) {
                                    g = !0, d = e, c = f;
                                    break;
                                }
                                h = h.sibling;
                            }
                            if (!g) {
                                for (h = f.child; h; ) {
                                    if (h === c) {
                                        g = !0, c = f, d = e;
                                        break;
                                    }
                                    if (h === d) {
                                        g = !0, d = f, c = e;
                                        break;
                                    }
                                    h = h.sibling;
                                }
                                if (!g) throw Error(u(189));
                            }
                        }
                        if (c.alternate !== d) throw Error(u(190));
                    }
                    if (3 !== c.tag) throw Error(u(188));
                    return c.stateNode.current === c ? a : b;
                }(a))) return null;
                for (var b = a; ;) {
                    if (5 === b.tag || 6 === b.tag) return b;
                    if (b.child) b.child.return = b, b = b.child; else {
                        if (b === a) break;
                        for (;!b.sibling; ) {
                            if (!b.return || b.return === a) return null;
                            b = b.return;
                        }
                        b.sibling.return = b.return, b = b.sibling;
                    }
                }
                return null;
            }
            var jc, kc, lc, mc = !1, nc = [], oc = null, pc = null, qc = null, rc = new Map(), sc = new Map(), tc = [], uc = "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput close cancel copy cut paste click change contextmenu reset submit".split(" "), vc = "focus blur dragenter dragleave mouseover mouseout pointerover pointerout gotpointercapture lostpointercapture".split(" ");
            function zc(a, b, c, d) {
                return {
                    blockedOn: a,
                    topLevelType: b,
                    eventSystemFlags: 32 | c,
                    nativeEvent: d
                };
            }
            function Ac(a, b) {
                switch (a) {
                  case "focus":
                  case "blur":
                    oc = null;
                    break;

                  case "dragenter":
                  case "dragleave":
                    pc = null;
                    break;

                  case "mouseover":
                  case "mouseout":
                    qc = null;
                    break;

                  case "pointerover":
                  case "pointerout":
                    rc.delete(b.pointerId);
                    break;

                  case "gotpointercapture":
                  case "lostpointercapture":
                    sc.delete(b.pointerId);
                }
            }
            function Bc(a, b, c, d, e) {
                return null === a || a.nativeEvent !== e ? (a = zc(b, c, d, e), null !== b && (null !== (b = Cc(b)) && kc(b)), 
                a) : (a.eventSystemFlags |= d, a);
            }
            function Ec(a) {
                var b = Fc(a.target);
                if (null !== b) {
                    var c = ec(b);
                    if (null !== c) if (13 === (b = c.tag)) {
                        if (null !== (b = fc(c))) return a.blockedOn = b, void q.unstable_runWithPriority(a.priority, function() {
                            lc(c);
                        });
                    } else if (3 === b && c.stateNode.hydrate) return void (a.blockedOn = 3 === c.tag ? c.stateNode.containerInfo : null);
                }
                a.blockedOn = null;
            }
            function Gc(a) {
                if (null !== a.blockedOn) return !1;
                var b = Hc(a.topLevelType, a.eventSystemFlags, a.nativeEvent);
                if (null !== b) {
                    var c = Cc(b);
                    return null !== c && kc(c), a.blockedOn = b, !1;
                }
                return !0;
            }
            function Ic(a, b, c) {
                Gc(a) && c.delete(b);
            }
            function Jc() {
                for (mc = !1; 0 < nc.length; ) {
                    var a = nc[0];
                    if (null !== a.blockedOn) {
                        null !== (a = Cc(a.blockedOn)) && jc(a);
                        break;
                    }
                    var b = Hc(a.topLevelType, a.eventSystemFlags, a.nativeEvent);
                    null !== b ? a.blockedOn = b : nc.shift();
                }
                null !== oc && Gc(oc) && (oc = null), null !== pc && Gc(pc) && (pc = null), null !== qc && Gc(qc) && (qc = null), 
                rc.forEach(Ic), sc.forEach(Ic);
            }
            function Kc(a, b) {
                a.blockedOn === b && (a.blockedOn = null, mc || (mc = !0, q.unstable_scheduleCallback(q.unstable_NormalPriority, Jc)));
            }
            function Lc(a) {
                function b(b) {
                    return Kc(b, a);
                }
                if (0 < nc.length) {
                    Kc(nc[0], a);
                    for (var c = 1; c < nc.length; c++) {
                        var d = nc[c];
                        d.blockedOn === a && (d.blockedOn = null);
                    }
                }
                for (null !== oc && Kc(oc, a), null !== pc && Kc(pc, a), null !== qc && Kc(qc, a), 
                rc.forEach(b), sc.forEach(b), c = 0; c < tc.length; c++) (d = tc[c]).blockedOn === a && (d.blockedOn = null);
                for (;0 < tc.length && null === (c = tc[0]).blockedOn; ) Ec(c), null === c.blockedOn && tc.shift();
            }
            function Mc(a) {
                return (a = a.target || a.srcElement || window).correspondingUseElement && (a = a.correspondingUseElement), 
                3 === a.nodeType ? a.parentNode : a;
            }
            function Nc(a) {
                do {
                    a = a.return;
                } while (a && 5 !== a.tag);
                return a || null;
            }
            function Oc(a, b, c) {
                (b = Da(a, c.dispatchConfig.phasedRegistrationNames[b])) && (c._dispatchListeners = xa(c._dispatchListeners, b), 
                c._dispatchInstances = xa(c._dispatchInstances, a));
            }
            function Pc(a) {
                if (a && a.dispatchConfig.phasedRegistrationNames) {
                    for (var b = a._targetInst, c = []; b; ) c.push(b), b = Nc(b);
                    for (b = c.length; 0 < b--; ) Oc(c[b], "captured", a);
                    for (b = 0; b < c.length; b++) Oc(c[b], "bubbled", a);
                }
            }
            function Qc(a, b, c) {
                a && c && c.dispatchConfig.registrationName && (b = Da(a, c.dispatchConfig.registrationName)) && (c._dispatchListeners = xa(c._dispatchListeners, b), 
                c._dispatchInstances = xa(c._dispatchInstances, a));
            }
            function Rc(a) {
                a && a.dispatchConfig.registrationName && Qc(a._targetInst, null, a);
            }
            function Sc(a) {
                ya(a, Pc);
            }
            function Tc() {
                return !0;
            }
            function Uc() {
                return !1;
            }
            function E(a, b, c, d) {
                for (var e in this.dispatchConfig = a, this._targetInst = b, this.nativeEvent = c, 
                a = this.constructor.Interface) a.hasOwnProperty(e) && ((b = a[e]) ? this[e] = b(c) : "target" === e ? this.target = d : this[e] = c[e]);
                return this.isDefaultPrevented = (null != c.defaultPrevented ? c.defaultPrevented : !1 === c.returnValue) ? Tc : Uc, 
                this.isPropagationStopped = Uc, this;
            }
            function Wc(a, b, c, d) {
                if (this.eventPool.length) {
                    var e = this.eventPool.pop();
                    return this.call(e, a, b, c, d), e;
                }
                return new this(a, b, c, d);
            }
            function Xc(a) {
                if (!(a instanceof this)) throw Error(u(279));
                a.destructor(), 10 > this.eventPool.length && this.eventPool.push(a);
            }
            function Vc(a) {
                a.eventPool = [], a.getPooled = Wc, a.release = Xc;
            }
            n(E.prototype, {
                preventDefault: function() {
                    this.defaultPrevented = !0;
                    var a = this.nativeEvent;
                    a && (a.preventDefault ? a.preventDefault() : "unknown" != typeof a.returnValue && (a.returnValue = !1), 
                    this.isDefaultPrevented = Tc);
                },
                stopPropagation: function() {
                    var a = this.nativeEvent;
                    a && (a.stopPropagation ? a.stopPropagation() : "unknown" != typeof a.cancelBubble && (a.cancelBubble = !0), 
                    this.isPropagationStopped = Tc);
                },
                persist: function() {
                    this.isPersistent = Tc;
                },
                isPersistent: Uc,
                destructor: function() {
                    var b, a = this.constructor.Interface;
                    for (b in a) this[b] = null;
                    this.nativeEvent = this._targetInst = this.dispatchConfig = null, this.isPropagationStopped = this.isDefaultPrevented = Uc, 
                    this._dispatchInstances = this._dispatchListeners = null;
                }
            }), E.Interface = {
                type: null,
                target: null,
                currentTarget: function() {
                    return null;
                },
                eventPhase: null,
                bubbles: null,
                cancelable: null,
                timeStamp: function(a) {
                    return a.timeStamp || Date.now();
                },
                defaultPrevented: null,
                isTrusted: null
            }, E.extend = function(a) {
                function b() {}
                function c() {
                    return d.apply(this, arguments);
                }
                var d = this;
                b.prototype = d.prototype;
                var e = new b();
                return n(e, c.prototype), c.prototype = e, c.prototype.constructor = c, c.Interface = n({}, d.Interface, a), 
                c.extend = d.extend, Vc(c), c;
            }, Vc(E);
            var Yc = E.extend({
                animationName: null,
                elapsedTime: null,
                pseudoElement: null
            }), Zc = E.extend({
                clipboardData: function(a) {
                    return "clipboardData" in a ? a.clipboardData : window.clipboardData;
                }
            }), $c = E.extend({
                view: null,
                detail: null
            }), ad = $c.extend({
                relatedTarget: null
            });
            function bd(a) {
                var b = a.keyCode;
                return "charCode" in a ? 0 === (a = a.charCode) && 13 === b && (a = 13) : a = b, 
                10 === a && (a = 13), 32 <= a || 13 === a ? a : 0;
            }
            var cd = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified"
            }, dd = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta"
            }, ed = {
                Alt: "altKey",
                Control: "ctrlKey",
                Meta: "metaKey",
                Shift: "shiftKey"
            };
            function gd(a) {
                var b = this.nativeEvent;
                return b.getModifierState ? b.getModifierState(a) : !!(a = ed[a]) && !!b[a];
            }
            function hd() {
                return gd;
            }
            for (var id = $c.extend({
                key: function(a) {
                    if (a.key) {
                        var b = cd[a.key] || a.key;
                        if ("Unidentified" !== b) return b;
                    }
                    return "keypress" === a.type ? 13 === (a = bd(a)) ? "Enter" : String.fromCharCode(a) : "keydown" === a.type || "keyup" === a.type ? dd[a.keyCode] || "Unidentified" : "";
                },
                location: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                repeat: null,
                locale: null,
                getModifierState: hd,
                charCode: function(a) {
                    return "keypress" === a.type ? bd(a) : 0;
                },
                keyCode: function(a) {
                    return "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
                },
                which: function(a) {
                    return "keypress" === a.type ? bd(a) : "keydown" === a.type || "keyup" === a.type ? a.keyCode : 0;
                }
            }), jd = 0, kd = 0, ld = !1, md = !1, nd = $c.extend({
                screenX: null,
                screenY: null,
                clientX: null,
                clientY: null,
                pageX: null,
                pageY: null,
                ctrlKey: null,
                shiftKey: null,
                altKey: null,
                metaKey: null,
                getModifierState: hd,
                button: null,
                buttons: null,
                relatedTarget: function(a) {
                    return a.relatedTarget || (a.fromElement === a.srcElement ? a.toElement : a.fromElement);
                },
                movementX: function(a) {
                    if ("movementX" in a) return a.movementX;
                    var b = jd;
                    return jd = a.screenX, ld ? "mousemove" === a.type ? a.screenX - b : 0 : (ld = !0, 
                    0);
                },
                movementY: function(a) {
                    if ("movementY" in a) return a.movementY;
                    var b = kd;
                    return kd = a.screenY, md ? "mousemove" === a.type ? a.screenY - b : 0 : (md = !0, 
                    0);
                }
            }), od = nd.extend({
                pointerId: null,
                width: null,
                height: null,
                pressure: null,
                tangentialPressure: null,
                tiltX: null,
                tiltY: null,
                twist: null,
                pointerType: null,
                isPrimary: null
            }), pd = nd.extend({
                dataTransfer: null
            }), qd = $c.extend({
                touches: null,
                targetTouches: null,
                changedTouches: null,
                altKey: null,
                metaKey: null,
                ctrlKey: null,
                shiftKey: null,
                getModifierState: hd
            }), rd = E.extend({
                propertyName: null,
                elapsedTime: null,
                pseudoElement: null
            }), sd = nd.extend({
                deltaX: function(a) {
                    return "deltaX" in a ? a.deltaX : "wheelDeltaX" in a ? -a.wheelDeltaX : 0;
                },
                deltaY: function(a) {
                    return "deltaY" in a ? a.deltaY : "wheelDeltaY" in a ? -a.wheelDeltaY : "wheelDelta" in a ? -a.wheelDelta : 0;
                },
                deltaZ: null,
                deltaMode: null
            }), td = [ [ "blur", "blur", 0 ], [ "cancel", "cancel", 0 ], [ "click", "click", 0 ], [ "close", "close", 0 ], [ "contextmenu", "contextMenu", 0 ], [ "copy", "copy", 0 ], [ "cut", "cut", 0 ], [ "auxclick", "auxClick", 0 ], [ "dblclick", "doubleClick", 0 ], [ "dragend", "dragEnd", 0 ], [ "dragstart", "dragStart", 0 ], [ "drop", "drop", 0 ], [ "focus", "focus", 0 ], [ "input", "input", 0 ], [ "invalid", "invalid", 0 ], [ "keydown", "keyDown", 0 ], [ "keypress", "keyPress", 0 ], [ "keyup", "keyUp", 0 ], [ "mousedown", "mouseDown", 0 ], [ "mouseup", "mouseUp", 0 ], [ "paste", "paste", 0 ], [ "pause", "pause", 0 ], [ "play", "play", 0 ], [ "pointercancel", "pointerCancel", 0 ], [ "pointerdown", "pointerDown", 0 ], [ "pointerup", "pointerUp", 0 ], [ "ratechange", "rateChange", 0 ], [ "reset", "reset", 0 ], [ "seeked", "seeked", 0 ], [ "submit", "submit", 0 ], [ "touchcancel", "touchCancel", 0 ], [ "touchend", "touchEnd", 0 ], [ "touchstart", "touchStart", 0 ], [ "volumechange", "volumeChange", 0 ], [ "drag", "drag", 1 ], [ "dragenter", "dragEnter", 1 ], [ "dragexit", "dragExit", 1 ], [ "dragleave", "dragLeave", 1 ], [ "dragover", "dragOver", 1 ], [ "mousemove", "mouseMove", 1 ], [ "mouseout", "mouseOut", 1 ], [ "mouseover", "mouseOver", 1 ], [ "pointermove", "pointerMove", 1 ], [ "pointerout", "pointerOut", 1 ], [ "pointerover", "pointerOver", 1 ], [ "scroll", "scroll", 1 ], [ "toggle", "toggle", 1 ], [ "touchmove", "touchMove", 1 ], [ "wheel", "wheel", 1 ], [ "abort", "abort", 2 ], [ Zb, "animationEnd", 2 ], [ $b, "animationIteration", 2 ], [ ac, "animationStart", 2 ], [ "canplay", "canPlay", 2 ], [ "canplaythrough", "canPlayThrough", 2 ], [ "durationchange", "durationChange", 2 ], [ "emptied", "emptied", 2 ], [ "encrypted", "encrypted", 2 ], [ "ended", "ended", 2 ], [ "error", "error", 2 ], [ "gotpointercapture", "gotPointerCapture", 2 ], [ "load", "load", 2 ], [ "loadeddata", "loadedData", 2 ], [ "loadedmetadata", "loadedMetadata", 2 ], [ "loadstart", "loadStart", 2 ], [ "lostpointercapture", "lostPointerCapture", 2 ], [ "playing", "playing", 2 ], [ "progress", "progress", 2 ], [ "seeking", "seeking", 2 ], [ "stalled", "stalled", 2 ], [ "suspend", "suspend", 2 ], [ "timeupdate", "timeUpdate", 2 ], [ bc, "transitionEnd", 2 ], [ "waiting", "waiting", 2 ] ], ud = {}, vd = {}, wd = 0; wd < td.length; wd++) {
                var yd = td[wd], zd = yd[0], Ad = yd[1], Bd = yd[2], Cd = "on" + (Ad[0].toUpperCase() + Ad.slice(1)), Dd = {
                    phasedRegistrationNames: {
                        bubbled: Cd,
                        captured: Cd + "Capture"
                    },
                    dependencies: [ zd ],
                    eventPriority: Bd
                };
                ud[Ad] = Dd, vd[zd] = Dd;
            }
            var Ed = {
                eventTypes: ud,
                getEventPriority: function(a) {
                    return void 0 !== (a = vd[a]) ? a.eventPriority : 2;
                },
                extractEvents: function(a, b, c, d) {
                    var e = vd[a];
                    if (!e) return null;
                    switch (a) {
                      case "keypress":
                        if (0 === bd(c)) return null;

                      case "keydown":
                      case "keyup":
                        a = id;
                        break;

                      case "blur":
                      case "focus":
                        a = ad;
                        break;

                      case "click":
                        if (2 === c.button) return null;

                      case "auxclick":
                      case "dblclick":
                      case "mousedown":
                      case "mousemove":
                      case "mouseup":
                      case "mouseout":
                      case "mouseover":
                      case "contextmenu":
                        a = nd;
                        break;

                      case "drag":
                      case "dragend":
                      case "dragenter":
                      case "dragexit":
                      case "dragleave":
                      case "dragover":
                      case "dragstart":
                      case "drop":
                        a = pd;
                        break;

                      case "touchcancel":
                      case "touchend":
                      case "touchmove":
                      case "touchstart":
                        a = qd;
                        break;

                      case Zb:
                      case $b:
                      case ac:
                        a = Yc;
                        break;

                      case bc:
                        a = rd;
                        break;

                      case "scroll":
                        a = $c;
                        break;

                      case "wheel":
                        a = sd;
                        break;

                      case "copy":
                      case "cut":
                      case "paste":
                        a = Zc;
                        break;

                      case "gotpointercapture":
                      case "lostpointercapture":
                      case "pointercancel":
                      case "pointerdown":
                      case "pointermove":
                      case "pointerout":
                      case "pointerover":
                      case "pointerup":
                        a = od;
                        break;

                      default:
                        a = E;
                    }
                    return Sc(b = a.getPooled(e, b, c, d)), b;
                }
            }, Fd = q.unstable_UserBlockingPriority, Gd = q.unstable_runWithPriority, Hd = Ed.getEventPriority, Id = 10, Jd = [];
            function Kd(a) {
                var b = a.targetInst, c = b;
                do {
                    if (!c) {
                        a.ancestors.push(c);
                        break;
                    }
                    var d = c;
                    if (3 === d.tag) d = d.stateNode.containerInfo; else {
                        for (;d.return; ) d = d.return;
                        d = 3 !== d.tag ? null : d.stateNode.containerInfo;
                    }
                    if (!d) break;
                    5 !== (b = c.tag) && 6 !== b || a.ancestors.push(c), c = Fc(d);
                } while (c);
                for (c = 0; c < a.ancestors.length; c++) {
                    b = a.ancestors[c];
                    var e = Mc(a.nativeEvent);
                    d = a.topLevelType;
                    for (var f = a.nativeEvent, g = a.eventSystemFlags, h = null, k = 0; k < ea.length; k++) {
                        var l = ea[k];
                        l && (l = l.extractEvents(d, b, f, e, g)) && (h = xa(h, l));
                    }
                    Ba(h);
                }
            }
            var Ld = !0;
            function F(a, b) {
                Md(b, a, !1);
            }
            function Md(a, b, c) {
                switch (Hd(b)) {
                  case 0:
                    var d = function(a, b, c) {
                        ib || gb();
                        var d = Pd, e = ib;
                        ib = !0;
                        try {
                            fb(d, a, b, c);
                        } finally {
                            (ib = e) || kb();
                        }
                    }.bind(null, b, 1);
                    break;

                  case 1:
                    d = function(a, b, c) {
                        Gd(Fd, Pd.bind(null, a, b, c));
                    }.bind(null, b, 1);
                    break;

                  default:
                    d = Pd.bind(null, b, 1);
                }
                c ? a.addEventListener(b, d, !0) : a.addEventListener(b, d, !1);
            }
            function Qd(a, b, c, d) {
                if (Jd.length) {
                    var e = Jd.pop();
                    e.topLevelType = a, e.eventSystemFlags = b, e.nativeEvent = c, e.targetInst = d, 
                    a = e;
                } else a = {
                    topLevelType: a,
                    eventSystemFlags: b,
                    nativeEvent: c,
                    targetInst: d,
                    ancestors: []
                };
                try {
                    if (b = Kd, c = a, jb) b(c, void 0); else {
                        jb = !0;
                        try {
                            hb(b, c, void 0);
                        } finally {
                            jb = !1, kb();
                        }
                    }
                } finally {
                    a.topLevelType = null, a.nativeEvent = null, a.targetInst = null, a.ancestors.length = 0, 
                    Jd.length < Id && Jd.push(a);
                }
            }
            function Pd(a, b, c) {
                if (Ld) if (0 < nc.length && -1 < uc.indexOf(a)) a = zc(null, a, b, c), nc.push(a); else {
                    var d = Hc(a, b, c);
                    null === d ? Ac(a, c) : -1 < uc.indexOf(a) ? (a = zc(d, a, b, c), nc.push(a)) : function(a, b, c, d) {
                        switch (b) {
                          case "focus":
                            return oc = Bc(oc, a, b, c, d), !0;

                          case "dragenter":
                            return pc = Bc(pc, a, b, c, d), !0;

                          case "mouseover":
                            return qc = Bc(qc, a, b, c, d), !0;

                          case "pointerover":
                            var e = d.pointerId;
                            return rc.set(e, Bc(rc.get(e) || null, a, b, c, d)), !0;

                          case "gotpointercapture":
                            return e = d.pointerId, sc.set(e, Bc(sc.get(e) || null, a, b, c, d)), !0;
                        }
                        return !1;
                    }(d, a, b, c) || (Ac(a, c), Qd(a, b, c, null));
                }
            }
            function Hc(a, b, c) {
                var d = Mc(c);
                if (null !== (d = Fc(d))) {
                    var e = ec(d);
                    if (null === e) d = null; else {
                        var f = e.tag;
                        if (13 === f) {
                            if (null !== (d = fc(e))) return d;
                            d = null;
                        } else if (3 === f) {
                            if (e.stateNode.hydrate) return 3 === e.tag ? e.stateNode.containerInfo : null;
                            d = null;
                        } else e !== d && (d = null);
                    }
                }
                return Qd(a, b, c, d), null;
            }
            function Rd(a) {
                if (!Ya) return !1;
                var b = (a = "on" + a) in document;
                return b || ((b = document.createElement("div")).setAttribute(a, "return;"), b = "function" == typeof b[a]), 
                b;
            }
            var Sd = new ("function" == typeof WeakMap ? WeakMap : Map)();
            function xc(a) {
                var b = Sd.get(a);
                return void 0 === b && (b = new Set(), Sd.set(a, b)), b;
            }
            function yc(a, b, c) {
                if (!c.has(a)) {
                    switch (a) {
                      case "scroll":
                        Md(b, "scroll", !0);
                        break;

                      case "focus":
                      case "blur":
                        Md(b, "focus", !0), Md(b, "blur", !0), c.add("blur"), c.add("focus");
                        break;

                      case "cancel":
                      case "close":
                        Rd(a) && Md(b, a, !0);
                        break;

                      case "invalid":
                      case "submit":
                      case "reset":
                        break;

                      default:
                        -1 === cc.indexOf(a) && F(a, b);
                    }
                    c.add(a);
                }
            }
            var Td = {
                animationIterationCount: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridArea: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0
            }, Ud = [ "Webkit", "ms", "Moz", "O" ];
            function Vd(a, b, c) {
                return null == b || "boolean" == typeof b || "" === b ? "" : c || "number" != typeof b || 0 === b || Td.hasOwnProperty(a) && Td[a] ? ("" + b).trim() : b + "px";
            }
            function Wd(a, b) {
                for (var c in a = a.style, b) if (b.hasOwnProperty(c)) {
                    var d = 0 === c.indexOf("--"), e = Vd(c, b[c], d);
                    "float" === c && (c = "cssFloat"), d ? a.setProperty(c, e) : a[c] = e;
                }
            }
            Object.keys(Td).forEach(function(a) {
                Ud.forEach(function(b) {
                    b = b + a.charAt(0).toUpperCase() + a.substring(1), Td[b] = Td[a];
                });
            });
            var Xd = n({
                menuitem: !0
            }, {
                area: !0,
                base: !0,
                br: !0,
                col: !0,
                embed: !0,
                hr: !0,
                img: !0,
                input: !0,
                keygen: !0,
                link: !0,
                meta: !0,
                param: !0,
                source: !0,
                track: !0,
                wbr: !0
            });
            function Yd(a, b) {
                if (b) {
                    if (Xd[a] && (null != b.children || null != b.dangerouslySetInnerHTML)) throw Error(u(137, a, ""));
                    if (null != b.dangerouslySetInnerHTML) {
                        if (null != b.children) throw Error(u(60));
                        if (!("object" == typeof b.dangerouslySetInnerHTML && "__html" in b.dangerouslySetInnerHTML)) throw Error(u(61));
                    }
                    if (null != b.style && "object" != typeof b.style) throw Error(u(62, ""));
                }
            }
            function Zd(a, b) {
                if (-1 === a.indexOf("-")) return "string" == typeof b.is;
                switch (a) {
                  case "annotation-xml":
                  case "color-profile":
                  case "font-face":
                  case "font-face-src":
                  case "font-face-uri":
                  case "font-face-format":
                  case "font-face-name":
                  case "missing-glyph":
                    return !1;

                  default:
                    return !0;
                }
            }
            function $d(a, b) {
                var c = xc(a = 9 === a.nodeType || 11 === a.nodeType ? a : a.ownerDocument);
                b = ja[b];
                for (var d = 0; d < b.length; d++) yc(b[d], a, c);
            }
            function ae() {}
            function be(a) {
                if (void 0 === (a = a || ("undefined" != typeof document ? document : void 0))) return null;
                try {
                    return a.activeElement || a.body;
                } catch (b) {
                    return a.body;
                }
            }
            function ce(a) {
                for (;a && a.firstChild; ) a = a.firstChild;
                return a;
            }
            function de(a, b) {
                var d, c = ce(a);
                for (a = 0; c; ) {
                    if (3 === c.nodeType) {
                        if (d = a + c.textContent.length, a <= b && d >= b) return {
                            node: c,
                            offset: b - a
                        };
                        a = d;
                    }
                    a: {
                        for (;c; ) {
                            if (c.nextSibling) {
                                c = c.nextSibling;
                                break a;
                            }
                            c = c.parentNode;
                        }
                        c = void 0;
                    }
                    c = ce(c);
                }
            }
            function fe() {
                for (var a = window, b = be(); b instanceof a.HTMLIFrameElement; ) {
                    try {
                        var c = "string" == typeof b.contentWindow.location.href;
                    } catch (d) {
                        c = !1;
                    }
                    if (!c) break;
                    b = be((a = b.contentWindow).document);
                }
                return b;
            }
            function ge(a) {
                var b = a && a.nodeName && a.nodeName.toLowerCase();
                return b && ("input" === b && ("text" === a.type || "search" === a.type || "tel" === a.type || "url" === a.type || "password" === a.type) || "textarea" === b || "true" === a.contentEditable);
            }
            var he = "$", ie = "/$", je = "$?", ke = "$!", le = null, me = null;
            function ne(a, b) {
                switch (a) {
                  case "button":
                  case "input":
                  case "select":
                  case "textarea":
                    return !!b.autoFocus;
                }
                return !1;
            }
            function oe(a, b) {
                return "textarea" === a || "option" === a || "noscript" === a || "string" == typeof b.children || "number" == typeof b.children || "object" == typeof b.dangerouslySetInnerHTML && null !== b.dangerouslySetInnerHTML && null != b.dangerouslySetInnerHTML.__html;
            }
            var pe = "function" == typeof setTimeout ? setTimeout : void 0, qe = "function" == typeof clearTimeout ? clearTimeout : void 0;
            function re(a) {
                for (;null != a; a = a.nextSibling) {
                    var b = a.nodeType;
                    if (1 === b || 3 === b) break;
                }
                return a;
            }
            function se(a) {
                a = a.previousSibling;
                for (var b = 0; a; ) {
                    if (8 === a.nodeType) {
                        var c = a.data;
                        if (c === he || c === ke || c === je) {
                            if (0 === b) return a;
                            b--;
                        } else c === ie && b++;
                    }
                    a = a.previousSibling;
                }
                return null;
            }
            var te = Math.random().toString(36).slice(2), ue = "__reactInternalInstance$" + te, ve = "__reactEventHandlers$" + te, we = "__reactContainere$" + te;
            function Fc(a) {
                var b = a[ue];
                if (b) return b;
                for (var c = a.parentNode; c; ) {
                    if (b = c[we] || c[ue]) {
                        if (c = b.alternate, null !== b.child || null !== c && null !== c.child) for (a = se(a); null !== a; ) {
                            if (c = a[ue]) return c;
                            a = se(a);
                        }
                        return b;
                    }
                    c = (a = c).parentNode;
                }
                return null;
            }
            function Cc(a) {
                return !(a = a[ue] || a[we]) || 5 !== a.tag && 6 !== a.tag && 13 !== a.tag && 3 !== a.tag ? null : a;
            }
            function xe(a) {
                if (5 === a.tag || 6 === a.tag) return a.stateNode;
                throw Error(u(33));
            }
            function ye(a) {
                return a[ve] || null;
            }
            var ze = null, Ae = null, Be = null;
            function Ce() {
                if (Be) return Be;
                var a, d, b = Ae, c = b.length, e = "value" in ze ? ze.value : ze.textContent, f = e.length;
                for (a = 0; a < c && b[a] === e[a]; a++) ;
                var g = c - a;
                for (d = 1; d <= g && b[c - d] === e[f - d]; d++) ;
                return Be = e.slice(a, 1 < d ? 1 - d : void 0);
            }
            var De = E.extend({
                data: null
            }), Ee = E.extend({
                data: null
            }), Fe = [ 9, 13, 27, 32 ], Ge = Ya && "CompositionEvent" in window, He = null;
            Ya && "documentMode" in document && (He = document.documentMode);
            var Ie = Ya && "TextEvent" in window && !He, Je = Ya && (!Ge || He && 8 < He && 11 >= He), Ke = String.fromCharCode(32), Le = {
                beforeInput: {
                    phasedRegistrationNames: {
                        bubbled: "onBeforeInput",
                        captured: "onBeforeInputCapture"
                    },
                    dependencies: [ "compositionend", "keypress", "textInput", "paste" ]
                },
                compositionEnd: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionEnd",
                        captured: "onCompositionEndCapture"
                    },
                    dependencies: "blur compositionend keydown keypress keyup mousedown".split(" ")
                },
                compositionStart: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionStart",
                        captured: "onCompositionStartCapture"
                    },
                    dependencies: "blur compositionstart keydown keypress keyup mousedown".split(" ")
                },
                compositionUpdate: {
                    phasedRegistrationNames: {
                        bubbled: "onCompositionUpdate",
                        captured: "onCompositionUpdateCapture"
                    },
                    dependencies: "blur compositionupdate keydown keypress keyup mousedown".split(" ")
                }
            }, Me = !1;
            function Ne(a, b) {
                switch (a) {
                  case "keyup":
                    return -1 !== Fe.indexOf(b.keyCode);

                  case "keydown":
                    return 229 !== b.keyCode;

                  case "keypress":
                  case "mousedown":
                  case "blur":
                    return !0;

                  default:
                    return !1;
                }
            }
            function Oe(a) {
                return "object" == typeof (a = a.detail) && "data" in a ? a.data : null;
            }
            var Pe = !1;
            var Se = {
                eventTypes: Le,
                extractEvents: function(a, b, c, d) {
                    var e;
                    if (Ge) b: {
                        switch (a) {
                          case "compositionstart":
                            var f = Le.compositionStart;
                            break b;

                          case "compositionend":
                            f = Le.compositionEnd;
                            break b;

                          case "compositionupdate":
                            f = Le.compositionUpdate;
                            break b;
                        }
                        f = void 0;
                    } else Pe ? Ne(a, c) && (f = Le.compositionEnd) : "keydown" === a && 229 === c.keyCode && (f = Le.compositionStart);
                    return f ? (Je && "ko" !== c.locale && (Pe || f !== Le.compositionStart ? f === Le.compositionEnd && Pe && (e = Ce()) : (Ae = "value" in (ze = d) ? ze.value : ze.textContent, 
                    Pe = !0)), f = De.getPooled(f, b, c, d), e ? f.data = e : null !== (e = Oe(c)) && (f.data = e), 
                    Sc(f), e = f) : e = null, (a = Ie ? function(a, b) {
                        switch (a) {
                          case "compositionend":
                            return Oe(b);

                          case "keypress":
                            return 32 !== b.which ? null : (Me = !0, Ke);

                          case "textInput":
                            return (a = b.data) === Ke && Me ? null : a;

                          default:
                            return null;
                        }
                    }(a, c) : function(a, b) {
                        if (Pe) return "compositionend" === a || !Ge && Ne(a, b) ? (a = Ce(), Be = Ae = ze = null, 
                        Pe = !1, a) : null;
                        switch (a) {
                          case "paste":
                            return null;

                          case "keypress":
                            if (!(b.ctrlKey || b.altKey || b.metaKey) || b.ctrlKey && b.altKey) {
                                if (b.char && 1 < b.char.length) return b.char;
                                if (b.which) return String.fromCharCode(b.which);
                            }
                            return null;

                          case "compositionend":
                            return Je && "ko" !== b.locale ? null : b.data;

                          default:
                            return null;
                        }
                    }(a, c)) ? ((b = Ee.getPooled(Le.beforeInput, b, c, d)).data = a, Sc(b)) : b = null, 
                    null === e ? b : null === b ? e : [ e, b ];
                }
            }, Te = {
                color: !0,
                date: !0,
                datetime: !0,
                "datetime-local": !0,
                email: !0,
                month: !0,
                number: !0,
                password: !0,
                range: !0,
                search: !0,
                tel: !0,
                text: !0,
                time: !0,
                url: !0,
                week: !0
            };
            function Ue(a) {
                var b = a && a.nodeName && a.nodeName.toLowerCase();
                return "input" === b ? !!Te[a.type] : "textarea" === b;
            }
            var Ve = {
                change: {
                    phasedRegistrationNames: {
                        bubbled: "onChange",
                        captured: "onChangeCapture"
                    },
                    dependencies: "blur change click focus input keydown keyup selectionchange".split(" ")
                }
            };
            function We(a, b, c) {
                return (a = E.getPooled(Ve.change, a, b, c)).type = "change", cb(c), Sc(a), a;
            }
            var Xe = null, Ye = null;
            function Ze(a) {
                Ba(a);
            }
            function $e(a) {
                if (zb(xe(a))) return a;
            }
            function af(a, b) {
                if ("change" === a) return b;
            }
            var bf = !1;
            function cf() {
                Xe && (Xe.detachEvent("onpropertychange", df), Ye = Xe = null);
            }
            function df(a) {
                if ("value" === a.propertyName && $e(Ye)) if (a = We(Ye, a, Mc(a)), ib) Ba(a); else {
                    ib = !0;
                    try {
                        eb(Ze, a);
                    } finally {
                        ib = !1, kb();
                    }
                }
            }
            function ef(a, b, c) {
                "focus" === a ? (cf(), Ye = c, (Xe = b).attachEvent("onpropertychange", df)) : "blur" === a && cf();
            }
            function ff(a) {
                if ("selectionchange" === a || "keyup" === a || "keydown" === a) return $e(Ye);
            }
            function gf(a, b) {
                if ("click" === a) return $e(b);
            }
            function hf(a, b) {
                if ("input" === a || "change" === a) return $e(b);
            }
            Ya && (bf = Rd("input") && (!document.documentMode || 9 < document.documentMode));
            var lf, jf = {
                eventTypes: Ve,
                _isInputEventSupported: bf,
                extractEvents: function(a, b, c, d) {
                    var e = b ? xe(b) : window, f = e.nodeName && e.nodeName.toLowerCase();
                    if ("select" === f || "input" === f && "file" === e.type) var g = af; else if (Ue(e)) if (bf) g = hf; else {
                        g = ff;
                        var h = ef;
                    } else (f = e.nodeName) && "input" === f.toLowerCase() && ("checkbox" === e.type || "radio" === e.type) && (g = gf);
                    if (g && (g = g(a, b))) return We(g, c, d);
                    h && h(a, e, b), "blur" === a && (a = e._wrapperState) && a.controlled && "number" === e.type && Fb(e, "number", e.value);
                }
            }, kf = {
                mouseEnter: {
                    registrationName: "onMouseEnter",
                    dependencies: [ "mouseout", "mouseover" ]
                },
                mouseLeave: {
                    registrationName: "onMouseLeave",
                    dependencies: [ "mouseout", "mouseover" ]
                },
                pointerEnter: {
                    registrationName: "onPointerEnter",
                    dependencies: [ "pointerout", "pointerover" ]
                },
                pointerLeave: {
                    registrationName: "onPointerLeave",
                    dependencies: [ "pointerout", "pointerover" ]
                }
            }, mf = {
                eventTypes: kf,
                extractEvents: function(a, b, c, d, e) {
                    var f = "mouseover" === a || "pointerover" === a, g = "mouseout" === a || "pointerout" === a;
                    if (f && 0 == (32 & e) && (c.relatedTarget || c.fromElement) || !g && !f) return null;
                    if (e = d.window === d ? d : (e = d.ownerDocument) ? e.defaultView || e.parentWindow : window, 
                    g ? (g = b, null !== (b = (b = c.relatedTarget || c.toElement) ? Fc(b) : null) && (b !== (f = ec(b)) || 5 !== b.tag && 6 !== b.tag) && (b = null)) : g = null, 
                    g === b) return null;
                    if ("mouseout" === a || "mouseover" === a) var h = nd, k = kf.mouseLeave, l = kf.mouseEnter, m = "mouse"; else "pointerout" !== a && "pointerover" !== a || (h = od, 
                    k = kf.pointerLeave, l = kf.pointerEnter, m = "pointer");
                    if (a = null == g ? e : xe(g), e = null == b ? e : xe(b), (k = h.getPooled(k, g, c, d)).type = m + "leave", 
                    k.target = a, k.relatedTarget = e, (d = h.getPooled(l, b, c, d)).type = m + "enter", 
                    d.target = e, d.relatedTarget = a, m = b, (h = g) && m) a: {
                        for (a = m, g = 0, b = l = h; b; b = Nc(b)) g++;
                        for (b = 0, e = a; e; e = Nc(e)) b++;
                        for (;0 < g - b; ) l = Nc(l), g--;
                        for (;0 < b - g; ) a = Nc(a), b--;
                        for (;g--; ) {
                            if (l === a || l === a.alternate) break a;
                            l = Nc(l), a = Nc(a);
                        }
                        l = null;
                    } else l = null;
                    for (a = l, l = []; h && h !== a && (null === (g = h.alternate) || g !== a); ) l.push(h), 
                    h = Nc(h);
                    for (h = []; m && m !== a && (null === (g = m.alternate) || g !== a); ) h.push(m), 
                    m = Nc(m);
                    for (m = 0; m < l.length; m++) Qc(l[m], "bubbled", k);
                    for (m = h.length; 0 < m--; ) Qc(h[m], "captured", d);
                    return c === lf ? (lf = null, [ k ]) : (lf = c, [ k, d ]);
                }
            };
            var of = "function" == typeof Object.is ? Object.is : function(a, b) {
                return a === b && (0 !== a || 1 / a == 1 / b) || a != a && b != b;
            }, pf = Object.prototype.hasOwnProperty;
            function qf(a, b) {
                if (of(a, b)) return !0;
                if ("object" != typeof a || null === a || "object" != typeof b || null === b) return !1;
                var c = Object.keys(a), d = Object.keys(b);
                if (c.length !== d.length) return !1;
                for (d = 0; d < c.length; d++) if (!pf.call(b, c[d]) || !of(a[c[d]], b[c[d]])) return !1;
                return !0;
            }
            var rf = Ya && "documentMode" in document && 11 >= document.documentMode, sf = {
                select: {
                    phasedRegistrationNames: {
                        bubbled: "onSelect",
                        captured: "onSelectCapture"
                    },
                    dependencies: "blur contextmenu dragend focus keydown keyup mousedown mouseup selectionchange".split(" ")
                }
            }, tf = null, uf = null, vf = null, wf = !1;
            function xf(a, b) {
                var c = b.window === b ? b.document : 9 === b.nodeType ? b : b.ownerDocument;
                return wf || null == tf || tf !== be(c) ? null : ("selectionStart" in (c = tf) && ge(c) ? c = {
                    start: c.selectionStart,
                    end: c.selectionEnd
                } : c = {
                    anchorNode: (c = (c.ownerDocument && c.ownerDocument.defaultView || window).getSelection()).anchorNode,
                    anchorOffset: c.anchorOffset,
                    focusNode: c.focusNode,
                    focusOffset: c.focusOffset
                }, vf && qf(vf, c) ? null : (vf = c, (a = E.getPooled(sf.select, uf, a, b)).type = "select", 
                a.target = tf, Sc(a), a));
            }
            var yf = {
                eventTypes: sf,
                extractEvents: function(a, b, c, d) {
                    var f, e = d.window === d ? d.document : 9 === d.nodeType ? d : d.ownerDocument;
                    if (!(f = !e)) {
                        a: {
                            e = xc(e), f = ja.onSelect;
                            for (var g = 0; g < f.length; g++) if (!e.has(f[g])) {
                                e = !1;
                                break a;
                            }
                            e = !0;
                        }
                        f = !e;
                    }
                    if (f) return null;
                    switch (e = b ? xe(b) : window, a) {
                      case "focus":
                        (Ue(e) || "true" === e.contentEditable) && (tf = e, uf = b, vf = null);
                        break;

                      case "blur":
                        vf = uf = tf = null;
                        break;

                      case "mousedown":
                        wf = !0;
                        break;

                      case "contextmenu":
                      case "mouseup":
                      case "dragend":
                        return wf = !1, xf(c, d);

                      case "selectionchange":
                        if (rf) break;

                      case "keydown":
                      case "keyup":
                        return xf(c, d);
                    }
                    return null;
                }
            };
            Ca.injectEventPluginOrder("ResponderEventPlugin SimpleEventPlugin EnterLeaveEventPlugin ChangeEventPlugin SelectEventPlugin BeforeInputEventPlugin".split(" ")), 
            sa = ye, ua = Cc, va = xe, Ca.injectEventPluginsByName({
                SimpleEventPlugin: Ed,
                EnterLeaveEventPlugin: mf,
                ChangeEventPlugin: jf,
                SelectEventPlugin: yf,
                BeforeInputEventPlugin: Se
            }), new Set();
            var Af = [], Bf = -1;
            function G(a) {
                0 > Bf || (a.current = Af[Bf], Af[Bf] = null, Bf--);
            }
            function I(a, b) {
                Af[++Bf] = a.current, a.current = b;
            }
            var Cf = {}, J = {
                current: Cf
            }, K = {
                current: !1
            }, Df = Cf;
            function Ef(a, b) {
                var c = a.type.contextTypes;
                if (!c) return Cf;
                var d = a.stateNode;
                if (d && d.__reactInternalMemoizedUnmaskedChildContext === b) return d.__reactInternalMemoizedMaskedChildContext;
                var f, e = {};
                for (f in c) e[f] = b[f];
                return d && ((a = a.stateNode).__reactInternalMemoizedUnmaskedChildContext = b, 
                a.__reactInternalMemoizedMaskedChildContext = e), e;
            }
            function L(a) {
                return null !== (a = a.childContextTypes) && void 0 !== a;
            }
            function Ff(a) {
                G(K), G(J);
            }
            function Gf(a) {
                G(K), G(J);
            }
            function Hf(a, b, c) {
                if (J.current !== Cf) throw Error(u(168));
                I(J, b), I(K, c);
            }
            function If(a, b, c) {
                var d = a.stateNode;
                if (a = b.childContextTypes, "function" != typeof d.getChildContext) return c;
                for (var e in d = d.getChildContext()) if (!(e in a)) throw Error(u(108, Wa(b) || "Unknown", e));
                return n({}, c, {}, d);
            }
            function Jf(a) {
                var b = a.stateNode;
                return b = b && b.__reactInternalMemoizedMergedChildContext || Cf, Df = J.current, 
                I(J, b), I(K, K.current), !0;
            }
            function Kf(a, b, c) {
                var d = a.stateNode;
                if (!d) throw Error(u(169));
                c ? (b = If(a, b, Df), d.__reactInternalMemoizedMergedChildContext = b, G(K), G(J), 
                I(J, b)) : G(K), I(K, c);
            }
            var Lf = q.unstable_runWithPriority, Mf = q.unstable_scheduleCallback, Nf = q.unstable_cancelCallback, Of = q.unstable_shouldYield, Pf = q.unstable_requestPaint, Qf = q.unstable_now, Rf = q.unstable_getCurrentPriorityLevel, Sf = q.unstable_ImmediatePriority, Tf = q.unstable_UserBlockingPriority, Uf = q.unstable_NormalPriority, Vf = q.unstable_LowPriority, Wf = q.unstable_IdlePriority, Xf = {}, Yf = void 0 !== Pf ? Pf : function() {}, Zf = null, $f = null, ag = !1, bg = Qf(), cg = 1e4 > bg ? Qf : function() {
                return Qf() - bg;
            };
            function dg() {
                switch (Rf()) {
                  case Sf:
                    return 99;

                  case Tf:
                    return 98;

                  case Uf:
                    return 97;

                  case Vf:
                    return 96;

                  case Wf:
                    return 95;

                  default:
                    throw Error(u(332));
                }
            }
            function eg(a) {
                switch (a) {
                  case 99:
                    return Sf;

                  case 98:
                    return Tf;

                  case 97:
                    return Uf;

                  case 96:
                    return Vf;

                  case 95:
                    return Wf;

                  default:
                    throw Error(u(332));
                }
            }
            function fg(a, b) {
                return a = eg(a), Lf(a, b);
            }
            function gg(a, b, c) {
                return a = eg(a), Mf(a, b, c);
            }
            function hg(a) {
                return null === Zf ? (Zf = [ a ], $f = Mf(Sf, ig)) : Zf.push(a), Xf;
            }
            function jg() {
                if (null !== $f) {
                    var a = $f;
                    $f = null, Nf(a);
                }
                ig();
            }
            function ig() {
                if (!ag && null !== Zf) {
                    ag = !0;
                    var a = 0;
                    try {
                        var b = Zf;
                        fg(99, function() {
                            for (;a < b.length; a++) {
                                var c = b[a];
                                do {
                                    c = c(!0);
                                } while (null !== c);
                            }
                        }), Zf = null;
                    } catch (c) {
                        throw null !== Zf && (Zf = Zf.slice(a + 1)), Mf(Sf, jg), c;
                    } finally {
                        ag = !1;
                    }
                }
            }
            var kg = 3;
            function lg(a, b, c) {
                return 1073741821 - (1 + ((1073741821 - a + b / 10) / (c /= 10) | 0)) * c;
            }
            function mg(a, b) {
                if (a && a.defaultProps) for (var c in b = n({}, b), a = a.defaultProps) void 0 === b[c] && (b[c] = a[c]);
                return b;
            }
            var ng = {
                current: null
            }, og = null, pg = null, qg = null;
            function rg() {
                qg = pg = og = null;
            }
            function sg(a, b) {
                var c = a.type._context;
                I(ng, c._currentValue), c._currentValue = b;
            }
            function tg(a) {
                var b = ng.current;
                G(ng), a.type._context._currentValue = b;
            }
            function ug(a, b) {
                for (;null !== a; ) {
                    var c = a.alternate;
                    if (a.childExpirationTime < b) a.childExpirationTime = b, null !== c && c.childExpirationTime < b && (c.childExpirationTime = b); else {
                        if (!(null !== c && c.childExpirationTime < b)) break;
                        c.childExpirationTime = b;
                    }
                    a = a.return;
                }
            }
            function vg(a, b) {
                og = a, qg = pg = null, null !== (a = a.dependencies) && null !== a.firstContext && (a.expirationTime >= b && (wg = !0), 
                a.firstContext = null);
            }
            function xg(a, b) {
                if (qg !== a && !1 !== b && 0 !== b) if ("number" == typeof b && 1073741823 !== b || (qg = a, 
                b = 1073741823), b = {
                    context: a,
                    observedBits: b,
                    next: null
                }, null === pg) {
                    if (null === og) throw Error(u(308));
                    pg = b, og.dependencies = {
                        expirationTime: 0,
                        firstContext: b,
                        responders: null
                    };
                } else pg = pg.next = b;
                return a._currentValue;
            }
            var yg = !1;
            function zg(a) {
                return {
                    baseState: a,
                    firstUpdate: null,
                    lastUpdate: null,
                    firstCapturedUpdate: null,
                    lastCapturedUpdate: null,
                    firstEffect: null,
                    lastEffect: null,
                    firstCapturedEffect: null,
                    lastCapturedEffect: null
                };
            }
            function Ag(a) {
                return {
                    baseState: a.baseState,
                    firstUpdate: a.firstUpdate,
                    lastUpdate: a.lastUpdate,
                    firstCapturedUpdate: null,
                    lastCapturedUpdate: null,
                    firstEffect: null,
                    lastEffect: null,
                    firstCapturedEffect: null,
                    lastCapturedEffect: null
                };
            }
            function Bg(a, b) {
                return {
                    expirationTime: a,
                    suspenseConfig: b,
                    tag: 0,
                    payload: null,
                    callback: null,
                    next: null,
                    nextEffect: null
                };
            }
            function Cg(a, b) {
                null === a.lastUpdate ? a.firstUpdate = a.lastUpdate = b : (a.lastUpdate.next = b, 
                a.lastUpdate = b);
            }
            function Dg(a, b) {
                var c = a.alternate;
                if (null === c) {
                    var d = a.updateQueue, e = null;
                    null === d && (d = a.updateQueue = zg(a.memoizedState));
                } else d = a.updateQueue, e = c.updateQueue, null === d ? null === e ? (d = a.updateQueue = zg(a.memoizedState), 
                e = c.updateQueue = zg(c.memoizedState)) : d = a.updateQueue = Ag(e) : null === e && (e = c.updateQueue = Ag(d));
                null === e || d === e ? Cg(d, b) : null === d.lastUpdate || null === e.lastUpdate ? (Cg(d, b), 
                Cg(e, b)) : (Cg(d, b), e.lastUpdate = b);
            }
            function Eg(a, b) {
                var c = a.updateQueue;
                null === (c = null === c ? a.updateQueue = zg(a.memoizedState) : Fg(a, c)).lastCapturedUpdate ? c.firstCapturedUpdate = c.lastCapturedUpdate = b : (c.lastCapturedUpdate.next = b, 
                c.lastCapturedUpdate = b);
            }
            function Fg(a, b) {
                var c = a.alternate;
                return null !== c && b === c.updateQueue && (b = a.updateQueue = Ag(b)), b;
            }
            function Gg(a, b, c, d, e, f) {
                switch (c.tag) {
                  case 1:
                    return "function" == typeof (a = c.payload) ? a.call(f, d, e) : a;

                  case 3:
                    a.effectTag = -4097 & a.effectTag | 64;

                  case 0:
                    if (null === (e = "function" == typeof (a = c.payload) ? a.call(f, d, e) : a) || void 0 === e) break;
                    return n({}, d, e);

                  case 2:
                    yg = !0;
                }
                return d;
            }
            function Hg(a, b, c, d, e) {
                yg = !1;
                for (var f = (b = Fg(a, b)).baseState, g = null, h = 0, k = b.firstUpdate, l = f; null !== k; ) {
                    var m = k.expirationTime;
                    m < e ? (null === g && (g = k, f = l), h < m && (h = m)) : (Ig(m, k.suspenseConfig), 
                    l = Gg(a, 0, k, l, c, d), null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, 
                    null === b.lastEffect ? b.firstEffect = b.lastEffect = k : (b.lastEffect.nextEffect = k, 
                    b.lastEffect = k))), k = k.next;
                }
                for (m = null, k = b.firstCapturedUpdate; null !== k; ) {
                    var C = k.expirationTime;
                    C < e ? (null === m && (m = k, null === g && (f = l)), h < C && (h = C)) : (l = Gg(a, 0, k, l, c, d), 
                    null !== k.callback && (a.effectTag |= 32, k.nextEffect = null, null === b.lastCapturedEffect ? b.firstCapturedEffect = b.lastCapturedEffect = k : (b.lastCapturedEffect.nextEffect = k, 
                    b.lastCapturedEffect = k))), k = k.next;
                }
                null === g && (b.lastUpdate = null), null === m ? b.lastCapturedUpdate = null : a.effectTag |= 32, 
                null === g && null === m && (f = l), b.baseState = f, b.firstUpdate = g, b.firstCapturedUpdate = m, 
                Jg(h), a.expirationTime = h, a.memoizedState = l;
            }
            function Kg(a, b, c) {
                null !== b.firstCapturedUpdate && (null !== b.lastUpdate && (b.lastUpdate.next = b.firstCapturedUpdate, 
                b.lastUpdate = b.lastCapturedUpdate), b.firstCapturedUpdate = b.lastCapturedUpdate = null), 
                Lg(b.firstEffect, c), b.firstEffect = b.lastEffect = null, Lg(b.firstCapturedEffect, c), 
                b.firstCapturedEffect = b.lastCapturedEffect = null;
            }
            function Lg(a, b) {
                for (;null !== a; ) {
                    var c = a.callback;
                    if (null !== c) {
                        a.callback = null;
                        var d = b;
                        if ("function" != typeof c) throw Error(u(191, c));
                        c.call(d);
                    }
                    a = a.nextEffect;
                }
            }
            var Mg = Ea.ReactCurrentBatchConfig, Ng = new aa.Component().refs;
            function Og(a, b, c, d) {
                c = null === (c = c(d, b = a.memoizedState)) || void 0 === c ? b : n({}, b, c), 
                a.memoizedState = c, null !== (d = a.updateQueue) && 0 === a.expirationTime && (d.baseState = c);
            }
            var Sg = {
                isMounted: function(a) {
                    return !!(a = a._reactInternalFiber) && ec(a) === a;
                },
                enqueueSetState: function(a, b, c) {
                    a = a._reactInternalFiber;
                    var d = Pg(), e = Mg.suspense;
                    (e = Bg(d = Qg(d, a, e), e)).payload = b, void 0 !== c && null !== c && (e.callback = c), 
                    Dg(a, e), Rg(a, d);
                },
                enqueueReplaceState: function(a, b, c) {
                    a = a._reactInternalFiber;
                    var d = Pg(), e = Mg.suspense;
                    (e = Bg(d = Qg(d, a, e), e)).tag = 1, e.payload = b, void 0 !== c && null !== c && (e.callback = c), 
                    Dg(a, e), Rg(a, d);
                },
                enqueueForceUpdate: function(a, b) {
                    a = a._reactInternalFiber;
                    var c = Pg(), d = Mg.suspense;
                    (d = Bg(c = Qg(c, a, d), d)).tag = 2, void 0 !== b && null !== b && (d.callback = b), 
                    Dg(a, d), Rg(a, c);
                }
            };
            function Tg(a, b, c, d, e, f, g) {
                return "function" == typeof (a = a.stateNode).shouldComponentUpdate ? a.shouldComponentUpdate(d, f, g) : !b.prototype || !b.prototype.isPureReactComponent || (!qf(c, d) || !qf(e, f));
            }
            function Ug(a, b, c) {
                var d = !1, e = Cf, f = b.contextType;
                return "object" == typeof f && null !== f ? f = xg(f) : (e = L(b) ? Df : J.current, 
                f = (d = null !== (d = b.contextTypes) && void 0 !== d) ? Ef(a, e) : Cf), b = new b(c, f), 
                a.memoizedState = null !== b.state && void 0 !== b.state ? b.state : null, b.updater = Sg, 
                a.stateNode = b, b._reactInternalFiber = a, d && ((a = a.stateNode).__reactInternalMemoizedUnmaskedChildContext = e, 
                a.__reactInternalMemoizedMaskedChildContext = f), b;
            }
            function Vg(a, b, c, d) {
                a = b.state, "function" == typeof b.componentWillReceiveProps && b.componentWillReceiveProps(c, d), 
                "function" == typeof b.UNSAFE_componentWillReceiveProps && b.UNSAFE_componentWillReceiveProps(c, d), 
                b.state !== a && Sg.enqueueReplaceState(b, b.state, null);
            }
            function Wg(a, b, c, d) {
                var e = a.stateNode;
                e.props = c, e.state = a.memoizedState, e.refs = Ng;
                var f = b.contextType;
                "object" == typeof f && null !== f ? e.context = xg(f) : (f = L(b) ? Df : J.current, 
                e.context = Ef(a, f)), null !== (f = a.updateQueue) && (Hg(a, f, c, e, d), e.state = a.memoizedState), 
                "function" == typeof (f = b.getDerivedStateFromProps) && (Og(a, b, f, c), e.state = a.memoizedState), 
                "function" == typeof b.getDerivedStateFromProps || "function" == typeof e.getSnapshotBeforeUpdate || "function" != typeof e.UNSAFE_componentWillMount && "function" != typeof e.componentWillMount || (b = e.state, 
                "function" == typeof e.componentWillMount && e.componentWillMount(), "function" == typeof e.UNSAFE_componentWillMount && e.UNSAFE_componentWillMount(), 
                b !== e.state && Sg.enqueueReplaceState(e, e.state, null), null !== (f = a.updateQueue) && (Hg(a, f, c, e, d), 
                e.state = a.memoizedState)), "function" == typeof e.componentDidMount && (a.effectTag |= 4);
            }
            var Xg = Array.isArray;
            function Yg(a, b, c) {
                if (null !== (a = c.ref) && "function" != typeof a && "object" != typeof a) {
                    if (c._owner) {
                        if (c = c._owner) {
                            if (1 !== c.tag) throw Error(u(309));
                            var d = c.stateNode;
                        }
                        if (!d) throw Error(u(147, a));
                        var e = "" + a;
                        return null !== b && null !== b.ref && "function" == typeof b.ref && b.ref._stringRef === e ? b.ref : ((b = function(a) {
                            var b = d.refs;
                            b === Ng && (b = d.refs = {}), null === a ? delete b[e] : b[e] = a;
                        })._stringRef = e, b);
                    }
                    if ("string" != typeof a) throw Error(u(284));
                    if (!c._owner) throw Error(u(290, a));
                }
                return a;
            }
            function Zg(a, b) {
                if ("textarea" !== a.type) throw Error(u(31, "[object Object]" === Object.prototype.toString.call(b) ? "object with keys {" + Object.keys(b).join(", ") + "}" : b, ""));
            }
            function $g(a) {
                function b(b, c) {
                    if (a) {
                        var d = b.lastEffect;
                        null !== d ? (d.nextEffect = c, b.lastEffect = c) : b.firstEffect = b.lastEffect = c, 
                        c.nextEffect = null, c.effectTag = 8;
                    }
                }
                function c(c, d) {
                    if (!a) return null;
                    for (;null !== d; ) b(c, d), d = d.sibling;
                    return null;
                }
                function d(a, b) {
                    for (a = new Map(); null !== b; ) null !== b.key ? a.set(b.key, b) : a.set(b.index, b), 
                    b = b.sibling;
                    return a;
                }
                function e(a, b, c) {
                    return (a = ah(a, b)).index = 0, a.sibling = null, a;
                }
                function f(b, c, d) {
                    return b.index = d, a ? null !== (d = b.alternate) ? (d = d.index) < c ? (b.effectTag = 2, 
                    c) : d : (b.effectTag = 2, c) : c;
                }
                function g(b) {
                    return a && null === b.alternate && (b.effectTag = 2), b;
                }
                function h(a, b, c, d) {
                    return null === b || 6 !== b.tag ? ((b = bh(c, a.mode, d)).return = a, b) : ((b = e(b, c)).return = a, 
                    b);
                }
                function k(a, b, c, d) {
                    return null !== b && b.elementType === c.type ? ((d = e(b, c.props)).ref = Yg(a, b, c), 
                    d.return = a, d) : ((d = ch(c.type, c.key, c.props, null, a.mode, d)).ref = Yg(a, b, c), 
                    d.return = a, d);
                }
                function l(a, b, c, d) {
                    return null === b || 4 !== b.tag || b.stateNode.containerInfo !== c.containerInfo || b.stateNode.implementation !== c.implementation ? ((b = dh(c, a.mode, d)).return = a, 
                    b) : ((b = e(b, c.children || [])).return = a, b);
                }
                function m(a, b, c, d, f) {
                    return null === b || 7 !== b.tag ? ((b = eh(c, a.mode, d, f)).return = a, b) : ((b = e(b, c)).return = a, 
                    b);
                }
                function C(a, b, c) {
                    if ("string" == typeof b || "number" == typeof b) return (b = bh("" + b, a.mode, c)).return = a, 
                    b;
                    if ("object" == typeof b && null !== b) {
                        switch (b.$$typeof) {
                          case Ga:
                            return (c = ch(b.type, b.key, b.props, null, a.mode, c)).ref = Yg(a, null, b), c.return = a, 
                            c;

                          case Ha:
                            return (b = dh(b, a.mode, c)).return = a, b;
                        }
                        if (Xg(b) || Ua(b)) return (b = eh(b, a.mode, c, null)).return = a, b;
                        Zg(a, b);
                    }
                    return null;
                }
                function y(a, b, c, d) {
                    var e = null !== b ? b.key : null;
                    if ("string" == typeof c || "number" == typeof c) return null !== e ? null : h(a, b, "" + c, d);
                    if ("object" == typeof c && null !== c) {
                        switch (c.$$typeof) {
                          case Ga:
                            return c.key === e ? c.type === Ia ? m(a, b, c.props.children, d, e) : k(a, b, c, d) : null;

                          case Ha:
                            return c.key === e ? l(a, b, c, d) : null;
                        }
                        if (Xg(c) || Ua(c)) return null !== e ? null : m(a, b, c, d, null);
                        Zg(a, c);
                    }
                    return null;
                }
                function H(a, b, c, d, e) {
                    if ("string" == typeof d || "number" == typeof d) return h(b, a = a.get(c) || null, "" + d, e);
                    if ("object" == typeof d && null !== d) {
                        switch (d.$$typeof) {
                          case Ga:
                            return a = a.get(null === d.key ? c : d.key) || null, d.type === Ia ? m(b, a, d.props.children, e, d.key) : k(b, a, d, e);

                          case Ha:
                            return l(b, a = a.get(null === d.key ? c : d.key) || null, d, e);
                        }
                        if (Xg(d) || Ua(d)) return m(b, a = a.get(c) || null, d, e, null);
                        Zg(b, d);
                    }
                    return null;
                }
                function z(e, g, h, k) {
                    for (var l = null, m = null, r = g, x = g = 0, A = null; null !== r && x < h.length; x++) {
                        r.index > x ? (A = r, r = null) : A = r.sibling;
                        var p = y(e, r, h[x], k);
                        if (null === p) {
                            null === r && (r = A);
                            break;
                        }
                        a && r && null === p.alternate && b(e, r), g = f(p, g, x), null === m ? l = p : m.sibling = p, 
                        m = p, r = A;
                    }
                    if (x === h.length) return c(e, r), l;
                    if (null === r) {
                        for (;x < h.length; x++) null !== (r = C(e, h[x], k)) && (g = f(r, g, x), null === m ? l = r : m.sibling = r, 
                        m = r);
                        return l;
                    }
                    for (r = d(e, r); x < h.length; x++) null !== (A = H(r, e, x, h[x], k)) && (a && null !== A.alternate && r.delete(null === A.key ? x : A.key), 
                    g = f(A, g, x), null === m ? l = A : m.sibling = A, m = A);
                    return a && r.forEach(function(a) {
                        return b(e, a);
                    }), l;
                }
                function ta(e, g, h, k) {
                    var l = Ua(h);
                    if ("function" != typeof l) throw Error(u(150));
                    if (null == (h = l.call(h))) throw Error(u(151));
                    for (var m = l = null, r = g, x = g = 0, A = null, p = h.next(); null !== r && !p.done; x++, 
                    p = h.next()) {
                        r.index > x ? (A = r, r = null) : A = r.sibling;
                        var z = y(e, r, p.value, k);
                        if (null === z) {
                            null === r && (r = A);
                            break;
                        }
                        a && r && null === z.alternate && b(e, r), g = f(z, g, x), null === m ? l = z : m.sibling = z, 
                        m = z, r = A;
                    }
                    if (p.done) return c(e, r), l;
                    if (null === r) {
                        for (;!p.done; x++, p = h.next()) null !== (p = C(e, p.value, k)) && (g = f(p, g, x), 
                        null === m ? l = p : m.sibling = p, m = p);
                        return l;
                    }
                    for (r = d(e, r); !p.done; x++, p = h.next()) null !== (p = H(r, e, x, p.value, k)) && (a && null !== p.alternate && r.delete(null === p.key ? x : p.key), 
                    g = f(p, g, x), null === m ? l = p : m.sibling = p, m = p);
                    return a && r.forEach(function(a) {
                        return b(e, a);
                    }), l;
                }
                return function(a, d, f, h) {
                    var k = "object" == typeof f && null !== f && f.type === Ia && null === f.key;
                    k && (f = f.props.children);
                    var l = "object" == typeof f && null !== f;
                    if (l) switch (f.$$typeof) {
                      case Ga:
                        a: {
                            for (l = f.key, k = d; null !== k; ) {
                                if (k.key === l) {
                                    if (7 === k.tag ? f.type === Ia : k.elementType === f.type) {
                                        c(a, k.sibling), (d = e(k, f.type === Ia ? f.props.children : f.props)).ref = Yg(a, k, f), 
                                        d.return = a, a = d;
                                        break a;
                                    }
                                    c(a, k);
                                    break;
                                }
                                b(a, k), k = k.sibling;
                            }
                            f.type === Ia ? ((d = eh(f.props.children, a.mode, h, f.key)).return = a, a = d) : ((h = ch(f.type, f.key, f.props, null, a.mode, h)).ref = Yg(a, d, f), 
                            h.return = a, a = h);
                        }
                        return g(a);

                      case Ha:
                        a: {
                            for (k = f.key; null !== d; ) {
                                if (d.key === k) {
                                    if (4 === d.tag && d.stateNode.containerInfo === f.containerInfo && d.stateNode.implementation === f.implementation) {
                                        c(a, d.sibling), (d = e(d, f.children || [])).return = a, a = d;
                                        break a;
                                    }
                                    c(a, d);
                                    break;
                                }
                                b(a, d), d = d.sibling;
                            }
                            (d = dh(f, a.mode, h)).return = a, a = d;
                        }
                        return g(a);
                    }
                    if ("string" == typeof f || "number" == typeof f) return f = "" + f, null !== d && 6 === d.tag ? (c(a, d.sibling), 
                    (d = e(d, f)).return = a, a = d) : (c(a, d), (d = bh(f, a.mode, h)).return = a, 
                    a = d), g(a);
                    if (Xg(f)) return z(a, d, f, h);
                    if (Ua(f)) return ta(a, d, f, h);
                    if (l && Zg(a, f), void 0 === f && !k) switch (a.tag) {
                      case 1:
                      case 0:
                        throw a = a.type, Error(u(152, a.displayName || a.name || "Component"));
                    }
                    return c(a, d);
                };
            }
            var fh = $g(!0), gh = $g(!1), hh = {}, ih = {
                current: hh
            }, jh = {
                current: hh
            }, kh = {
                current: hh
            };
            function lh(a) {
                if (a === hh) throw Error(u(174));
                return a;
            }
            function mh(a, b) {
                I(kh, b), I(jh, a), I(ih, hh);
                var c = b.nodeType;
                switch (c) {
                  case 9:
                  case 11:
                    b = (b = b.documentElement) ? b.namespaceURI : Qb(null, "");
                    break;

                  default:
                    b = Qb(b = (c = 8 === c ? b.parentNode : b).namespaceURI || null, c = c.tagName);
                }
                G(ih), I(ih, b);
            }
            function nh(a) {
                G(ih), G(jh), G(kh);
            }
            function oh(a) {
                lh(kh.current);
                var b = lh(ih.current), c = Qb(b, a.type);
                b !== c && (I(jh, a), I(ih, c));
            }
            function ph(a) {
                jh.current === a && (G(ih), G(jh));
            }
            var M = {
                current: 0
            };
            function qh(a) {
                for (var b = a; null !== b; ) {
                    if (13 === b.tag) {
                        var c = b.memoizedState;
                        if (null !== c && (null === (c = c.dehydrated) || c.data === je || c.data === ke)) return b;
                    } else if (19 === b.tag && void 0 !== b.memoizedProps.revealOrder) {
                        if (0 != (64 & b.effectTag)) return b;
                    } else if (null !== b.child) {
                        b.child.return = b, b = b.child;
                        continue;
                    }
                    if (b === a) break;
                    for (;null === b.sibling; ) {
                        if (null === b.return || b.return === a) return null;
                        b = b.return;
                    }
                    b.sibling.return = b.return, b = b.sibling;
                }
                return null;
            }
            function rh(a, b) {
                return {
                    responder: a,
                    props: b
                };
            }
            var sh = Ea.ReactCurrentDispatcher, N = Ea.ReactCurrentBatchConfig, th = 0, uh = null, O = null, vh = null, wh = null, P = null, xh = null, yh = 0, zh = null, Ah = 0, Bh = !1, Ch = null, Gh = 0;
            function Q() {
                throw Error(u(321));
            }
            function Hh(a, b) {
                if (null === b) return !1;
                for (var c = 0; c < b.length && c < a.length; c++) if (!of(a[c], b[c])) return !1;
                return !0;
            }
            function Ih(a, b, c, d, e, f) {
                if (th = f, uh = b, vh = null !== a ? a.memoizedState : null, sh.current = null === vh ? Jh : Kh, 
                b = c(d, e), Bh) {
                    do {
                        Bh = !1, Gh += 1, vh = null !== a ? a.memoizedState : null, xh = wh, zh = P = O = null, 
                        sh.current = Kh, b = c(d, e);
                    } while (Bh);
                    Ch = null, Gh = 0;
                }
                if (sh.current = Lh, (a = uh).memoizedState = wh, a.expirationTime = yh, a.updateQueue = zh, 
                a.effectTag |= Ah, a = null !== O && null !== O.next, th = 0, xh = P = wh = vh = O = uh = null, 
                yh = 0, zh = null, Ah = 0, a) throw Error(u(300));
                return b;
            }
            function Mh() {
                sh.current = Lh, th = 0, xh = P = wh = vh = O = uh = null, yh = 0, zh = null, Ah = 0, 
                Bh = !1, Ch = null, Gh = 0;
            }
            function Nh() {
                var a = {
                    memoizedState: null,
                    baseState: null,
                    queue: null,
                    baseUpdate: null,
                    next: null
                };
                return null === P ? wh = P = a : P = P.next = a, P;
            }
            function Oh() {
                if (null !== xh) xh = (P = xh).next, vh = null !== (O = vh) ? O.next : null; else {
                    if (null === vh) throw Error(u(310));
                    var a = {
                        memoizedState: (O = vh).memoizedState,
                        baseState: O.baseState,
                        queue: O.queue,
                        baseUpdate: O.baseUpdate,
                        next: null
                    };
                    P = null === P ? wh = a : P.next = a, vh = O.next;
                }
                return P;
            }
            function Ph(a, b) {
                return "function" == typeof b ? b(a) : b;
            }
            function Qh(a) {
                var b = Oh(), c = b.queue;
                if (null === c) throw Error(u(311));
                if (c.lastRenderedReducer = a, 0 < Gh) {
                    var d = c.dispatch;
                    if (null !== Ch) {
                        var e = Ch.get(c);
                        if (void 0 !== e) {
                            Ch.delete(c);
                            var f = b.memoizedState;
                            do {
                                f = a(f, e.action), e = e.next;
                            } while (null !== e);
                            return of(f, b.memoizedState) || (wg = !0), b.memoizedState = f, b.baseUpdate === c.last && (b.baseState = f), 
                            c.lastRenderedState = f, [ f, d ];
                        }
                    }
                    return [ b.memoizedState, d ];
                }
                d = c.last;
                var g = b.baseUpdate;
                if (f = b.baseState, null !== g ? (null !== d && (d.next = null), d = g.next) : d = null !== d ? d.next : null, 
                null !== d) {
                    var h = e = null, k = d, l = !1;
                    do {
                        var m = k.expirationTime;
                        m < th ? (l || (l = !0, h = g, e = f), m > yh && Jg(yh = m)) : (Ig(m, k.suspenseConfig), 
                        f = k.eagerReducer === a ? k.eagerState : a(f, k.action)), g = k, k = k.next;
                    } while (null !== k && k !== d);
                    l || (h = g, e = f), of(f, b.memoizedState) || (wg = !0), b.memoizedState = f, b.baseUpdate = h, 
                    b.baseState = e, c.lastRenderedState = f;
                }
                return [ b.memoizedState, c.dispatch ];
            }
            function Rh(a) {
                var b = Nh();
                return "function" == typeof a && (a = a()), b.memoizedState = b.baseState = a, a = (a = b.queue = {
                    last: null,
                    dispatch: null,
                    lastRenderedReducer: Ph,
                    lastRenderedState: a
                }).dispatch = Sh.bind(null, uh, a), [ b.memoizedState, a ];
            }
            function Th(a) {
                return Qh(Ph);
            }
            function Uh(a, b, c, d) {
                return a = {
                    tag: a,
                    create: b,
                    destroy: c,
                    deps: d,
                    next: null
                }, null === zh ? (zh = {
                    lastEffect: null
                }).lastEffect = a.next = a : null === (b = zh.lastEffect) ? zh.lastEffect = a.next = a : (c = b.next, 
                b.next = a, a.next = c, zh.lastEffect = a), a;
            }
            function Vh(a, b, c, d) {
                var e = Nh();
                Ah |= a, e.memoizedState = Uh(b, c, void 0, void 0 === d ? null : d);
            }
            function Wh(a, b, c, d) {
                var e = Oh();
                d = void 0 === d ? null : d;
                var f = void 0;
                if (null !== O) {
                    var g = O.memoizedState;
                    if (f = g.destroy, null !== d && Hh(d, g.deps)) return void Uh(0, c, f, d);
                }
                Ah |= a, e.memoizedState = Uh(b, c, f, d);
            }
            function Xh(a, b) {
                return Vh(516, 192, a, b);
            }
            function Yh(a, b) {
                return Wh(516, 192, a, b);
            }
            function Zh(a, b) {
                return "function" == typeof b ? (a = a(), b(a), function() {
                    b(null);
                }) : null !== b && void 0 !== b ? (a = a(), b.current = a, function() {
                    b.current = null;
                }) : void 0;
            }
            function $h() {}
            function ai(a, b) {
                return Nh().memoizedState = [ a, void 0 === b ? null : b ], a;
            }
            function bi(a, b) {
                var c = Oh();
                b = void 0 === b ? null : b;
                var d = c.memoizedState;
                return null !== d && null !== b && Hh(b, d[1]) ? d[0] : (c.memoizedState = [ a, b ], 
                a);
            }
            function Sh(a, b, c) {
                if (!(25 > Gh)) throw Error(u(301));
                var d = a.alternate;
                if (a === uh || null !== d && d === uh) if (Bh = !0, a = {
                    expirationTime: th,
                    suspenseConfig: null,
                    action: c,
                    eagerReducer: null,
                    eagerState: null,
                    next: null
                }, null === Ch && (Ch = new Map()), void 0 === (c = Ch.get(b))) Ch.set(b, a); else {
                    for (b = c; null !== b.next; ) b = b.next;
                    b.next = a;
                } else {
                    var e = Pg(), f = Mg.suspense;
                    f = {
                        expirationTime: e = Qg(e, a, f),
                        suspenseConfig: f,
                        action: c,
                        eagerReducer: null,
                        eagerState: null,
                        next: null
                    };
                    var g = b.last;
                    if (null === g) f.next = f; else {
                        var h = g.next;
                        null !== h && (f.next = h), g.next = f;
                    }
                    if (b.last = f, 0 === a.expirationTime && (null === d || 0 === d.expirationTime) && null !== (d = b.lastRenderedReducer)) try {
                        var k = b.lastRenderedState, l = d(k, c);
                        if (f.eagerReducer = d, f.eagerState = l, of(l, k)) return;
                    } catch (m) {}
                    Rg(a, e);
                }
            }
            var Lh = {
                readContext: xg,
                useCallback: Q,
                useContext: Q,
                useEffect: Q,
                useImperativeHandle: Q,
                useLayoutEffect: Q,
                useMemo: Q,
                useReducer: Q,
                useRef: Q,
                useState: Q,
                useDebugValue: Q,
                useResponder: Q,
                useDeferredValue: Q,
                useTransition: Q
            }, Jh = {
                readContext: xg,
                useCallback: ai,
                useContext: xg,
                useEffect: Xh,
                useImperativeHandle: function(a, b, c) {
                    return c = null !== c && void 0 !== c ? c.concat([ a ]) : null, Vh(4, 36, Zh.bind(null, b, a), c);
                },
                useLayoutEffect: function(a, b) {
                    return Vh(4, 36, a, b);
                },
                useMemo: function(a, b) {
                    var c = Nh();
                    return b = void 0 === b ? null : b, a = a(), c.memoizedState = [ a, b ], a;
                },
                useReducer: function(a, b, c) {
                    var d = Nh();
                    return b = void 0 !== c ? c(b) : b, d.memoizedState = d.baseState = b, a = (a = d.queue = {
                        last: null,
                        dispatch: null,
                        lastRenderedReducer: a,
                        lastRenderedState: b
                    }).dispatch = Sh.bind(null, uh, a), [ d.memoizedState, a ];
                },
                useRef: function(a) {
                    return a = {
                        current: a
                    }, Nh().memoizedState = a;
                },
                useState: Rh,
                useDebugValue: $h,
                useResponder: rh,
                useDeferredValue: function(a, b) {
                    var c = Rh(a), d = c[0], e = c[1];
                    return Xh(function() {
                        q.unstable_next(function() {
                            var c = N.suspense;
                            N.suspense = void 0 === b ? null : b;
                            try {
                                e(a);
                            } finally {
                                N.suspense = c;
                            }
                        });
                    }, [ a, b ]), d;
                },
                useTransition: function(a) {
                    var b = Rh(!1), c = b[0], d = b[1];
                    return [ ai(function(b) {
                        d(!0), q.unstable_next(function() {
                            var c = N.suspense;
                            N.suspense = void 0 === a ? null : a;
                            try {
                                d(!1), b();
                            } finally {
                                N.suspense = c;
                            }
                        });
                    }, [ a, c ]), c ];
                }
            }, Kh = {
                readContext: xg,
                useCallback: bi,
                useContext: xg,
                useEffect: Yh,
                useImperativeHandle: function(a, b, c) {
                    return c = null !== c && void 0 !== c ? c.concat([ a ]) : null, Wh(4, 36, Zh.bind(null, b, a), c);
                },
                useLayoutEffect: function(a, b) {
                    return Wh(4, 36, a, b);
                },
                useMemo: function(a, b) {
                    var c = Oh();
                    b = void 0 === b ? null : b;
                    var d = c.memoizedState;
                    return null !== d && null !== b && Hh(b, d[1]) ? d[0] : (a = a(), c.memoizedState = [ a, b ], 
                    a);
                },
                useReducer: Qh,
                useRef: function() {
                    return Oh().memoizedState;
                },
                useState: Th,
                useDebugValue: $h,
                useResponder: rh,
                useDeferredValue: function(a, b) {
                    var c = Th(), d = c[0], e = c[1];
                    return Yh(function() {
                        q.unstable_next(function() {
                            var c = N.suspense;
                            N.suspense = void 0 === b ? null : b;
                            try {
                                e(a);
                            } finally {
                                N.suspense = c;
                            }
                        });
                    }, [ a, b ]), d;
                },
                useTransition: function(a) {
                    var b = Th(), c = b[0], d = b[1];
                    return [ bi(function(b) {
                        d(!0), q.unstable_next(function() {
                            var c = N.suspense;
                            N.suspense = void 0 === a ? null : a;
                            try {
                                d(!1), b();
                            } finally {
                                N.suspense = c;
                            }
                        });
                    }, [ a, c ]), c ];
                }
            }, ci = null, di = null, ei = !1;
            function fi(a, b) {
                var c = gi(5, null, null, 0);
                c.elementType = "DELETED", c.type = "DELETED", c.stateNode = b, c.return = a, c.effectTag = 8, 
                null !== a.lastEffect ? (a.lastEffect.nextEffect = c, a.lastEffect = c) : a.firstEffect = a.lastEffect = c;
            }
            function hi(a, b) {
                switch (a.tag) {
                  case 5:
                    var c = a.type;
                    return null !== (b = 1 !== b.nodeType || c.toLowerCase() !== b.nodeName.toLowerCase() ? null : b) && (a.stateNode = b, 
                    !0);

                  case 6:
                    return null !== (b = "" === a.pendingProps || 3 !== b.nodeType ? null : b) && (a.stateNode = b, 
                    !0);

                  case 13:
                  default:
                    return !1;
                }
            }
            function ii(a) {
                if (ei) {
                    var b = di;
                    if (b) {
                        var c = b;
                        if (!hi(a, b)) {
                            if (!(b = re(c.nextSibling)) || !hi(a, b)) return a.effectTag = -1025 & a.effectTag | 2, 
                            ei = !1, void (ci = a);
                            fi(ci, c);
                        }
                        ci = a, di = re(b.firstChild);
                    } else a.effectTag = -1025 & a.effectTag | 2, ei = !1, ci = a;
                }
            }
            function ji(a) {
                for (a = a.return; null !== a && 5 !== a.tag && 3 !== a.tag && 13 !== a.tag; ) a = a.return;
                ci = a;
            }
            function ki(a) {
                if (a !== ci) return !1;
                if (!ei) return ji(a), ei = !0, !1;
                var b = a.type;
                if (5 !== a.tag || "head" !== b && "body" !== b && !oe(b, a.memoizedProps)) for (b = di; b; ) fi(a, b), 
                b = re(b.nextSibling);
                if (ji(a), 13 === a.tag) {
                    if (!(a = null !== (a = a.memoizedState) ? a.dehydrated : null)) throw Error(u(317));
                    a: {
                        for (a = a.nextSibling, b = 0; a; ) {
                            if (8 === a.nodeType) {
                                var c = a.data;
                                if (c === ie) {
                                    if (0 === b) {
                                        di = re(a.nextSibling);
                                        break a;
                                    }
                                    b--;
                                } else c !== he && c !== ke && c !== je || b++;
                            }
                            a = a.nextSibling;
                        }
                        di = null;
                    }
                } else di = ci ? re(a.stateNode.nextSibling) : null;
                return !0;
            }
            function li() {
                di = ci = null, ei = !1;
            }
            var mi = Ea.ReactCurrentOwner, wg = !1;
            function R(a, b, c, d) {
                b.child = null === a ? gh(b, null, c, d) : fh(b, a.child, c, d);
            }
            function ni(a, b, c, d, e) {
                c = c.render;
                var f = b.ref;
                return vg(b, e), d = Ih(a, b, c, d, f, e), null === a || wg ? (b.effectTag |= 1, 
                R(a, b, d, e), b.child) : (b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), 
                oi(a, b, e));
            }
            function pi(a, b, c, d, e, f) {
                if (null === a) {
                    var g = c.type;
                    return "function" != typeof g || qi(g) || void 0 !== g.defaultProps || null !== c.compare || void 0 !== c.defaultProps ? ((a = ch(c.type, null, d, null, b.mode, f)).ref = b.ref, 
                    a.return = b, b.child = a) : (b.tag = 15, b.type = g, ri(a, b, g, d, e, f));
                }
                return g = a.child, e < f && (e = g.memoizedProps, (c = null !== (c = c.compare) ? c : qf)(e, d) && a.ref === b.ref) ? oi(a, b, f) : (b.effectTag |= 1, 
                (a = ah(g, d)).ref = b.ref, a.return = b, b.child = a);
            }
            function ri(a, b, c, d, e, f) {
                return null !== a && qf(a.memoizedProps, d) && a.ref === b.ref && (wg = !1, e < f) ? oi(a, b, f) : si(a, b, c, d, f);
            }
            function ti(a, b) {
                var c = b.ref;
                (null === a && null !== c || null !== a && a.ref !== c) && (b.effectTag |= 128);
            }
            function si(a, b, c, d, e) {
                var f = L(c) ? Df : J.current;
                return f = Ef(b, f), vg(b, e), c = Ih(a, b, c, d, f, e), null === a || wg ? (b.effectTag |= 1, 
                R(a, b, c, e), b.child) : (b.updateQueue = a.updateQueue, b.effectTag &= -517, a.expirationTime <= e && (a.expirationTime = 0), 
                oi(a, b, e));
            }
            function ui(a, b, c, d, e) {
                if (L(c)) {
                    var f = !0;
                    Jf(b);
                } else f = !1;
                if (vg(b, e), null === b.stateNode) null !== a && (a.alternate = null, b.alternate = null, 
                b.effectTag |= 2), Ug(b, c, d), Wg(b, c, d, e), d = !0; else if (null === a) {
                    var g = b.stateNode, h = b.memoizedProps;
                    g.props = h;
                    var k = g.context, l = c.contextType;
                    "object" == typeof l && null !== l ? l = xg(l) : l = Ef(b, l = L(c) ? Df : J.current);
                    var m = c.getDerivedStateFromProps, C = "function" == typeof m || "function" == typeof g.getSnapshotBeforeUpdate;
                    C || "function" != typeof g.UNSAFE_componentWillReceiveProps && "function" != typeof g.componentWillReceiveProps || (h !== d || k !== l) && Vg(b, g, d, l), 
                    yg = !1;
                    var y = b.memoizedState;
                    k = g.state = y;
                    var H = b.updateQueue;
                    null !== H && (Hg(b, H, d, g, e), k = b.memoizedState), h !== d || y !== k || K.current || yg ? ("function" == typeof m && (Og(b, c, m, d), 
                    k = b.memoizedState), (h = yg || Tg(b, c, h, d, y, k, l)) ? (C || "function" != typeof g.UNSAFE_componentWillMount && "function" != typeof g.componentWillMount || ("function" == typeof g.componentWillMount && g.componentWillMount(), 
                    "function" == typeof g.UNSAFE_componentWillMount && g.UNSAFE_componentWillMount()), 
                    "function" == typeof g.componentDidMount && (b.effectTag |= 4)) : ("function" == typeof g.componentDidMount && (b.effectTag |= 4), 
                    b.memoizedProps = d, b.memoizedState = k), g.props = d, g.state = k, g.context = l, 
                    d = h) : ("function" == typeof g.componentDidMount && (b.effectTag |= 4), d = !1);
                } else g = b.stateNode, h = b.memoizedProps, g.props = b.type === b.elementType ? h : mg(b.type, h), 
                k = g.context, "object" == typeof (l = c.contextType) && null !== l ? l = xg(l) : l = Ef(b, l = L(c) ? Df : J.current), 
                (C = "function" == typeof (m = c.getDerivedStateFromProps) || "function" == typeof g.getSnapshotBeforeUpdate) || "function" != typeof g.UNSAFE_componentWillReceiveProps && "function" != typeof g.componentWillReceiveProps || (h !== d || k !== l) && Vg(b, g, d, l), 
                yg = !1, k = b.memoizedState, y = g.state = k, null !== (H = b.updateQueue) && (Hg(b, H, d, g, e), 
                y = b.memoizedState), h !== d || k !== y || K.current || yg ? ("function" == typeof m && (Og(b, c, m, d), 
                y = b.memoizedState), (m = yg || Tg(b, c, h, d, k, y, l)) ? (C || "function" != typeof g.UNSAFE_componentWillUpdate && "function" != typeof g.componentWillUpdate || ("function" == typeof g.componentWillUpdate && g.componentWillUpdate(d, y, l), 
                "function" == typeof g.UNSAFE_componentWillUpdate && g.UNSAFE_componentWillUpdate(d, y, l)), 
                "function" == typeof g.componentDidUpdate && (b.effectTag |= 4), "function" == typeof g.getSnapshotBeforeUpdate && (b.effectTag |= 256)) : ("function" != typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), 
                "function" != typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), 
                b.memoizedProps = d, b.memoizedState = y), g.props = d, g.state = y, g.context = l, 
                d = m) : ("function" != typeof g.componentDidUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 4), 
                "function" != typeof g.getSnapshotBeforeUpdate || h === a.memoizedProps && k === a.memoizedState || (b.effectTag |= 256), 
                d = !1);
                return vi(a, b, c, d, f, e);
            }
            function vi(a, b, c, d, e, f) {
                ti(a, b);
                var g = 0 != (64 & b.effectTag);
                if (!d && !g) return e && Kf(b, c, !1), oi(a, b, f);
                d = b.stateNode, mi.current = b;
                var h = g && "function" != typeof c.getDerivedStateFromError ? null : d.render();
                return b.effectTag |= 1, null !== a && g ? (b.child = fh(b, a.child, null, f), b.child = fh(b, null, h, f)) : R(a, b, h, f), 
                b.memoizedState = d.state, e && Kf(b, c, !0), b.child;
            }
            function wi(a) {
                var b = a.stateNode;
                b.pendingContext ? Hf(0, b.pendingContext, b.pendingContext !== b.context) : b.context && Hf(0, b.context, !1), 
                mh(a, b.containerInfo);
            }
            var Hi, Ii, Ji, Ki, xi = {
                dehydrated: null,
                retryTime: 0
            };
            function yi(a, b, c) {
                var h, d = b.mode, e = b.pendingProps, f = M.current, g = !1;
                if ((h = 0 != (64 & b.effectTag)) || (h = 0 != (2 & f) && (null === a || null !== a.memoizedState)), 
                h ? (g = !0, b.effectTag &= -65) : null !== a && null === a.memoizedState || void 0 === e.fallback || !0 === e.unstable_avoidThisFallback || (f |= 1), 
                I(M, 1 & f), null === a) {
                    if (void 0 !== e.fallback && ii(b), g) {
                        if (g = e.fallback, (e = eh(null, d, 0, null)).return = b, 0 == (2 & b.mode)) for (a = null !== b.memoizedState ? b.child.child : b.child, 
                        e.child = a; null !== a; ) a.return = e, a = a.sibling;
                        return (c = eh(g, d, c, null)).return = b, e.sibling = c, b.memoizedState = xi, 
                        b.child = e, c;
                    }
                    return d = e.children, b.memoizedState = null, b.child = gh(b, null, d, c);
                }
                if (null !== a.memoizedState) {
                    if (d = (a = a.child).sibling, g) {
                        if (e = e.fallback, (c = ah(a, a.pendingProps)).return = b, 0 == (2 & b.mode) && (g = null !== b.memoizedState ? b.child.child : b.child) !== a.child) for (c.child = g; null !== g; ) g.return = c, 
                        g = g.sibling;
                        return (d = ah(d, e, d.expirationTime)).return = b, c.sibling = d, c.childExpirationTime = 0, 
                        b.memoizedState = xi, b.child = c, d;
                    }
                    return c = fh(b, a.child, e.children, c), b.memoizedState = null, b.child = c;
                }
                if (a = a.child, g) {
                    if (g = e.fallback, (e = eh(null, d, 0, null)).return = b, e.child = a, null !== a && (a.return = e), 
                    0 == (2 & b.mode)) for (a = null !== b.memoizedState ? b.child.child : b.child, 
                    e.child = a; null !== a; ) a.return = e, a = a.sibling;
                    return (c = eh(g, d, c, null)).return = b, e.sibling = c, c.effectTag |= 2, e.childExpirationTime = 0, 
                    b.memoizedState = xi, b.child = e, c;
                }
                return b.memoizedState = null, b.child = fh(b, a, e.children, c);
            }
            function zi(a, b) {
                a.expirationTime < b && (a.expirationTime = b);
                var c = a.alternate;
                null !== c && c.expirationTime < b && (c.expirationTime = b), ug(a.return, b);
            }
            function Ai(a, b, c, d, e, f) {
                var g = a.memoizedState;
                null === g ? a.memoizedState = {
                    isBackwards: b,
                    rendering: null,
                    last: d,
                    tail: c,
                    tailExpiration: 0,
                    tailMode: e,
                    lastEffect: f
                } : (g.isBackwards = b, g.rendering = null, g.last = d, g.tail = c, g.tailExpiration = 0, 
                g.tailMode = e, g.lastEffect = f);
            }
            function Bi(a, b, c) {
                var d = b.pendingProps, e = d.revealOrder, f = d.tail;
                if (R(a, b, d.children, c), 0 != (2 & (d = M.current))) d = 1 & d | 2, b.effectTag |= 64; else {
                    if (null !== a && 0 != (64 & a.effectTag)) a: for (a = b.child; null !== a; ) {
                        if (13 === a.tag) null !== a.memoizedState && zi(a, c); else if (19 === a.tag) zi(a, c); else if (null !== a.child) {
                            a.child.return = a, a = a.child;
                            continue;
                        }
                        if (a === b) break a;
                        for (;null === a.sibling; ) {
                            if (null === a.return || a.return === b) break a;
                            a = a.return;
                        }
                        a.sibling.return = a.return, a = a.sibling;
                    }
                    d &= 1;
                }
                if (I(M, d), 0 == (2 & b.mode)) b.memoizedState = null; else switch (e) {
                  case "forwards":
                    for (c = b.child, e = null; null !== c; ) null !== (a = c.alternate) && null === qh(a) && (e = c), 
                    c = c.sibling;
                    null === (c = e) ? (e = b.child, b.child = null) : (e = c.sibling, c.sibling = null), 
                    Ai(b, !1, e, c, f, b.lastEffect);
                    break;

                  case "backwards":
                    for (c = null, e = b.child, b.child = null; null !== e; ) {
                        if (null !== (a = e.alternate) && null === qh(a)) {
                            b.child = e;
                            break;
                        }
                        a = e.sibling, e.sibling = c, c = e, e = a;
                    }
                    Ai(b, !0, c, null, f, b.lastEffect);
                    break;

                  case "together":
                    Ai(b, !1, null, null, void 0, b.lastEffect);
                    break;

                  default:
                    b.memoizedState = null;
                }
                return b.child;
            }
            function oi(a, b, c) {
                null !== a && (b.dependencies = a.dependencies);
                var d = b.expirationTime;
                if (0 !== d && Jg(d), b.childExpirationTime < c) return null;
                if (null !== a && b.child !== a.child) throw Error(u(153));
                if (null !== b.child) {
                    for (c = ah(a = b.child, a.pendingProps, a.expirationTime), b.child = c, c.return = b; null !== a.sibling; ) a = a.sibling, 
                    (c = c.sibling = ah(a, a.pendingProps, a.expirationTime)).return = b;
                    c.sibling = null;
                }
                return b.child;
            }
            function Ci(a) {
                a.effectTag |= 4;
            }
            function Li(a, b) {
                switch (a.tailMode) {
                  case "hidden":
                    b = a.tail;
                    for (var c = null; null !== b; ) null !== b.alternate && (c = b), b = b.sibling;
                    null === c ? a.tail = null : c.sibling = null;
                    break;

                  case "collapsed":
                    c = a.tail;
                    for (var d = null; null !== c; ) null !== c.alternate && (d = c), c = c.sibling;
                    null === d ? b || null === a.tail ? a.tail = null : a.tail.sibling = null : d.sibling = null;
                }
            }
            function Mi(a) {
                switch (a.tag) {
                  case 1:
                    L(a.type) && Ff();
                    var b = a.effectTag;
                    return 4096 & b ? (a.effectTag = -4097 & b | 64, a) : null;

                  case 3:
                    if (nh(), Gf(), 0 != (64 & (b = a.effectTag))) throw Error(u(285));
                    return a.effectTag = -4097 & b | 64, a;

                  case 5:
                    return ph(a), null;

                  case 13:
                    return G(M), 4096 & (b = a.effectTag) ? (a.effectTag = -4097 & b | 64, a) : null;

                  case 19:
                    return G(M), null;

                  case 4:
                    return nh(), null;

                  case 10:
                    return tg(a), null;

                  default:
                    return null;
                }
            }
            function Ni(a, b) {
                return {
                    value: a,
                    source: b,
                    stack: Xa(b)
                };
            }
            Hi = function(a, b) {
                for (var c = b.child; null !== c; ) {
                    if (5 === c.tag || 6 === c.tag) a.appendChild(c.stateNode); else if (4 !== c.tag && null !== c.child) {
                        c.child.return = c, c = c.child;
                        continue;
                    }
                    if (c === b) break;
                    for (;null === c.sibling; ) {
                        if (null === c.return || c.return === b) return;
                        c = c.return;
                    }
                    c.sibling.return = c.return, c = c.sibling;
                }
            }, Ii = function() {}, Ji = function(a, b, c, d, e) {
                var f = a.memoizedProps;
                if (f !== d) {
                    var h, k, g = b.stateNode;
                    switch (lh(ih.current), a = null, c) {
                      case "input":
                        f = Ab(g, f), d = Ab(g, d), a = [];
                        break;

                      case "option":
                        f = Ib(g, f), d = Ib(g, d), a = [];
                        break;

                      case "select":
                        f = n({}, f, {
                            value: void 0
                        }), d = n({}, d, {
                            value: void 0
                        }), a = [];
                        break;

                      case "textarea":
                        f = Kb(g, f), d = Kb(g, d), a = [];
                        break;

                      default:
                        "function" != typeof f.onClick && "function" == typeof d.onClick && (g.onclick = ae);
                    }
                    for (h in Yd(c, d), c = null, f) if (!d.hasOwnProperty(h) && f.hasOwnProperty(h) && null != f[h]) if ("style" === h) for (k in g = f[h]) g.hasOwnProperty(k) && (c || (c = {}), 
                    c[k] = ""); else "dangerouslySetInnerHTML" !== h && "children" !== h && "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && "autoFocus" !== h && (ia.hasOwnProperty(h) ? a || (a = []) : (a = a || []).push(h, null));
                    for (h in d) {
                        var l = d[h];
                        if (g = null != f ? f[h] : void 0, d.hasOwnProperty(h) && l !== g && (null != l || null != g)) if ("style" === h) if (g) {
                            for (k in g) !g.hasOwnProperty(k) || l && l.hasOwnProperty(k) || (c || (c = {}), 
                            c[k] = "");
                            for (k in l) l.hasOwnProperty(k) && g[k] !== l[k] && (c || (c = {}), c[k] = l[k]);
                        } else c || (a || (a = []), a.push(h, c)), c = l; else "dangerouslySetInnerHTML" === h ? (l = l ? l.__html : void 0, 
                        g = g ? g.__html : void 0, null != l && g !== l && (a = a || []).push(h, "" + l)) : "children" === h ? g === l || "string" != typeof l && "number" != typeof l || (a = a || []).push(h, "" + l) : "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && (ia.hasOwnProperty(h) ? (null != l && $d(e, h), 
                        a || g === l || (a = [])) : (a = a || []).push(h, l));
                    }
                    c && (a = a || []).push("style", c), e = a, (b.updateQueue = e) && Ci(b);
                }
            }, Ki = function(a, b, c, d) {
                c !== d && Ci(b);
            };
            var Oi = "function" == typeof WeakSet ? WeakSet : Set;
            function Pi(a, b) {
                var c = b.source, d = b.stack;
                null === d && null !== c && (d = Xa(c)), null !== c && Wa(c.type), b = b.value, 
                null !== a && 1 === a.tag && Wa(a.type);
                try {
                    console.error(b);
                } catch (e) {
                    setTimeout(function() {
                        throw e;
                    });
                }
            }
            function Si(a) {
                var b = a.ref;
                if (null !== b) if ("function" == typeof b) try {
                    b(null);
                } catch (c) {
                    Ri(a, c);
                } else b.current = null;
            }
            function Ti(a, b) {
                switch (b.tag) {
                  case 0:
                  case 11:
                  case 15:
                    Ui(2, 0, b);
                    break;

                  case 1:
                    if (256 & b.effectTag && null !== a) {
                        var c = a.memoizedProps, d = a.memoizedState;
                        b = (a = b.stateNode).getSnapshotBeforeUpdate(b.elementType === b.type ? c : mg(b.type, c), d), 
                        a.__reactInternalSnapshotBeforeUpdate = b;
                    }
                    break;

                  case 3:
                  case 5:
                  case 6:
                  case 4:
                  case 17:
                    break;

                  default:
                    throw Error(u(163));
                }
            }
            function Ui(a, b, c) {
                if (null !== (c = null !== (c = c.updateQueue) ? c.lastEffect : null)) {
                    var d = c = c.next;
                    do {
                        if (0 != (d.tag & a)) {
                            var e = d.destroy;
                            d.destroy = void 0, void 0 !== e && e();
                        }
                        0 != (d.tag & b) && (e = d.create, d.destroy = e()), d = d.next;
                    } while (d !== c);
                }
            }
            function Vi(a, b, c) {
                switch ("function" == typeof Wi && Wi(b), b.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    if (null !== (a = b.updateQueue) && null !== (a = a.lastEffect)) {
                        var d = a.next;
                        fg(97 < c ? 97 : c, function() {
                            var a = d;
                            do {
                                var c = a.destroy;
                                if (void 0 !== c) {
                                    var g = b;
                                    try {
                                        c();
                                    } catch (h) {
                                        Ri(g, h);
                                    }
                                }
                                a = a.next;
                            } while (a !== d);
                        });
                    }
                    break;

                  case 1:
                    Si(b), "function" == typeof (c = b.stateNode).componentWillUnmount && function(a, b) {
                        try {
                            b.props = a.memoizedProps, b.state = a.memoizedState, b.componentWillUnmount();
                        } catch (c) {
                            Ri(a, c);
                        }
                    }(b, c);
                    break;

                  case 5:
                    Si(b);
                    break;

                  case 4:
                    Xi(a, b, c);
                }
            }
            function Yi(a) {
                var b = a.alternate;
                a.return = null, a.child = null, a.memoizedState = null, a.updateQueue = null, a.dependencies = null, 
                a.alternate = null, a.firstEffect = null, a.lastEffect = null, a.pendingProps = null, 
                a.memoizedProps = null, null !== b && Yi(b);
            }
            function Zi(a) {
                return 5 === a.tag || 3 === a.tag || 4 === a.tag;
            }
            function $i(a) {
                a: {
                    for (var b = a.return; null !== b; ) {
                        if (Zi(b)) {
                            var c = b;
                            break a;
                        }
                        b = b.return;
                    }
                    throw Error(u(160));
                }
                switch (b = c.stateNode, c.tag) {
                  case 5:
                    var d = !1;
                    break;

                  case 3:
                  case 4:
                    b = b.containerInfo, d = !0;
                    break;

                  default:
                    throw Error(u(161));
                }
                16 & c.effectTag && (Tb(b, ""), c.effectTag &= -17);
                a: b: for (c = a; ;) {
                    for (;null === c.sibling; ) {
                        if (null === c.return || Zi(c.return)) {
                            c = null;
                            break a;
                        }
                        c = c.return;
                    }
                    for (c.sibling.return = c.return, c = c.sibling; 5 !== c.tag && 6 !== c.tag && 18 !== c.tag; ) {
                        if (2 & c.effectTag) continue b;
                        if (null === c.child || 4 === c.tag) continue b;
                        c.child.return = c, c = c.child;
                    }
                    if (!(2 & c.effectTag)) {
                        c = c.stateNode;
                        break a;
                    }
                }
                for (var e = a; ;) {
                    var f = 5 === e.tag || 6 === e.tag;
                    if (f) {
                        var g = f ? e.stateNode : e.stateNode.instance;
                        if (c) if (d) {
                            var h = g;
                            g = c, 8 === (f = b).nodeType ? f.parentNode.insertBefore(h, g) : f.insertBefore(h, g);
                        } else b.insertBefore(g, c); else d ? (8 === (h = b).nodeType ? (f = h.parentNode).insertBefore(g, h) : (f = h).appendChild(g), 
                        null !== (h = h._reactRootContainer) && void 0 !== h || null !== f.onclick || (f.onclick = ae)) : b.appendChild(g);
                    } else if (4 !== e.tag && null !== e.child) {
                        e.child.return = e, e = e.child;
                        continue;
                    }
                    if (e === a) break;
                    for (;null === e.sibling; ) {
                        if (null === e.return || e.return === a) return;
                        e = e.return;
                    }
                    e.sibling.return = e.return, e = e.sibling;
                }
            }
            function Xi(a, b, c) {
                for (var f, g, d = b, e = !1; ;) {
                    if (!e) {
                        e = d.return;
                        a: for (;;) {
                            if (null === e) throw Error(u(160));
                            switch (f = e.stateNode, e.tag) {
                              case 5:
                                g = !1;
                                break a;

                              case 3:
                              case 4:
                                f = f.containerInfo, g = !0;
                                break a;
                            }
                            e = e.return;
                        }
                        e = !0;
                    }
                    if (5 === d.tag || 6 === d.tag) {
                        a: for (var h = a, k = d, l = c, m = k; ;) if (Vi(h, m, l), null !== m.child && 4 !== m.tag) m.child.return = m, 
                        m = m.child; else {
                            if (m === k) break;
                            for (;null === m.sibling; ) {
                                if (null === m.return || m.return === k) break a;
                                m = m.return;
                            }
                            m.sibling.return = m.return, m = m.sibling;
                        }
                        g ? (h = f, k = d.stateNode, 8 === h.nodeType ? h.parentNode.removeChild(k) : h.removeChild(k)) : f.removeChild(d.stateNode);
                    } else if (4 === d.tag) {
                        if (null !== d.child) {
                            f = d.stateNode.containerInfo, g = !0, d.child.return = d, d = d.child;
                            continue;
                        }
                    } else if (Vi(a, d, c), null !== d.child) {
                        d.child.return = d, d = d.child;
                        continue;
                    }
                    if (d === b) break;
                    for (;null === d.sibling; ) {
                        if (null === d.return || d.return === b) return;
                        4 === (d = d.return).tag && (e = !1);
                    }
                    d.sibling.return = d.return, d = d.sibling;
                }
            }
            function aj(a, b) {
                switch (b.tag) {
                  case 0:
                  case 11:
                  case 14:
                  case 15:
                    Ui(4, 8, b);
                    break;

                  case 1:
                    break;

                  case 5:
                    var c = b.stateNode;
                    if (null != c) {
                        var d = b.memoizedProps, e = null !== a ? a.memoizedProps : d;
                        a = b.type;
                        var f = b.updateQueue;
                        if (b.updateQueue = null, null !== f) {
                            for (c[ve] = d, "input" === a && "radio" === d.type && null != d.name && Cb(c, d), 
                            Zd(a, e), b = Zd(a, d), e = 0; e < f.length; e += 2) {
                                var g = f[e], h = f[e + 1];
                                "style" === g ? Wd(c, h) : "dangerouslySetInnerHTML" === g ? Sb(c, h) : "children" === g ? Tb(c, h) : vb(c, g, h, b);
                            }
                            switch (a) {
                              case "input":
                                Eb(c, d);
                                break;

                              case "textarea":
                                Mb(c, d);
                                break;

                              case "select":
                                b = c._wrapperState.wasMultiple, c._wrapperState.wasMultiple = !!d.multiple, null != (a = d.value) ? Jb(c, !!d.multiple, a, !1) : b !== !!d.multiple && (null != d.defaultValue ? Jb(c, !!d.multiple, d.defaultValue, !0) : Jb(c, !!d.multiple, d.multiple ? [] : "", !1));
                            }
                        }
                    }
                    break;

                  case 6:
                    if (null === b.stateNode) throw Error(u(162));
                    b.stateNode.nodeValue = b.memoizedProps;
                    break;

                  case 3:
                    (b = b.stateNode).hydrate && (b.hydrate = !1, Lc(b.containerInfo));
                    break;

                  case 12:
                    break;

                  case 13:
                    if (c = b, null === b.memoizedState ? d = !1 : (d = !0, c = b.child, bj = cg()), 
                    null !== c) a: for (a = c; ;) {
                        if (5 === a.tag) f = a.stateNode, d ? "function" == typeof (f = f.style).setProperty ? f.setProperty("display", "none", "important") : f.display = "none" : (f = a.stateNode, 
                        e = void 0 !== (e = a.memoizedProps.style) && null !== e && e.hasOwnProperty("display") ? e.display : null, 
                        f.style.display = Vd("display", e)); else if (6 === a.tag) a.stateNode.nodeValue = d ? "" : a.memoizedProps; else {
                            if (13 === a.tag && null !== a.memoizedState && null === a.memoizedState.dehydrated) {
                                (f = a.child.sibling).return = a, a = f;
                                continue;
                            }
                            if (null !== a.child) {
                                a.child.return = a, a = a.child;
                                continue;
                            }
                        }
                        if (a === c) break a;
                        for (;null === a.sibling; ) {
                            if (null === a.return || a.return === c) break a;
                            a = a.return;
                        }
                        a.sibling.return = a.return, a = a.sibling;
                    }
                    cj(b);
                    break;

                  case 19:
                    cj(b);
                    break;

                  case 17:
                  case 20:
                  case 21:
                    break;

                  default:
                    throw Error(u(163));
                }
            }
            function cj(a) {
                var b = a.updateQueue;
                if (null !== b) {
                    a.updateQueue = null;
                    var c = a.stateNode;
                    null === c && (c = a.stateNode = new Oi()), b.forEach(function(b) {
                        var d = function(a, b) {
                            var c = a.stateNode;
                            null !== c && c.delete(b), 0 == (b = 0) && (b = Qg(b = Pg(), a, null)), null !== (a = Kj(a, b)) && Z(a);
                        }.bind(null, a, b);
                        c.has(b) || (c.add(b), b.then(d, d));
                    });
                }
            }
            var ej = "function" == typeof WeakMap ? WeakMap : Map;
            function fj(a, b, c) {
                (c = Bg(c, null)).tag = 3, c.payload = {
                    element: null
                };
                var d = b.value;
                return c.callback = function() {
                    gj || (gj = !0, hj = d), Pi(a, b);
                }, c;
            }
            function ij(a, b, c) {
                (c = Bg(c, null)).tag = 3;
                var d = a.type.getDerivedStateFromError;
                if ("function" == typeof d) {
                    var e = b.value;
                    c.payload = function() {
                        return Pi(a, b), d(e);
                    };
                }
                var f = a.stateNode;
                return null !== f && "function" == typeof f.componentDidCatch && (c.callback = function() {
                    "function" != typeof d && (null === jj ? jj = new Set([ this ]) : jj.add(this), 
                    Pi(a, b));
                    var c = b.stack;
                    this.componentDidCatch(b.value, {
                        componentStack: null !== c ? c : ""
                    });
                }), c;
            }
            var gk, kj = Math.ceil, lj = Ea.ReactCurrentDispatcher, mj = Ea.ReactCurrentOwner, S = 0, nj = 8, oj = 16, pj = 32, qj = 0, rj = 1, sj = 2, tj = 3, uj = 4, vj = 5, T = S, U = null, V = null, W = 0, X = qj, wj = null, xj = 1073741823, yj = 1073741823, zj = null, Aj = 0, Bj = !1, bj = 0, Cj = 500, Y = null, gj = !1, hj = null, jj = null, Dj = !1, Ej = null, Fj = 90, Gj = null, Hj = 0, Ij = null, Jj = 0;
            function Pg() {
                return (T & (oj | pj)) !== S ? 1073741821 - (cg() / 10 | 0) : 0 !== Jj ? Jj : Jj = 1073741821 - (cg() / 10 | 0);
            }
            function Qg(a, b, c) {
                if (0 == (2 & (b = b.mode))) return 1073741823;
                var d = dg();
                if (0 == (4 & b)) return 99 === d ? 1073741823 : 1073741822;
                if ((T & oj) !== S) return W;
                if (null !== c) a = lg(a, 0 | c.timeoutMs || 5e3, 250); else switch (d) {
                  case 99:
                    a = 1073741823;
                    break;

                  case 98:
                    a = lg(a, 150, 100);
                    break;

                  case 97:
                  case 96:
                    a = lg(a, 5e3, 250);
                    break;

                  case 95:
                    a = 2;
                    break;

                  default:
                    throw Error(u(326));
                }
                return null !== U && a === W && --a, a;
            }
            function Rg(a, b) {
                if (50 < Hj) throw Hj = 0, Ij = null, Error(u(185));
                if (null !== (a = Kj(a, b))) {
                    var c = dg();
                    1073741823 === b ? (T & nj) !== S && (T & (oj | pj)) === S ? Lj(a) : (Z(a), T === S && jg()) : Z(a), 
                    (4 & T) === S || 98 !== c && 99 !== c || (null === Gj ? Gj = new Map([ [ a, b ] ]) : (void 0 === (c = Gj.get(a)) || c > b) && Gj.set(a, b));
                }
            }
            function Kj(a, b) {
                a.expirationTime < b && (a.expirationTime = b);
                var c = a.alternate;
                null !== c && c.expirationTime < b && (c.expirationTime = b);
                var d = a.return, e = null;
                if (null === d && 3 === a.tag) e = a.stateNode; else for (;null !== d; ) {
                    if (c = d.alternate, d.childExpirationTime < b && (d.childExpirationTime = b), null !== c && c.childExpirationTime < b && (c.childExpirationTime = b), 
                    null === d.return && 3 === d.tag) {
                        e = d.stateNode;
                        break;
                    }
                    d = d.return;
                }
                return null !== e && (U === e && (Jg(b), X === uj && Mj(e, W)), Nj(e, b)), e;
            }
            function Oj(a) {
                var b = a.lastExpiredTime;
                return 0 !== b ? b : Pj(a, b = a.firstPendingTime) ? (b = a.lastPingedTime) > (a = a.nextKnownPendingLevel) ? b : a : b;
            }
            function Z(a) {
                if (0 !== a.lastExpiredTime) a.callbackExpirationTime = 1073741823, a.callbackPriority = 99, 
                a.callbackNode = hg(Lj.bind(null, a)); else {
                    var b = Oj(a), c = a.callbackNode;
                    if (0 === b) null !== c && (a.callbackNode = null, a.callbackExpirationTime = 0, 
                    a.callbackPriority = 90); else {
                        var d = Pg();
                        if (1073741823 === b ? d = 99 : 1 === b || 2 === b ? d = 95 : d = 0 >= (d = 10 * (1073741821 - b) - 10 * (1073741821 - d)) ? 99 : 250 >= d ? 98 : 5250 >= d ? 97 : 95, 
                        null !== c) {
                            var e = a.callbackPriority;
                            if (a.callbackExpirationTime === b && e >= d) return;
                            c !== Xf && Nf(c);
                        }
                        a.callbackExpirationTime = b, a.callbackPriority = d, b = 1073741823 === b ? hg(Lj.bind(null, a)) : gg(d, function Qj(a, b) {
                            Jj = 0;
                            if (b) return b = Pg(), Rj(a, b), Z(a), null;
                            var c = Oj(a);
                            if (0 !== c) {
                                if (b = a.callbackNode, (T & (oj | pj)) !== S) throw Error(u(327));
                                if (Sj(), a === U && c === W || Tj(a, c), null !== V) {
                                    var d = T;
                                    T |= oj;
                                    for (var e = Uj(); ;) try {
                                        Vj();
                                        break;
                                    } catch (h) {
                                        Wj(a, h);
                                    }
                                    if (rg(), T = d, lj.current = e, X === rj) throw b = wj, Tj(a, c), Mj(a, c), Z(a), 
                                    b;
                                    if (null === V) switch (e = a.finishedWork = a.current.alternate, a.finishedExpirationTime = c, 
                                    d = X, U = null, d) {
                                      case qj:
                                      case rj:
                                        throw Error(u(345));

                                      case sj:
                                        Rj(a, 2 < c ? 2 : c);
                                        break;

                                      case tj:
                                        if (Mj(a, c), d = a.lastSuspendedTime, c === d && (a.nextKnownPendingLevel = Xj(e)), 
                                        1073741823 === xj && 10 < (e = bj + Cj - cg())) {
                                            if (Bj) {
                                                var f = a.lastPingedTime;
                                                if (0 === f || f >= c) {
                                                    a.lastPingedTime = c, Tj(a, c);
                                                    break;
                                                }
                                            }
                                            if (0 !== (f = Oj(a)) && f !== c) break;
                                            if (0 !== d && d !== c) {
                                                a.lastPingedTime = d;
                                                break;
                                            }
                                            a.timeoutHandle = pe(Yj.bind(null, a), e);
                                            break;
                                        }
                                        Yj(a);
                                        break;

                                      case uj:
                                        if (Mj(a, c), d = a.lastSuspendedTime, c === d && (a.nextKnownPendingLevel = Xj(e)), 
                                        Bj && (0 === (e = a.lastPingedTime) || e >= c)) {
                                            a.lastPingedTime = c, Tj(a, c);
                                            break;
                                        }
                                        if (0 !== (e = Oj(a)) && e !== c) break;
                                        if (0 !== d && d !== c) {
                                            a.lastPingedTime = d;
                                            break;
                                        }
                                        if (1073741823 !== yj ? d = 10 * (1073741821 - yj) - cg() : 1073741823 === xj ? d = 0 : (d = 10 * (1073741821 - xj) - 5e3, 
                                        e = cg(), c = 10 * (1073741821 - c) - e, 0 > (d = e - d) && (d = 0), d = (120 > d ? 120 : 480 > d ? 480 : 1080 > d ? 1080 : 1920 > d ? 1920 : 3e3 > d ? 3e3 : 4320 > d ? 4320 : 1960 * kj(d / 1960)) - d, 
                                        c < d && (d = c)), 10 < d) {
                                            a.timeoutHandle = pe(Yj.bind(null, a), d);
                                            break;
                                        }
                                        Yj(a);
                                        break;

                                      case vj:
                                        if (1073741823 !== xj && null !== zj) {
                                            f = xj;
                                            var g = zj;
                                            if (0 >= (d = 0 | g.busyMinDurationMs) ? d = 0 : (e = 0 | g.busyDelayMs, f = cg() - (10 * (1073741821 - f) - (0 | g.timeoutMs || 5e3)), 
                                            d = f <= e ? 0 : e + d - f), 10 < d) {
                                                Mj(a, c), a.timeoutHandle = pe(Yj.bind(null, a), d);
                                                break;
                                            }
                                        }
                                        Yj(a);
                                        break;

                                      default:
                                        throw Error(u(329));
                                    }
                                    if (Z(a), a.callbackNode === b) return Qj.bind(null, a);
                                }
                            }
                            return null;
                        }.bind(null, a), {
                            timeout: 10 * (1073741821 - b) - cg()
                        }), a.callbackNode = b;
                    }
                }
            }
            function Lj(a) {
                var b = a.lastExpiredTime;
                if (b = 0 !== b ? b : 1073741823, a.finishedExpirationTime === b) Yj(a); else {
                    if ((T & (oj | pj)) !== S) throw Error(u(327));
                    if (Sj(), a === U && b === W || Tj(a, b), null !== V) {
                        var c = T;
                        T |= oj;
                        for (var d = Uj(); ;) try {
                            Zj();
                            break;
                        } catch (e) {
                            Wj(a, e);
                        }
                        if (rg(), T = c, lj.current = d, X === rj) throw c = wj, Tj(a, b), Mj(a, b), Z(a), 
                        c;
                        if (null !== V) throw Error(u(261));
                        a.finishedWork = a.current.alternate, a.finishedExpirationTime = b, U = null, Yj(a), 
                        Z(a);
                    }
                }
                return null;
            }
            function bk(a, b) {
                var c = T;
                T |= 1;
                try {
                    return a(b);
                } finally {
                    (T = c) === S && jg();
                }
            }
            function ck(a, b) {
                var c = T;
                T &= -2, T |= nj;
                try {
                    return a(b);
                } finally {
                    (T = c) === S && jg();
                }
            }
            function Tj(a, b) {
                a.finishedWork = null, a.finishedExpirationTime = 0;
                var c = a.timeoutHandle;
                if (-1 !== c && (a.timeoutHandle = -1, qe(c)), null !== V) for (c = V.return; null !== c; ) {
                    var d = c;
                    switch (d.tag) {
                      case 1:
                        var e = d.type.childContextTypes;
                        null !== e && void 0 !== e && Ff();
                        break;

                      case 3:
                        nh(), Gf();
                        break;

                      case 5:
                        ph(d);
                        break;

                      case 4:
                        nh();
                        break;

                      case 13:
                      case 19:
                        G(M);
                        break;

                      case 10:
                        tg(d);
                    }
                    c = c.return;
                }
                U = a, V = ah(a.current, null), W = b, X = qj, wj = null, yj = xj = 1073741823, 
                zj = null, Aj = 0, Bj = !1;
            }
            function Wj(a, b) {
                for (;;) {
                    try {
                        if (rg(), Mh(), null === V || null === V.return) return X = rj, wj = b, null;
                        a: {
                            var c = a, d = V.return, e = V, f = b;
                            if (b = W, e.effectTag |= 2048, e.firstEffect = e.lastEffect = null, null !== f && "object" == typeof f && "function" == typeof f.then) {
                                var g = f, h = 0 != (1 & M.current), k = d;
                                do {
                                    var l;
                                    if (l = 13 === k.tag) {
                                        var m = k.memoizedState;
                                        if (null !== m) l = null !== m.dehydrated; else {
                                            var C = k.memoizedProps;
                                            l = void 0 !== C.fallback && (!0 !== C.unstable_avoidThisFallback || !h);
                                        }
                                    }
                                    if (l) {
                                        var y = k.updateQueue;
                                        if (null === y) {
                                            var H = new Set();
                                            H.add(g), k.updateQueue = H;
                                        } else y.add(g);
                                        if (0 == (2 & k.mode)) {
                                            if (k.effectTag |= 64, e.effectTag &= -2981, 1 === e.tag) if (null === e.alternate) e.tag = 17; else {
                                                var z = Bg(1073741823, null);
                                                z.tag = 2, Dg(e, z);
                                            }
                                            e.expirationTime = 1073741823;
                                            break a;
                                        }
                                        f = void 0, e = b;
                                        var ta = c.pingCache;
                                        if (null === ta ? (ta = c.pingCache = new ej(), f = new Set(), ta.set(g, f)) : void 0 === (f = ta.get(g)) && (f = new Set(), 
                                        ta.set(g, f)), !f.has(e)) {
                                            f.add(e);
                                            var r = dk.bind(null, c, g, e);
                                            g.then(r, r);
                                        }
                                        k.effectTag |= 4096, k.expirationTime = b;
                                        break a;
                                    }
                                    k = k.return;
                                } while (null !== k);
                                f = Error((Wa(e.type) || "A React component") + " suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display." + Xa(e));
                            }
                            X !== vj && (X = sj), f = Ni(f, e), k = d;
                            do {
                                switch (k.tag) {
                                  case 3:
                                    g = f, k.effectTag |= 4096, k.expirationTime = b, Eg(k, fj(k, g, b));
                                    break a;

                                  case 1:
                                    g = f;
                                    var A = k.type, p = k.stateNode;
                                    if (0 == (64 & k.effectTag) && ("function" == typeof A.getDerivedStateFromError || null !== p && "function" == typeof p.componentDidCatch && (null === jj || !jj.has(p)))) {
                                        k.effectTag |= 4096, k.expirationTime = b, Eg(k, ij(k, g, b));
                                        break a;
                                    }
                                }
                                k = k.return;
                            } while (null !== k);
                        }
                        V = ek(V);
                    } catch (v) {
                        b = v;
                        continue;
                    }
                    break;
                }
            }
            function Uj() {
                var a = lj.current;
                return lj.current = Lh, null === a ? Lh : a;
            }
            function Ig(a, b) {
                a < xj && 2 < a && (xj = a), null !== b && a < yj && 2 < a && (yj = a, zj = b);
            }
            function Jg(a) {
                a > Aj && (Aj = a);
            }
            function Zj() {
                for (;null !== V; ) V = fk(V);
            }
            function Vj() {
                for (;null !== V && !Of(); ) V = fk(V);
            }
            function fk(a) {
                var b = gk(a.alternate, a, W);
                return a.memoizedProps = a.pendingProps, null === b && (b = ek(a)), mj.current = null, 
                b;
            }
            function ek(a) {
                V = a;
                do {
                    var b = V.alternate;
                    if (a = V.return, 0 == (2048 & V.effectTag)) {
                        a: {
                            var c = b, d = W, e = (b = V).pendingProps;
                            switch (b.tag) {
                              case 2:
                              case 16:
                                break;

                              case 15:
                              case 0:
                                break;

                              case 1:
                                L(b.type) && Ff();
                                break;

                              case 3:
                                nh(), Gf(), (e = b.stateNode).pendingContext && (e.context = e.pendingContext, e.pendingContext = null), 
                                (null === c || null === c.child) && ki(b) && Ci(b), Ii(b);
                                break;

                              case 5:
                                ph(b), d = lh(kh.current);
                                var f = b.type;
                                if (null !== c && null != b.stateNode) Ji(c, b, f, e, d), c.ref !== b.ref && (b.effectTag |= 128); else if (e) {
                                    var g = lh(ih.current);
                                    if (ki(b)) {
                                        var h = (e = b).stateNode;
                                        c = e.type;
                                        var k = e.memoizedProps, l = d;
                                        switch (h[ue] = e, h[ve] = k, f = void 0, d = h, c) {
                                          case "iframe":
                                          case "object":
                                          case "embed":
                                            F("load", d);
                                            break;

                                          case "video":
                                          case "audio":
                                            for (h = 0; h < cc.length; h++) F(cc[h], d);
                                            break;

                                          case "source":
                                            F("error", d);
                                            break;

                                          case "img":
                                          case "image":
                                          case "link":
                                            F("error", d), F("load", d);
                                            break;

                                          case "form":
                                            F("reset", d), F("submit", d);
                                            break;

                                          case "details":
                                            F("toggle", d);
                                            break;

                                          case "input":
                                            Bb(d, k), F("invalid", d), $d(l, "onChange");
                                            break;

                                          case "select":
                                            d._wrapperState = {
                                                wasMultiple: !!k.multiple
                                            }, F("invalid", d), $d(l, "onChange");
                                            break;

                                          case "textarea":
                                            Lb(d, k), F("invalid", d), $d(l, "onChange");
                                        }
                                        for (f in Yd(c, k), h = null, k) k.hasOwnProperty(f) && (g = k[f], "children" === f ? "string" == typeof g ? d.textContent !== g && (h = [ "children", g ]) : "number" == typeof g && d.textContent !== "" + g && (h = [ "children", "" + g ]) : ia.hasOwnProperty(f) && null != g && $d(l, f));
                                        switch (c) {
                                          case "input":
                                            yb(d), Gb(d, k, !0);
                                            break;

                                          case "textarea":
                                            yb(d), Nb(d);
                                            break;

                                          case "select":
                                          case "option":
                                            break;

                                          default:
                                            "function" == typeof k.onClick && (d.onclick = ae);
                                        }
                                        f = h, e.updateQueue = f, (e = null !== f) && Ci(b);
                                    } else {
                                        c = b, l = f, k = e, h = 9 === d.nodeType ? d : d.ownerDocument, g === Ob.html && (g = Pb(l)), 
                                        g === Ob.html ? "script" === l ? ((k = h.createElement("div")).innerHTML = "<script><\/script>", 
                                        h = k.removeChild(k.firstChild)) : "string" == typeof k.is ? h = h.createElement(l, {
                                            is: k.is
                                        }) : (h = h.createElement(l), "select" === l && (l = h, k.multiple ? l.multiple = !0 : k.size && (l.size = k.size))) : h = h.createElementNS(g, l), 
                                        (k = h)[ue] = c, k[ve] = e, Hi(k, b, !1, !1), b.stateNode = k;
                                        var m = d, C = Zd(l = f, c = e);
                                        switch (l) {
                                          case "iframe":
                                          case "object":
                                          case "embed":
                                            F("load", k), d = c;
                                            break;

                                          case "video":
                                          case "audio":
                                            for (d = 0; d < cc.length; d++) F(cc[d], k);
                                            d = c;
                                            break;

                                          case "source":
                                            F("error", k), d = c;
                                            break;

                                          case "img":
                                          case "image":
                                          case "link":
                                            F("error", k), F("load", k), d = c;
                                            break;

                                          case "form":
                                            F("reset", k), F("submit", k), d = c;
                                            break;

                                          case "details":
                                            F("toggle", k), d = c;
                                            break;

                                          case "input":
                                            Bb(k, c), d = Ab(k, c), F("invalid", k), $d(m, "onChange");
                                            break;

                                          case "option":
                                            d = Ib(k, c);
                                            break;

                                          case "select":
                                            k._wrapperState = {
                                                wasMultiple: !!c.multiple
                                            }, d = n({}, c, {
                                                value: void 0
                                            }), F("invalid", k), $d(m, "onChange");
                                            break;

                                          case "textarea":
                                            Lb(k, c), d = Kb(k, c), F("invalid", k), $d(m, "onChange");
                                            break;

                                          default:
                                            d = c;
                                        }
                                        Yd(l, d), h = void 0, g = l;
                                        var y = k, H = d;
                                        for (h in H) if (H.hasOwnProperty(h)) {
                                            var z = H[h];
                                            "style" === h ? Wd(y, z) : "dangerouslySetInnerHTML" === h ? null != (z = z ? z.__html : void 0) && Sb(y, z) : "children" === h ? "string" == typeof z ? ("textarea" !== g || "" !== z) && Tb(y, z) : "number" == typeof z && Tb(y, "" + z) : "suppressContentEditableWarning" !== h && "suppressHydrationWarning" !== h && "autoFocus" !== h && (ia.hasOwnProperty(h) ? null != z && $d(m, h) : null != z && vb(y, h, z, C));
                                        }
                                        switch (l) {
                                          case "input":
                                            yb(k), Gb(k, c, !1);
                                            break;

                                          case "textarea":
                                            yb(k), Nb(k);
                                            break;

                                          case "option":
                                            null != c.value && k.setAttribute("value", "" + ub(c.value));
                                            break;

                                          case "select":
                                            (d = k).multiple = !!c.multiple, null != (k = c.value) ? Jb(d, !!c.multiple, k, !1) : null != c.defaultValue && Jb(d, !!c.multiple, c.defaultValue, !0);
                                            break;

                                          default:
                                            "function" == typeof d.onClick && (k.onclick = ae);
                                        }
                                        (e = ne(f, e)) && Ci(b);
                                    }
                                    null !== b.ref && (b.effectTag |= 128);
                                } else if (null === b.stateNode) throw Error(u(166));
                                break;

                              case 6:
                                if (c && null != b.stateNode) Ki(c, b, c.memoizedProps, e); else {
                                    if ("string" != typeof e && null === b.stateNode) throw Error(u(166));
                                    d = lh(kh.current), lh(ih.current), ki(b) ? (f = (e = b).stateNode, d = e.memoizedProps, 
                                    f[ue] = e, (e = f.nodeValue !== d) && Ci(b)) : (f = b, (e = (9 === d.nodeType ? d : d.ownerDocument).createTextNode(e))[ue] = f, 
                                    b.stateNode = e);
                                }
                                break;

                              case 11:
                                break;

                              case 13:
                                if (G(M), e = b.memoizedState, 0 != (64 & b.effectTag)) {
                                    b.expirationTime = d;
                                    break a;
                                }
                                e = null !== e, f = !1, null === c ? void 0 !== b.memoizedProps.fallback && ki(b) : (f = null !== (d = c.memoizedState), 
                                e || null === d || null !== (d = c.child.sibling) && (null !== (k = b.firstEffect) ? (b.firstEffect = d, 
                                d.nextEffect = k) : (b.firstEffect = b.lastEffect = d, d.nextEffect = null), d.effectTag = 8)), 
                                e && !f && 0 != (2 & b.mode) && (null === c && !0 !== b.memoizedProps.unstable_avoidThisFallback || 0 != (1 & M.current) ? X === qj && (X = tj) : (X !== qj && X !== tj || (X = uj), 
                                0 !== Aj && null !== U && (Mj(U, W), Nj(U, Aj)))), (e || f) && (b.effectTag |= 4);
                                break;

                              case 7:
                              case 8:
                              case 12:
                                break;

                              case 4:
                                nh(), Ii(b);
                                break;

                              case 10:
                                tg(b);
                                break;

                              case 9:
                              case 14:
                                break;

                              case 17:
                                L(b.type) && Ff();
                                break;

                              case 19:
                                if (G(M), null === (e = b.memoizedState)) break;
                                if (f = 0 != (64 & b.effectTag), null === (k = e.rendering)) {
                                    if (f) Li(e, !1); else if (X !== qj || null !== c && 0 != (64 & c.effectTag)) for (c = b.child; null !== c; ) {
                                        if (null !== (k = qh(c))) {
                                            for (b.effectTag |= 64, Li(e, !1), null !== (f = k.updateQueue) && (b.updateQueue = f, 
                                            b.effectTag |= 4), null === e.lastEffect && (b.firstEffect = null), b.lastEffect = e.lastEffect, 
                                            e = d, f = b.child; null !== f; ) c = e, (d = f).effectTag &= 2, d.nextEffect = null, 
                                            d.firstEffect = null, d.lastEffect = null, null === (k = d.alternate) ? (d.childExpirationTime = 0, 
                                            d.expirationTime = c, d.child = null, d.memoizedProps = null, d.memoizedState = null, 
                                            d.updateQueue = null, d.dependencies = null) : (d.childExpirationTime = k.childExpirationTime, 
                                            d.expirationTime = k.expirationTime, d.child = k.child, d.memoizedProps = k.memoizedProps, 
                                            d.memoizedState = k.memoizedState, d.updateQueue = k.updateQueue, c = k.dependencies, 
                                            d.dependencies = null === c ? null : {
                                                expirationTime: c.expirationTime,
                                                firstContext: c.firstContext,
                                                responders: c.responders
                                            }), f = f.sibling;
                                            I(M, 1 & M.current | 2), b = b.child;
                                            break a;
                                        }
                                        c = c.sibling;
                                    }
                                } else {
                                    if (!f) if (null !== (c = qh(k))) {
                                        if (b.effectTag |= 64, f = !0, null !== (d = c.updateQueue) && (b.updateQueue = d, 
                                        b.effectTag |= 4), Li(e, !0), null === e.tail && "hidden" === e.tailMode && !k.alternate) {
                                            null !== (b = b.lastEffect = e.lastEffect) && (b.nextEffect = null);
                                            break;
                                        }
                                    } else cg() > e.tailExpiration && 1 < d && (b.effectTag |= 64, f = !0, Li(e, !1), 
                                    b.expirationTime = b.childExpirationTime = d - 1);
                                    e.isBackwards ? (k.sibling = b.child, b.child = k) : (null !== (d = e.last) ? d.sibling = k : b.child = k, 
                                    e.last = k);
                                }
                                if (null !== e.tail) {
                                    0 === e.tailExpiration && (e.tailExpiration = cg() + 500), d = e.tail, e.rendering = d, 
                                    e.tail = d.sibling, e.lastEffect = b.lastEffect, d.sibling = null, e = M.current, 
                                    I(M, e = f ? 1 & e | 2 : 1 & e), b = d;
                                    break a;
                                }
                                break;

                              case 20:
                              case 21:
                                break;

                              default:
                                throw Error(u(156, b.tag));
                            }
                            b = null;
                        }
                        if (e = V, 1 === W || 1 !== e.childExpirationTime) {
                            for (f = 0, d = e.child; null !== d; ) c = d.expirationTime, k = d.childExpirationTime, 
                            c > f && (f = c), k > f && (f = k), d = d.sibling;
                            e.childExpirationTime = f;
                        }
                        if (null !== b) return b;
                        null !== a && 0 == (2048 & a.effectTag) && (null === a.firstEffect && (a.firstEffect = V.firstEffect), 
                        null !== V.lastEffect && (null !== a.lastEffect && (a.lastEffect.nextEffect = V.firstEffect), 
                        a.lastEffect = V.lastEffect), 1 < V.effectTag && (null !== a.lastEffect ? a.lastEffect.nextEffect = V : a.firstEffect = V, 
                        a.lastEffect = V));
                    } else {
                        if (null !== (b = Mi(V))) return b.effectTag &= 2047, b;
                        null !== a && (a.firstEffect = a.lastEffect = null, a.effectTag |= 2048);
                    }
                    if (null !== (b = V.sibling)) return b;
                    V = a;
                } while (null !== V);
                return X === qj && (X = vj), null;
            }
            function Xj(a) {
                var b = a.expirationTime;
                return b > (a = a.childExpirationTime) ? b : a;
            }
            function Yj(a) {
                var b = dg();
                return fg(99, function(a, b) {
                    do {
                        Sj();
                    } while (null !== Ej);
                    if ((T & (oj | pj)) !== S) throw Error(u(327));
                    var c = a.finishedWork, d = a.finishedExpirationTime;
                    if (null === c) return null;
                    if (a.finishedWork = null, a.finishedExpirationTime = 0, c === a.current) throw Error(u(177));
                    a.callbackNode = null, a.callbackExpirationTime = 0, a.callbackPriority = 90, a.nextKnownPendingLevel = 0;
                    var e = Xj(c);
                    if (a.firstPendingTime = e, d <= a.lastSuspendedTime ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : d <= a.firstSuspendedTime && (a.firstSuspendedTime = d - 1), 
                    d <= a.lastPingedTime && (a.lastPingedTime = 0), d <= a.lastExpiredTime && (a.lastExpiredTime = 0), 
                    a === U && (V = U = null, W = 0), 1 < c.effectTag ? null !== c.lastEffect ? (c.lastEffect.nextEffect = c, 
                    e = c.firstEffect) : e = c : e = c.firstEffect, null !== e) {
                        var f = T;
                        T |= pj, mj.current = null, le = Ld;
                        var g = fe();
                        if (ge(g)) {
                            if ("selectionStart" in g) var h = {
                                start: g.selectionStart,
                                end: g.selectionEnd
                            }; else a: {
                                var k = (h = (h = g.ownerDocument) && h.defaultView || window).getSelection && h.getSelection();
                                if (k && 0 !== k.rangeCount) {
                                    h = k.anchorNode;
                                    var l = k.anchorOffset, m = k.focusNode;
                                    k = k.focusOffset;
                                    try {
                                        h.nodeType, m.nodeType;
                                    } catch (Db) {
                                        h = null;
                                        break a;
                                    }
                                    var C = 0, y = -1, H = -1, z = 0, ta = 0, r = g, x = null;
                                    b: for (;;) {
                                        for (var A; r !== h || 0 !== l && 3 !== r.nodeType || (y = C + l), r !== m || 0 !== k && 3 !== r.nodeType || (H = C + k), 
                                        3 === r.nodeType && (C += r.nodeValue.length), null !== (A = r.firstChild); ) x = r, 
                                        r = A;
                                        for (;;) {
                                            if (r === g) break b;
                                            if (x === h && ++z === l && (y = C), x === m && ++ta === k && (H = C), null !== (A = r.nextSibling)) break;
                                            x = (r = x).parentNode;
                                        }
                                        r = A;
                                    }
                                    h = -1 === y || -1 === H ? null : {
                                        start: y,
                                        end: H
                                    };
                                } else h = null;
                            }
                            h = h || {
                                start: 0,
                                end: 0
                            };
                        } else h = null;
                        me = {
                            focusedElem: g,
                            selectionRange: h
                        }, Ld = !1, Y = e;
                        do {
                            try {
                                jk();
                            } catch (Db) {
                                if (null === Y) throw Error(u(330));
                                Ri(Y, Db), Y = Y.nextEffect;
                            }
                        } while (null !== Y);
                        Y = e;
                        do {
                            try {
                                for (g = a, h = b; null !== Y; ) {
                                    var p = Y.effectTag;
                                    if (16 & p && Tb(Y.stateNode, ""), 128 & p) {
                                        var t = Y.alternate;
                                        if (null !== t) {
                                            var v = t.ref;
                                            null !== v && ("function" == typeof v ? v(null) : v.current = null);
                                        }
                                    }
                                    switch (1038 & p) {
                                      case 2:
                                        $i(Y), Y.effectTag &= -3;
                                        break;

                                      case 6:
                                        $i(Y), Y.effectTag &= -3, aj(Y.alternate, Y);
                                        break;

                                      case 1024:
                                        Y.effectTag &= -1025;
                                        break;

                                      case 1028:
                                        Y.effectTag &= -1025, aj(Y.alternate, Y);
                                        break;

                                      case 4:
                                        aj(Y.alternate, Y);
                                        break;

                                      case 8:
                                        Xi(g, l = Y, h), Yi(l);
                                    }
                                    Y = Y.nextEffect;
                                }
                            } catch (Db) {
                                if (null === Y) throw Error(u(330));
                                Ri(Y, Db), Y = Y.nextEffect;
                            }
                        } while (null !== Y);
                        if (v = me, t = fe(), p = v.focusedElem, h = v.selectionRange, t !== p && p && p.ownerDocument && function ee(a, b) {
                            return !(!a || !b) && (a === b || (!a || 3 !== a.nodeType) && (b && 3 === b.nodeType ? ee(a, b.parentNode) : "contains" in a ? a.contains(b) : !!a.compareDocumentPosition && !!(16 & a.compareDocumentPosition(b))));
                        }(p.ownerDocument.documentElement, p)) {
                            null !== h && ge(p) && (t = h.start, void 0 === (v = h.end) && (v = t), "selectionStart" in p ? (p.selectionStart = t, 
                            p.selectionEnd = Math.min(v, p.value.length)) : (v = (t = p.ownerDocument || document) && t.defaultView || window).getSelection && (v = v.getSelection(), 
                            l = p.textContent.length, g = Math.min(h.start, l), h = void 0 === h.end ? g : Math.min(h.end, l), 
                            !v.extend && g > h && (l = h, h = g, g = l), l = de(p, g), m = de(p, h), l && m && (1 !== v.rangeCount || v.anchorNode !== l.node || v.anchorOffset !== l.offset || v.focusNode !== m.node || v.focusOffset !== m.offset) && ((t = t.createRange()).setStart(l.node, l.offset), 
                            v.removeAllRanges(), g > h ? (v.addRange(t), v.extend(m.node, m.offset)) : (t.setEnd(m.node, m.offset), 
                            v.addRange(t))))), t = [];
                            for (v = p; v = v.parentNode; ) 1 === v.nodeType && t.push({
                                element: v,
                                left: v.scrollLeft,
                                top: v.scrollTop
                            });
                            for ("function" == typeof p.focus && p.focus(), p = 0; p < t.length; p++) (v = t[p]).element.scrollLeft = v.left, 
                            v.element.scrollTop = v.top;
                        }
                        me = null, Ld = !!le, le = null, a.current = c, Y = e;
                        do {
                            try {
                                for (p = d; null !== Y; ) {
                                    var Dh = Y.effectTag;
                                    if (36 & Dh) {
                                        var dc = Y.alternate;
                                        switch (v = p, (t = Y).tag) {
                                          case 0:
                                          case 11:
                                          case 15:
                                            Ui(16, 32, t);
                                            break;

                                          case 1:
                                            var fd = t.stateNode;
                                            if (4 & t.effectTag) if (null === dc) fd.componentDidMount(); else {
                                                var hk = t.elementType === t.type ? dc.memoizedProps : mg(t.type, dc.memoizedProps);
                                                fd.componentDidUpdate(hk, dc.memoizedState, fd.__reactInternalSnapshotBeforeUpdate);
                                            }
                                            var Eh = t.updateQueue;
                                            null !== Eh && Kg(0, Eh, fd);
                                            break;

                                          case 3:
                                            var Fh = t.updateQueue;
                                            if (null !== Fh) {
                                                if (g = null, null !== t.child) switch (t.child.tag) {
                                                  case 5:
                                                    g = t.child.stateNode;
                                                    break;

                                                  case 1:
                                                    g = t.child.stateNode;
                                                }
                                                Kg(0, Fh, g);
                                            }
                                            break;

                                          case 5:
                                            var xk = t.stateNode;
                                            null === dc && 4 & t.effectTag && ne(t.type, t.memoizedProps) && xk.focus();
                                            break;

                                          case 6:
                                          case 4:
                                          case 12:
                                            break;

                                          case 13:
                                            if (null === t.memoizedState) {
                                                var Di = t.alternate;
                                                if (null !== Di) {
                                                    var Ei = Di.memoizedState;
                                                    if (null !== Ei) {
                                                        var Fi = Ei.dehydrated;
                                                        null !== Fi && Lc(Fi);
                                                    }
                                                }
                                            }
                                            break;

                                          case 19:
                                          case 17:
                                          case 20:
                                          case 21:
                                            break;

                                          default:
                                            throw Error(u(163));
                                        }
                                    }
                                    if (128 & Dh) {
                                        t = void 0;
                                        var xd = Y.ref;
                                        if (null !== xd) {
                                            var Gi = Y.stateNode;
                                            switch (Y.tag) {
                                              case 5:
                                                t = Gi;
                                                break;

                                              default:
                                                t = Gi;
                                            }
                                            "function" == typeof xd ? xd(t) : xd.current = t;
                                        }
                                    }
                                    Y = Y.nextEffect;
                                }
                            } catch (Db) {
                                if (null === Y) throw Error(u(330));
                                Ri(Y, Db), Y = Y.nextEffect;
                            }
                        } while (null !== Y);
                        Y = null, Yf(), T = f;
                    } else a.current = c;
                    if (Dj) Dj = !1, Ej = a, Fj = b; else for (Y = e; null !== Y; ) b = Y.nextEffect, 
                    Y.nextEffect = null, Y = b;
                    if (0 === (b = a.firstPendingTime) && (jj = null), 1073741823 === b ? a === Ij ? Hj++ : (Hj = 0, 
                    Ij = a) : Hj = 0, "function" == typeof kk && kk(c.stateNode, d), Z(a), gj) throw gj = !1, 
                    a = hj, hj = null, a;
                    return (T & nj) !== S ? null : (jg(), null);
                }.bind(null, a, b)), null;
            }
            function jk() {
                for (;null !== Y; ) {
                    var a = Y.effectTag;
                    0 != (256 & a) && Ti(Y.alternate, Y), 0 == (512 & a) || Dj || (Dj = !0, gg(97, function() {
                        return Sj(), null;
                    })), Y = Y.nextEffect;
                }
            }
            function Sj() {
                if (90 !== Fj) {
                    var a = 97 < Fj ? 97 : Fj;
                    return Fj = 90, fg(a, lk);
                }
            }
            function lk() {
                if (null === Ej) return !1;
                var a = Ej;
                if (Ej = null, (T & (oj | pj)) !== S) throw Error(u(331));
                var b = T;
                for (T |= pj, a = a.current.firstEffect; null !== a; ) {
                    try {
                        var c = a;
                        if (0 != (512 & c.effectTag)) switch (c.tag) {
                          case 0:
                          case 11:
                          case 15:
                            Ui(128, 0, c), Ui(0, 64, c);
                        }
                    } catch (d) {
                        if (null === a) throw Error(u(330));
                        Ri(a, d);
                    }
                    c = a.nextEffect, a.nextEffect = null, a = c;
                }
                return T = b, jg(), !0;
            }
            function mk(a, b, c) {
                Dg(a, b = fj(a, b = Ni(c, b), 1073741823)), null !== (a = Kj(a, 1073741823)) && Z(a);
            }
            function Ri(a, b) {
                if (3 === a.tag) mk(a, a, b); else for (var c = a.return; null !== c; ) {
                    if (3 === c.tag) {
                        mk(c, a, b);
                        break;
                    }
                    if (1 === c.tag) {
                        var d = c.stateNode;
                        if ("function" == typeof c.type.getDerivedStateFromError || "function" == typeof d.componentDidCatch && (null === jj || !jj.has(d))) {
                            Dg(c, a = ij(c, a = Ni(b, a), 1073741823)), null !== (c = Kj(c, 1073741823)) && Z(c);
                            break;
                        }
                    }
                    c = c.return;
                }
            }
            function dk(a, b, c) {
                var d = a.pingCache;
                null !== d && d.delete(b), U === a && W === c ? X === uj || X === tj && 1073741823 === xj && cg() - bj < Cj ? Tj(a, W) : Bj = !0 : Pj(a, c) && (0 !== (b = a.lastPingedTime) && b < c || (a.lastPingedTime = c, 
                a.finishedExpirationTime === c && (a.finishedExpirationTime = 0, a.finishedWork = null), 
                Z(a)));
            }
            gk = function(a, b, c) {
                var d = b.expirationTime;
                if (null !== a) {
                    var e = b.pendingProps;
                    if (a.memoizedProps !== e || K.current) wg = !0; else {
                        if (d < c) {
                            switch (wg = !1, b.tag) {
                              case 3:
                                wi(b), li();
                                break;

                              case 5:
                                if (oh(b), 4 & b.mode && 1 !== c && e.hidden) return b.expirationTime = b.childExpirationTime = 1, 
                                null;
                                break;

                              case 1:
                                L(b.type) && Jf(b);
                                break;

                              case 4:
                                mh(b, b.stateNode.containerInfo);
                                break;

                              case 10:
                                sg(b, b.memoizedProps.value);
                                break;

                              case 13:
                                if (null !== b.memoizedState) return 0 !== (d = b.child.childExpirationTime) && d >= c ? yi(a, b, c) : (I(M, 1 & M.current), 
                                null !== (b = oi(a, b, c)) ? b.sibling : null);
                                I(M, 1 & M.current);
                                break;

                              case 19:
                                if (d = b.childExpirationTime >= c, 0 != (64 & a.effectTag)) {
                                    if (d) return Bi(a, b, c);
                                    b.effectTag |= 64;
                                }
                                if (null !== (e = b.memoizedState) && (e.rendering = null, e.tail = null), I(M, M.current), 
                                !d) return null;
                            }
                            return oi(a, b, c);
                        }
                        wg = !1;
                    }
                } else wg = !1;
                switch (b.expirationTime = 0, b.tag) {
                  case 2:
                    if (d = b.type, null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), 
                    a = b.pendingProps, e = Ef(b, J.current), vg(b, c), e = Ih(null, b, d, a, e, c), 
                    b.effectTag |= 1, "object" == typeof e && null !== e && "function" == typeof e.render && void 0 === e.$$typeof) {
                        if (b.tag = 1, Mh(), L(d)) {
                            var f = !0;
                            Jf(b);
                        } else f = !1;
                        b.memoizedState = null !== e.state && void 0 !== e.state ? e.state : null;
                        var g = d.getDerivedStateFromProps;
                        "function" == typeof g && Og(b, d, g, a), e.updater = Sg, b.stateNode = e, e._reactInternalFiber = b, 
                        Wg(b, d, a, c), b = vi(null, b, d, !0, f, c);
                    } else b.tag = 0, R(null, b, e, c), b = b.child;
                    return b;

                  case 16:
                    if (e = b.elementType, null !== a && (a.alternate = null, b.alternate = null, b.effectTag |= 2), 
                    a = b.pendingProps, function(a) {
                        if (-1 === a._status) {
                            a._status = 0;
                            var b = a._ctor;
                            b = b(), a._result = b, b.then(function(b) {
                                0 === a._status && (b = b.default, a._status = 1, a._result = b);
                            }, function(b) {
                                0 === a._status && (a._status = 2, a._result = b);
                            });
                        }
                    }(e), 1 !== e._status) throw e._result;
                    switch (e = e._result, b.type = e, f = b.tag = function(a) {
                        if ("function" == typeof a) return qi(a) ? 1 : 0;
                        if (void 0 !== a && null !== a) {
                            if ((a = a.$$typeof) === Oa) return 11;
                            if (a === Ra) return 14;
                        }
                        return 2;
                    }(e), a = mg(e, a), f) {
                      case 0:
                        b = si(null, b, e, a, c);
                        break;

                      case 1:
                        b = ui(null, b, e, a, c);
                        break;

                      case 11:
                        b = ni(null, b, e, a, c);
                        break;

                      case 14:
                        b = pi(null, b, e, mg(e.type, a), d, c);
                        break;

                      default:
                        throw Error(u(306, e, ""));
                    }
                    return b;

                  case 0:
                    return d = b.type, e = b.pendingProps, si(a, b, d, e = b.elementType === d ? e : mg(d, e), c);

                  case 1:
                    return d = b.type, e = b.pendingProps, ui(a, b, d, e = b.elementType === d ? e : mg(d, e), c);

                  case 3:
                    if (wi(b), null === (d = b.updateQueue)) throw Error(u(282));
                    if (e = null !== (e = b.memoizedState) ? e.element : null, Hg(b, d, b.pendingProps, null, c), 
                    (d = b.memoizedState.element) === e) li(), b = oi(a, b, c); else {
                        if ((e = b.stateNode.hydrate) && (di = re(b.stateNode.containerInfo.firstChild), 
                        ci = b, e = ei = !0), e) for (c = gh(b, null, d, c), b.child = c; c; ) c.effectTag = -3 & c.effectTag | 1024, 
                        c = c.sibling; else R(a, b, d, c), li();
                        b = b.child;
                    }
                    return b;

                  case 5:
                    return oh(b), null === a && ii(b), d = b.type, e = b.pendingProps, f = null !== a ? a.memoizedProps : null, 
                    g = e.children, oe(d, e) ? g = null : null !== f && oe(d, f) && (b.effectTag |= 16), 
                    ti(a, b), 4 & b.mode && 1 !== c && e.hidden ? (b.expirationTime = b.childExpirationTime = 1, 
                    b = null) : (R(a, b, g, c), b = b.child), b;

                  case 6:
                    return null === a && ii(b), null;

                  case 13:
                    return yi(a, b, c);

                  case 4:
                    return mh(b, b.stateNode.containerInfo), d = b.pendingProps, null === a ? b.child = fh(b, null, d, c) : R(a, b, d, c), 
                    b.child;

                  case 11:
                    return d = b.type, e = b.pendingProps, ni(a, b, d, e = b.elementType === d ? e : mg(d, e), c);

                  case 7:
                    return R(a, b, b.pendingProps, c), b.child;

                  case 8:
                  case 12:
                    return R(a, b, b.pendingProps.children, c), b.child;

                  case 10:
                    a: {
                        if (d = b.type._context, e = b.pendingProps, g = b.memoizedProps, sg(b, f = e.value), 
                        null !== g) {
                            var h = g.value;
                            if (0 === (f = of(h, f) ? 0 : 0 | ("function" == typeof d._calculateChangedBits ? d._calculateChangedBits(h, f) : 1073741823))) {
                                if (g.children === e.children && !K.current) {
                                    b = oi(a, b, c);
                                    break a;
                                }
                            } else for (null !== (h = b.child) && (h.return = b); null !== h; ) {
                                var k = h.dependencies;
                                if (null !== k) {
                                    g = h.child;
                                    for (var l = k.firstContext; null !== l; ) {
                                        if (l.context === d && 0 != (l.observedBits & f)) {
                                            1 === h.tag && ((l = Bg(c, null)).tag = 2, Dg(h, l)), h.expirationTime < c && (h.expirationTime = c), 
                                            null !== (l = h.alternate) && l.expirationTime < c && (l.expirationTime = c), ug(h.return, c), 
                                            k.expirationTime < c && (k.expirationTime = c);
                                            break;
                                        }
                                        l = l.next;
                                    }
                                } else g = 10 === h.tag && h.type === b.type ? null : h.child;
                                if (null !== g) g.return = h; else for (g = h; null !== g; ) {
                                    if (g === b) {
                                        g = null;
                                        break;
                                    }
                                    if (null !== (h = g.sibling)) {
                                        h.return = g.return, g = h;
                                        break;
                                    }
                                    g = g.return;
                                }
                                h = g;
                            }
                        }
                        R(a, b, e.children, c), b = b.child;
                    }
                    return b;

                  case 9:
                    return e = b.type, d = (f = b.pendingProps).children, vg(b, c), d = d(e = xg(e, f.unstable_observedBits)), 
                    b.effectTag |= 1, R(a, b, d, c), b.child;

                  case 14:
                    return f = mg(e = b.type, b.pendingProps), pi(a, b, e, f = mg(e.type, f), d, c);

                  case 15:
                    return ri(a, b, b.type, b.pendingProps, d, c);

                  case 17:
                    return d = b.type, e = b.pendingProps, e = b.elementType === d ? e : mg(d, e), null !== a && (a.alternate = null, 
                    b.alternate = null, b.effectTag |= 2), b.tag = 1, L(d) ? (a = !0, Jf(b)) : a = !1, 
                    vg(b, c), Ug(b, d, e), Wg(b, d, e, c), vi(null, b, d, !0, a, c);

                  case 19:
                    return Bi(a, b, c);
                }
                throw Error(u(156, b.tag));
            };
            var kk = null, Wi = null;
            function gi(a, b, c, d) {
                return new function(a, b, c, d) {
                    this.tag = a, this.key = c, this.sibling = this.child = this.return = this.stateNode = this.type = this.elementType = null, 
                    this.index = 0, this.ref = null, this.pendingProps = b, this.dependencies = this.memoizedState = this.updateQueue = this.memoizedProps = null, 
                    this.mode = d, this.effectTag = 0, this.lastEffect = this.firstEffect = this.nextEffect = null, 
                    this.childExpirationTime = this.expirationTime = 0, this.alternate = null;
                }(a, b, c, d);
            }
            function qi(a) {
                return !(!(a = a.prototype) || !a.isReactComponent);
            }
            function ah(a, b) {
                var c = a.alternate;
                return null === c ? ((c = gi(a.tag, b, a.key, a.mode)).elementType = a.elementType, 
                c.type = a.type, c.stateNode = a.stateNode, c.alternate = a, a.alternate = c) : (c.pendingProps = b, 
                c.effectTag = 0, c.nextEffect = null, c.firstEffect = null, c.lastEffect = null), 
                c.childExpirationTime = a.childExpirationTime, c.expirationTime = a.expirationTime, 
                c.child = a.child, c.memoizedProps = a.memoizedProps, c.memoizedState = a.memoizedState, 
                c.updateQueue = a.updateQueue, b = a.dependencies, c.dependencies = null === b ? null : {
                    expirationTime: b.expirationTime,
                    firstContext: b.firstContext,
                    responders: b.responders
                }, c.sibling = a.sibling, c.index = a.index, c.ref = a.ref, c;
            }
            function ch(a, b, c, d, e, f) {
                var g = 2;
                if (d = a, "function" == typeof a) qi(a) && (g = 1); else if ("string" == typeof a) g = 5; else a: switch (a) {
                  case Ia:
                    return eh(c.children, e, f, b);

                  case Na:
                    g = 8, e |= 7;
                    break;

                  case Ja:
                    g = 8, e |= 1;
                    break;

                  case Ka:
                    return (a = gi(12, c, b, 8 | e)).elementType = Ka, a.type = Ka, a.expirationTime = f, 
                    a;

                  case Pa:
                    return (a = gi(13, c, b, e)).type = Pa, a.elementType = Pa, a.expirationTime = f, 
                    a;

                  case Qa:
                    return (a = gi(19, c, b, e)).elementType = Qa, a.expirationTime = f, a;

                  default:
                    if ("object" == typeof a && null !== a) switch (a.$$typeof) {
                      case La:
                        g = 10;
                        break a;

                      case Ma:
                        g = 9;
                        break a;

                      case Oa:
                        g = 11;
                        break a;

                      case Ra:
                        g = 14;
                        break a;

                      case Sa:
                        g = 16, d = null;
                        break a;
                    }
                    throw Error(u(130, null == a ? a : typeof a, ""));
                }
                return (b = gi(g, c, b, e)).elementType = a, b.type = d, b.expirationTime = f, b;
            }
            function eh(a, b, c, d) {
                return (a = gi(7, a, d, b)).expirationTime = c, a;
            }
            function bh(a, b, c) {
                return (a = gi(6, a, null, b)).expirationTime = c, a;
            }
            function dh(a, b, c) {
                return (b = gi(4, null !== a.children ? a.children : [], a.key, b)).expirationTime = c, 
                b.stateNode = {
                    containerInfo: a.containerInfo,
                    pendingChildren: null,
                    implementation: a.implementation
                }, b;
            }
            function Pj(a, b) {
                var c = a.firstSuspendedTime;
                return a = a.lastSuspendedTime, 0 !== c && c >= b && a <= b;
            }
            function Mj(a, b) {
                var c = a.firstSuspendedTime, d = a.lastSuspendedTime;
                c < b && (a.firstSuspendedTime = b), (d > b || 0 === c) && (a.lastSuspendedTime = b), 
                b <= a.lastPingedTime && (a.lastPingedTime = 0), b <= a.lastExpiredTime && (a.lastExpiredTime = 0);
            }
            function Nj(a, b) {
                b > a.firstPendingTime && (a.firstPendingTime = b);
                var c = a.firstSuspendedTime;
                0 !== c && (b >= c ? a.firstSuspendedTime = a.lastSuspendedTime = a.nextKnownPendingLevel = 0 : b >= a.lastSuspendedTime && (a.lastSuspendedTime = b + 1), 
                b > a.nextKnownPendingLevel && (a.nextKnownPendingLevel = b));
            }
            function Rj(a, b) {
                var c = a.lastExpiredTime;
                (0 === c || c > b) && (a.lastExpiredTime = b);
            }
            function rk(a, b, c, d) {
                var e = b.current, f = Pg(), g = Mg.suspense;
                f = Qg(f, e, g);
                a: if (c) {
                    c = c._reactInternalFiber;
                    b: {
                        if (ec(c) !== c || 1 !== c.tag) throw Error(u(170));
                        var h = c;
                        do {
                            switch (h.tag) {
                              case 3:
                                h = h.stateNode.context;
                                break b;

                              case 1:
                                if (L(h.type)) {
                                    h = h.stateNode.__reactInternalMemoizedMergedChildContext;
                                    break b;
                                }
                            }
                            h = h.return;
                        } while (null !== h);
                        throw Error(u(171));
                    }
                    if (1 === c.tag) {
                        var k = c.type;
                        if (L(k)) {
                            c = If(c, k, h);
                            break a;
                        }
                    }
                    c = h;
                } else c = Cf;
                return null === b.context ? b.context = c : b.pendingContext = c, (b = Bg(f, g)).payload = {
                    element: a
                }, null !== (d = void 0 === d ? null : d) && (b.callback = d), Dg(e, b), Rg(e, f), 
                f;
            }
            function sk(a) {
                if (!(a = a.current).child) return null;
                switch (a.child.tag) {
                  case 5:
                  default:
                    return a.child.stateNode;
                }
            }
            function tk(a, b) {
                null !== (a = a.memoizedState) && null !== a.dehydrated && a.retryTime < b && (a.retryTime = b);
            }
            function uk(a, b) {
                tk(a, b), (a = a.alternate) && tk(a, b);
            }
            function vk(a, b, c) {
                var d = new function(a, b, c) {
                    this.tag = b, this.current = null, this.containerInfo = a, this.pingCache = this.pendingChildren = null, 
                    this.finishedExpirationTime = 0, this.finishedWork = null, this.timeoutHandle = -1, 
                    this.pendingContext = this.context = null, this.hydrate = c, this.callbackNode = null, 
                    this.callbackPriority = 90, this.lastExpiredTime = this.lastPingedTime = this.nextKnownPendingLevel = this.lastSuspendedTime = this.firstSuspendedTime = this.firstPendingTime = 0;
                }(a, b, c = null != c && !0 === c.hydrate), e = gi(3, null, null, 2 === b ? 7 : 1 === b ? 3 : 0);
                d.current = e, e.stateNode = d, a[we] = d.current, c && 0 !== b && function(a) {
                    var b = xc(a);
                    uc.forEach(function(c) {
                        yc(c, a, b);
                    }), vc.forEach(function(c) {
                        yc(c, a, b);
                    });
                }(9 === a.nodeType ? a : a.ownerDocument), this._internalRoot = d;
            }
            function wk(a) {
                return !(!a || 1 !== a.nodeType && 9 !== a.nodeType && 11 !== a.nodeType && (8 !== a.nodeType || " react-mount-point-unstable " !== a.nodeValue));
            }
            function zk(a, b, c, d, e) {
                var f = c._reactRootContainer;
                if (f) {
                    var g = f._internalRoot;
                    if ("function" == typeof e) {
                        var h = e;
                        e = function() {
                            var a = sk(g);
                            h.call(a);
                        };
                    }
                    rk(b, g, a, e);
                } else {
                    if (f = c._reactRootContainer = function(a, b) {
                        if (b || (b = !(!(b = a ? 9 === a.nodeType ? a.documentElement : a.firstChild : null) || 1 !== b.nodeType || !b.hasAttribute("data-reactroot"))), 
                        !b) for (var c; c = a.lastChild; ) a.removeChild(c);
                        return new vk(a, 0, b ? {
                            hydrate: !0
                        } : void 0);
                    }(c, d), g = f._internalRoot, "function" == typeof e) {
                        var k = e;
                        e = function() {
                            var a = sk(g);
                            k.call(a);
                        };
                    }
                    ck(function() {
                        rk(b, g, a, e);
                    });
                }
                return sk(g);
            }
            function Bk(a, b) {
                var c = 2 < arguments.length && void 0 !== arguments[2] ? arguments[2] : null;
                if (!wk(b)) throw Error(u(200));
                return function(a, b, c) {
                    var d = 3 < arguments.length && void 0 !== arguments[3] ? arguments[3] : null;
                    return {
                        $$typeof: Ha,
                        key: null == d ? null : "" + d,
                        children: a,
                        containerInfo: b,
                        implementation: c
                    };
                }(a, b, null, c);
            }
            vk.prototype.render = function(a, b) {
                rk(a, this._internalRoot, null, void 0 === b ? null : b);
            }, vk.prototype.unmount = function(a) {
                var b = this._internalRoot, c = void 0 === a ? null : a, d = b.containerInfo;
                rk(null, b, null, function() {
                    d[we] = null, null !== c && c();
                });
            }, jc = function(a) {
                if (13 === a.tag) {
                    var b = lg(Pg(), 150, 100);
                    Rg(a, b), uk(a, b);
                }
            }, kc = function(a) {
                if (13 === a.tag) {
                    Pg();
                    var b = kg++;
                    Rg(a, b), uk(a, b);
                }
            }, lc = function(a) {
                if (13 === a.tag) {
                    var b = Pg();
                    Rg(a, b = Qg(b, a, null)), uk(a, b);
                }
            }, Za = function(a, b, c) {
                switch (b) {
                  case "input":
                    if (Eb(a, c), b = c.name, "radio" === c.type && null != b) {
                        for (c = a; c.parentNode; ) c = c.parentNode;
                        for (c = c.querySelectorAll("input[name=" + JSON.stringify("" + b) + '][type="radio"]'), 
                        b = 0; b < c.length; b++) {
                            var d = c[b];
                            if (d !== a && d.form === a.form) {
                                var e = ye(d);
                                if (!e) throw Error(u(90));
                                zb(d), Eb(d, e);
                            }
                        }
                    }
                    break;

                  case "textarea":
                    Mb(a, c);
                    break;

                  case "select":
                    null != (b = c.value) && Jb(a, !!c.multiple, b, !1);
                }
            }, eb = bk, fb = function(a, b, c, d) {
                var e = T;
                T |= 4;
                try {
                    return fg(98, a.bind(null, b, c, d));
                } finally {
                    (T = e) === S && jg();
                }
            }, gb = function() {
                (T & (1 | oj | pj)) === S && (function() {
                    if (null !== Gj) {
                        var a = Gj;
                        Gj = null, a.forEach(function(a, c) {
                            Rj(c, a), Z(c);
                        }), jg();
                    }
                }(), Sj());
            }, hb = function(a, b) {
                var c = T;
                T |= 2;
                try {
                    return a(b);
                } finally {
                    (T = c) === S && jg();
                }
            };
            var Ck = {
                createPortal: Bk,
                findDOMNode: function(a) {
                    if (null == a) return null;
                    if (1 === a.nodeType) return a;
                    var b = a._reactInternalFiber;
                    if (void 0 === b) {
                        if ("function" == typeof a.render) throw Error(u(188));
                        throw Error(u(268, Object.keys(a)));
                    }
                    return a = null === (a = ic(b)) ? null : a.stateNode;
                },
                hydrate: function(a, b, c) {
                    if (!wk(b)) throw Error(u(200));
                    return zk(null, a, b, !0, c);
                },
                render: function(a, b, c) {
                    if (!wk(b)) throw Error(u(200));
                    return zk(null, a, b, !1, c);
                },
                unstable_renderSubtreeIntoContainer: function(a, b, c, d) {
                    if (!wk(c)) throw Error(u(200));
                    if (null == a || void 0 === a._reactInternalFiber) throw Error(u(38));
                    return zk(a, b, c, !1, d);
                },
                unmountComponentAtNode: function(a) {
                    if (!wk(a)) throw Error(u(40));
                    return !!a._reactRootContainer && (ck(function() {
                        zk(null, null, a, !1, function() {
                            a._reactRootContainer = null, a[we] = null;
                        });
                    }), !0);
                },
                unstable_createPortal: function() {
                    return Bk.apply(void 0, arguments);
                },
                unstable_batchedUpdates: bk,
                flushSync: function(a, b) {
                    if ((T & (oj | pj)) !== S) throw Error(u(187));
                    var c = T;
                    T |= 1;
                    try {
                        return fg(99, a.bind(null, b));
                    } finally {
                        T = c, jg();
                    }
                },
                __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                    Events: [ Cc, xe, ye, Ca.injectEventPluginsByName, fa, Sc, function(a) {
                        ya(a, Rc);
                    }, cb, db, Pd, Ba, Sj, {
                        current: !1
                    } ]
                }
            };
            !function(a) {
                var b = a.findFiberByHostInstance;
                (function(a) {
                    if ("undefined" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__) return !1;
                    var b = __REACT_DEVTOOLS_GLOBAL_HOOK__;
                    if (b.isDisabled || !b.supportsFiber) return !0;
                    try {
                        var c = b.inject(a);
                        kk = function(a) {
                            try {
                                b.onCommitFiberRoot(c, a, void 0, 64 == (64 & a.current.effectTag));
                            } catch (e) {}
                        }, Wi = function(a) {
                            try {
                                b.onCommitFiberUnmount(c, a);
                            } catch (e) {}
                        };
                    } catch (d) {}
                })(n({}, a, {
                    overrideHookState: null,
                    overrideProps: null,
                    setSuspenseHandler: null,
                    scheduleUpdate: null,
                    currentDispatcherRef: Ea.ReactCurrentDispatcher,
                    findHostInstanceByFiber: function(a) {
                        return null === (a = ic(a)) ? null : a.stateNode;
                    },
                    findFiberByHostInstance: function(a) {
                        return b ? b(a) : null;
                    },
                    findHostInstancesForRefresh: null,
                    scheduleRefresh: null,
                    scheduleRoot: null,
                    setRefreshHandler: null,
                    getCurrentFiber: null
                }));
            }({
                findFiberByHostInstance: Fc,
                bundleType: 0,
                version: "16.12.0",
                rendererPackageName: "react-dom"
            });
            var Dk = {
                default: Ck
            }, Ek = Dk && Ck || Dk;
            module.exports = Ek.default || Ek;
        },
        "./node_modules/react-dom/index.js": function(module, exports, __webpack_require__) {
            "use strict";
            !function checkDCE() {
                if ("undefined" != typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ && "function" == typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE) try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(checkDCE);
                } catch (err) {
                    console.error(err);
                }
            }(), module.exports = __webpack_require__("./node_modules/react-dom/cjs/react-dom.production.min.js");
        },
        "./node_modules/react/cjs/react.production.min.js": function(module, exports, __webpack_require__) {
            "use strict";
            var h = __webpack_require__("./node_modules/object-assign/index.js"), n = "function" == typeof Symbol && Symbol.for, p = n ? Symbol.for("react.element") : 60103, q = n ? Symbol.for("react.portal") : 60106, r = n ? Symbol.for("react.fragment") : 60107, t = n ? Symbol.for("react.strict_mode") : 60108, u = n ? Symbol.for("react.profiler") : 60114, v = n ? Symbol.for("react.provider") : 60109, w = n ? Symbol.for("react.context") : 60110, x = n ? Symbol.for("react.forward_ref") : 60112, y = n ? Symbol.for("react.suspense") : 60113;
            n && Symbol.for("react.suspense_list");
            var z = n ? Symbol.for("react.memo") : 60115, aa = n ? Symbol.for("react.lazy") : 60116;
            n && Symbol.for("react.fundamental"), n && Symbol.for("react.responder"), n && Symbol.for("react.scope");
            var A = "function" == typeof Symbol && Symbol.iterator;
            function B(a) {
                for (var b = "https://reactjs.org/docs/error-decoder.html?invariant=" + a, c = 1; c < arguments.length; c++) b += "&args[]=" + encodeURIComponent(arguments[c]);
                return "Minified React error #" + a + "; visit " + b + " for the full message or use the non-minified dev environment for full errors and additional helpful warnings.";
            }
            var C = {
                isMounted: function() {
                    return !1;
                },
                enqueueForceUpdate: function() {},
                enqueueReplaceState: function() {},
                enqueueSetState: function() {}
            }, D = {};
            function E(a, b, c) {
                this.props = a, this.context = b, this.refs = D, this.updater = c || C;
            }
            function F() {}
            function G(a, b, c) {
                this.props = a, this.context = b, this.refs = D, this.updater = c || C;
            }
            E.prototype.isReactComponent = {}, E.prototype.setState = function(a, b) {
                if ("object" != typeof a && "function" != typeof a && null != a) throw Error(B(85));
                this.updater.enqueueSetState(this, a, b, "setState");
            }, E.prototype.forceUpdate = function(a) {
                this.updater.enqueueForceUpdate(this, a, "forceUpdate");
            }, F.prototype = E.prototype;
            var H = G.prototype = new F();
            H.constructor = G, h(H, E.prototype), H.isPureReactComponent = !0;
            var I = {
                current: null
            }, J = {
                current: null
            }, K = Object.prototype.hasOwnProperty, L = {
                key: !0,
                ref: !0,
                __self: !0,
                __source: !0
            };
            function M(a, b, c) {
                var e, d = {}, g = null, l = null;
                if (null != b) for (e in void 0 !== b.ref && (l = b.ref), void 0 !== b.key && (g = "" + b.key), 
                b) K.call(b, e) && !L.hasOwnProperty(e) && (d[e] = b[e]);
                var f = arguments.length - 2;
                if (1 === f) d.children = c; else if (1 < f) {
                    for (var k = Array(f), m = 0; m < f; m++) k[m] = arguments[m + 2];
                    d.children = k;
                }
                if (a && a.defaultProps) for (e in f = a.defaultProps) void 0 === d[e] && (d[e] = f[e]);
                return {
                    $$typeof: p,
                    type: a,
                    key: g,
                    ref: l,
                    props: d,
                    _owner: J.current
                };
            }
            function N(a) {
                return "object" == typeof a && null !== a && a.$$typeof === p;
            }
            var O = /\/+/g, P = [];
            function Q(a, b, c, e) {
                if (P.length) {
                    var d = P.pop();
                    return d.result = a, d.keyPrefix = b, d.func = c, d.context = e, d.count = 0, d;
                }
                return {
                    result: a,
                    keyPrefix: b,
                    func: c,
                    context: e,
                    count: 0
                };
            }
            function R(a) {
                a.result = null, a.keyPrefix = null, a.func = null, a.context = null, a.count = 0, 
                10 > P.length && P.push(a);
            }
            function U(a, b, c) {
                return null == a ? 0 : function S(a, b, c, e) {
                    var d = typeof a;
                    "undefined" !== d && "boolean" !== d || (a = null);
                    var g = !1;
                    if (null === a) g = !0; else switch (d) {
                      case "string":
                      case "number":
                        g = !0;
                        break;

                      case "object":
                        switch (a.$$typeof) {
                          case p:
                          case q:
                            g = !0;
                        }
                    }
                    if (g) return c(e, a, "" === b ? "." + T(a, 0) : b), 1;
                    if (g = 0, b = "" === b ? "." : b + ":", Array.isArray(a)) for (var l = 0; l < a.length; l++) {
                        var f = b + T(d = a[l], l);
                        g += S(d, f, c, e);
                    } else if (f = null === a || "object" != typeof a ? null : "function" == typeof (f = A && a[A] || a["@@iterator"]) ? f : null, 
                    "function" == typeof f) for (a = f.call(a), l = 0; !(d = a.next()).done; ) g += S(d = d.value, f = b + T(d, l++), c, e); else if ("object" === d) throw c = "" + a, 
                    Error(B(31, "[object Object]" === c ? "object with keys {" + Object.keys(a).join(", ") + "}" : c, ""));
                    return g;
                }(a, "", b, c);
            }
            function T(a, b) {
                return "object" == typeof a && null !== a && null != a.key ? function(a) {
                    var b = {
                        "=": "=0",
                        ":": "=2"
                    };
                    return "$" + ("" + a).replace(/[=:]/g, function(a) {
                        return b[a];
                    });
                }(a.key) : b.toString(36);
            }
            function ca(a, b) {
                a.func.call(a.context, b, a.count++);
            }
            function da(a, b, c) {
                var e = a.result, d = a.keyPrefix;
                a = a.func.call(a.context, b, a.count++), Array.isArray(a) ? V(a, e, c, function(a) {
                    return a;
                }) : null != a && (N(a) && (a = function(a, b) {
                    return {
                        $$typeof: p,
                        type: a.type,
                        key: b,
                        ref: a.ref,
                        props: a.props,
                        _owner: a._owner
                    };
                }(a, d + (!a.key || b && b.key === a.key ? "" : ("" + a.key).replace(O, "$&/") + "/") + c)), 
                e.push(a));
            }
            function V(a, b, c, e, d) {
                var g = "";
                null != c && (g = ("" + c).replace(O, "$&/") + "/"), U(a, da, b = Q(b, g, e, d)), 
                R(b);
            }
            function W() {
                var a = I.current;
                if (null === a) throw Error(B(321));
                return a;
            }
            var X = {
                Children: {
                    map: function(a, b, c) {
                        if (null == a) return a;
                        var e = [];
                        return V(a, e, null, b, c), e;
                    },
                    forEach: function(a, b, c) {
                        if (null == a) return a;
                        U(a, ca, b = Q(null, null, b, c)), R(b);
                    },
                    count: function(a) {
                        return U(a, function() {
                            return null;
                        }, null);
                    },
                    toArray: function(a) {
                        var b = [];
                        return V(a, b, null, function(a) {
                            return a;
                        }), b;
                    },
                    only: function(a) {
                        if (!N(a)) throw Error(B(143));
                        return a;
                    }
                },
                createRef: function() {
                    return {
                        current: null
                    };
                },
                Component: E,
                PureComponent: G,
                createContext: function(a, b) {
                    return void 0 === b && (b = null), (a = {
                        $$typeof: w,
                        _calculateChangedBits: b,
                        _currentValue: a,
                        _currentValue2: a,
                        _threadCount: 0,
                        Provider: null,
                        Consumer: null
                    }).Provider = {
                        $$typeof: v,
                        _context: a
                    }, a.Consumer = a;
                },
                forwardRef: function(a) {
                    return {
                        $$typeof: x,
                        render: a
                    };
                },
                lazy: function(a) {
                    return {
                        $$typeof: aa,
                        _ctor: a,
                        _status: -1,
                        _result: null
                    };
                },
                memo: function(a, b) {
                    return {
                        $$typeof: z,
                        type: a,
                        compare: void 0 === b ? null : b
                    };
                },
                useCallback: function(a, b) {
                    return W().useCallback(a, b);
                },
                useContext: function(a, b) {
                    return W().useContext(a, b);
                },
                useEffect: function(a, b) {
                    return W().useEffect(a, b);
                },
                useImperativeHandle: function(a, b, c) {
                    return W().useImperativeHandle(a, b, c);
                },
                useDebugValue: function() {},
                useLayoutEffect: function(a, b) {
                    return W().useLayoutEffect(a, b);
                },
                useMemo: function(a, b) {
                    return W().useMemo(a, b);
                },
                useReducer: function(a, b, c) {
                    return W().useReducer(a, b, c);
                },
                useRef: function(a) {
                    return W().useRef(a);
                },
                useState: function(a) {
                    return W().useState(a);
                },
                Fragment: r,
                Profiler: u,
                StrictMode: t,
                Suspense: y,
                createElement: M,
                cloneElement: function(a, b, c) {
                    if (null === a || void 0 === a) throw Error(B(267, a));
                    var e = h({}, a.props), d = a.key, g = a.ref, l = a._owner;
                    if (null != b) {
                        if (void 0 !== b.ref && (g = b.ref, l = J.current), void 0 !== b.key && (d = "" + b.key), 
                        a.type && a.type.defaultProps) var f = a.type.defaultProps;
                        for (k in b) K.call(b, k) && !L.hasOwnProperty(k) && (e[k] = void 0 === b[k] && void 0 !== f ? f[k] : b[k]);
                    }
                    var k = arguments.length - 2;
                    if (1 === k) e.children = c; else if (1 < k) {
                        f = Array(k);
                        for (var m = 0; m < k; m++) f[m] = arguments[m + 2];
                        e.children = f;
                    }
                    return {
                        $$typeof: p,
                        type: a.type,
                        key: d,
                        ref: g,
                        props: e,
                        _owner: l
                    };
                },
                createFactory: function(a) {
                    var b = M.bind(null, a);
                    return b.type = a, b;
                },
                isValidElement: N,
                version: "16.12.0",
                __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED: {
                    ReactCurrentDispatcher: I,
                    ReactCurrentBatchConfig: {
                        suspense: null
                    },
                    ReactCurrentOwner: J,
                    IsSomeRendererActing: {
                        current: !1
                    },
                    assign: h
                }
            }, Y = {
                default: X
            }, Z = Y && X || Y;
            module.exports = Z.default || Z;
        },
        "./node_modules/react/index.js": function(module, exports, __webpack_require__) {
            "use strict";
            module.exports = __webpack_require__("./node_modules/react/cjs/react.production.min.js");
        },
        "./node_modules/scheduler/cjs/scheduler.production.min.js": function(module, exports, __webpack_require__) {
            "use strict";
            var f, g, h, k, l;
            if (Object.defineProperty(exports, "__esModule", {
                value: !0
            }), "undefined" == typeof window || "function" != typeof MessageChannel) {
                var p = null, q = null, t = function() {
                    if (null !== p) try {
                        var a = exports.unstable_now();
                        p(!0, a), p = null;
                    } catch (b) {
                        throw setTimeout(t, 0), b;
                    }
                }, u = Date.now();
                exports.unstable_now = function() {
                    return Date.now() - u;
                }, f = function(a) {
                    null !== p ? setTimeout(f, 0, a) : (p = a, setTimeout(t, 0));
                }, g = function(a, b) {
                    q = setTimeout(a, b);
                }, h = function() {
                    clearTimeout(q);
                }, k = function() {
                    return !1;
                }, l = exports.unstable_forceFrameRate = function() {};
            } else {
                var w = window.performance, x = window.Date, y = window.setTimeout, z = window.clearTimeout;
                if ("undefined" != typeof console) {
                    var A = window.cancelAnimationFrame;
                    "function" != typeof window.requestAnimationFrame && console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills"), 
                    "function" != typeof A && console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://fb.me/react-polyfills");
                }
                if ("object" == typeof w && "function" == typeof w.now) exports.unstable_now = function() {
                    return w.now();
                }; else {
                    var B = x.now();
                    exports.unstable_now = function() {
                        return x.now() - B;
                    };
                }
                var C = !1, D = null, E = -1, F = 5, G = 0;
                k = function() {
                    return exports.unstable_now() >= G;
                }, l = function() {}, exports.unstable_forceFrameRate = function(a) {
                    0 > a || 125 < a ? console.error("forceFrameRate takes a positive int between 0 and 125, forcing framerates higher than 125 fps is not unsupported") : F = 0 < a ? Math.floor(1e3 / a) : 5;
                };
                var H = new MessageChannel(), I = H.port2;
                H.port1.onmessage = function() {
                    if (null !== D) {
                        var a = exports.unstable_now();
                        G = a + F;
                        try {
                            D(!0, a) ? I.postMessage(null) : (C = !1, D = null);
                        } catch (b) {
                            throw I.postMessage(null), b;
                        }
                    } else C = !1;
                }, f = function(a) {
                    D = a, C || (C = !0, I.postMessage(null));
                }, g = function(a, b) {
                    E = y(function() {
                        a(exports.unstable_now());
                    }, b);
                }, h = function() {
                    z(E), E = -1;
                };
            }
            function J(a, b) {
                var c = a.length;
                a.push(b);
                a: for (;;) {
                    var d = Math.floor((c - 1) / 2), e = a[d];
                    if (!(void 0 !== e && 0 < K(e, b))) break a;
                    a[d] = b, a[c] = e, c = d;
                }
            }
            function L(a) {
                return void 0 === (a = a[0]) ? null : a;
            }
            function M(a) {
                var b = a[0];
                if (void 0 !== b) {
                    var c = a.pop();
                    if (c !== b) {
                        a[0] = c;
                        a: for (var d = 0, e = a.length; d < e; ) {
                            var m = 2 * (d + 1) - 1, n = a[m], v = m + 1, r = a[v];
                            if (void 0 !== n && 0 > K(n, c)) void 0 !== r && 0 > K(r, n) ? (a[d] = r, a[v] = c, 
                            d = v) : (a[d] = n, a[m] = c, d = m); else {
                                if (!(void 0 !== r && 0 > K(r, c))) break a;
                                a[d] = r, a[v] = c, d = v;
                            }
                        }
                    }
                    return b;
                }
                return null;
            }
            function K(a, b) {
                var c = a.sortIndex - b.sortIndex;
                return 0 !== c ? c : a.id - b.id;
            }
            var N = [], O = [], P = 1, Q = null, R = 3, S = !1, T = !1, U = !1;
            function V(a) {
                for (var b = L(O); null !== b; ) {
                    if (null === b.callback) M(O); else {
                        if (!(b.startTime <= a)) break;
                        M(O), b.sortIndex = b.expirationTime, J(N, b);
                    }
                    b = L(O);
                }
            }
            function W(a) {
                if (U = !1, V(a), !T) if (null !== L(N)) T = !0, f(X); else {
                    var b = L(O);
                    null !== b && g(W, b.startTime - a);
                }
            }
            function X(a, b) {
                T = !1, U && (U = !1, h()), S = !0;
                var c = R;
                try {
                    for (V(b), Q = L(N); null !== Q && (!(Q.expirationTime > b) || a && !k()); ) {
                        var d = Q.callback;
                        if (null !== d) {
                            Q.callback = null, R = Q.priorityLevel;
                            var e = d(Q.expirationTime <= b);
                            b = exports.unstable_now(), "function" == typeof e ? Q.callback = e : Q === L(N) && M(N), 
                            V(b);
                        } else M(N);
                        Q = L(N);
                    }
                    if (null !== Q) var m = !0; else {
                        var n = L(O);
                        null !== n && g(W, n.startTime - b), m = !1;
                    }
                    return m;
                } finally {
                    Q = null, R = c, S = !1;
                }
            }
            function Y(a) {
                switch (a) {
                  case 1:
                    return -1;

                  case 2:
                    return 250;

                  case 5:
                    return 1073741823;

                  case 4:
                    return 1e4;

                  default:
                    return 5e3;
                }
            }
            var Z = l;
            exports.unstable_ImmediatePriority = 1, exports.unstable_UserBlockingPriority = 2, 
            exports.unstable_NormalPriority = 3, exports.unstable_IdlePriority = 5, exports.unstable_LowPriority = 4, 
            exports.unstable_runWithPriority = function(a, b) {
                switch (a) {
                  case 1:
                  case 2:
                  case 3:
                  case 4:
                  case 5:
                    break;

                  default:
                    a = 3;
                }
                var c = R;
                R = a;
                try {
                    return b();
                } finally {
                    R = c;
                }
            }, exports.unstable_next = function(a) {
                switch (R) {
                  case 1:
                  case 2:
                  case 3:
                    var b = 3;
                    break;

                  default:
                    b = R;
                }
                var c = R;
                R = b;
                try {
                    return a();
                } finally {
                    R = c;
                }
            }, exports.unstable_scheduleCallback = function(a, b, c) {
                var d = exports.unstable_now();
                if ("object" == typeof c && null !== c) {
                    var e = c.delay;
                    e = "number" == typeof e && 0 < e ? d + e : d, c = "number" == typeof c.timeout ? c.timeout : Y(a);
                } else c = Y(a), e = d;
                return a = {
                    id: P++,
                    callback: b,
                    priorityLevel: a,
                    startTime: e,
                    expirationTime: c = e + c,
                    sortIndex: -1
                }, e > d ? (a.sortIndex = e, J(O, a), null === L(N) && a === L(O) && (U ? h() : U = !0, 
                g(W, e - d))) : (a.sortIndex = c, J(N, a), T || S || (T = !0, f(X))), a;
            }, exports.unstable_cancelCallback = function(a) {
                a.callback = null;
            }, exports.unstable_wrapCallback = function(a) {
                var b = R;
                return function() {
                    var c = R;
                    R = b;
                    try {
                        return a.apply(this, arguments);
                    } finally {
                        R = c;
                    }
                };
            }, exports.unstable_getCurrentPriorityLevel = function() {
                return R;
            }, exports.unstable_shouldYield = function() {
                var a = exports.unstable_now();
                V(a);
                var b = L(N);
                return b !== Q && null !== Q && null !== b && null !== b.callback && b.startTime <= a && b.expirationTime < Q.expirationTime || k();
            }, exports.unstable_requestPaint = Z, exports.unstable_continueExecution = function() {
                T || S || (T = !0, f(X));
            }, exports.unstable_pauseExecution = function() {}, exports.unstable_getFirstCallbackNode = function() {
                return L(N);
            }, exports.unstable_Profiling = null;
        },
        "./node_modules/scheduler/index.js": function(module, exports, __webpack_require__) {
            "use strict";
            module.exports = __webpack_require__("./node_modules/scheduler/cjs/scheduler.production.min.js");
        },
        "./node_modules/style-loader/lib/addStyles.js": function(module, exports, __webpack_require__) {
            var stylesInDom = {}, isOldIE = function(fn) {
                var memo;
                return function() {
                    return void 0 === memo && (memo = fn.apply(this, arguments)), memo;
                };
            }(function() {
                return window && document && document.all && !window.atob;
            }), getElement = function(fn) {
                var memo = {};
                return function(target, parent) {
                    if ("function" == typeof target) return target();
                    if (void 0 === memo[target]) {
                        var styleTarget = function(target, parent) {
                            return parent ? parent.querySelector(target) : document.querySelector(target);
                        }.call(this, target, parent);
                        if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) try {
                            styleTarget = styleTarget.contentDocument.head;
                        } catch (e) {
                            styleTarget = null;
                        }
                        memo[target] = styleTarget;
                    }
                    return memo[target];
                };
            }(), singleton = null, singletonCounter = 0, stylesInsertedAtTop = [], fixUrls = __webpack_require__("./node_modules/style-loader/lib/urls.js");
            function addStylesToDom(styles, options) {
                for (var i = 0; i < styles.length; i++) {
                    var item = styles[i], domStyle = stylesInDom[item.id];
                    if (domStyle) {
                        domStyle.refs++;
                        for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j](item.parts[j]);
                        for (;j < item.parts.length; j++) domStyle.parts.push(addStyle(item.parts[j], options));
                    } else {
                        var parts = [];
                        for (j = 0; j < item.parts.length; j++) parts.push(addStyle(item.parts[j], options));
                        stylesInDom[item.id] = {
                            id: item.id,
                            refs: 1,
                            parts: parts
                        };
                    }
                }
            }
            function listToStyles(list, options) {
                for (var styles = [], newStyles = {}, i = 0; i < list.length; i++) {
                    var item = list[i], id = options.base ? item[0] + options.base : item[0], part = {
                        css: item[1],
                        media: item[2],
                        sourceMap: item[3]
                    };
                    newStyles[id] ? newStyles[id].parts.push(part) : styles.push(newStyles[id] = {
                        id: id,
                        parts: [ part ]
                    });
                }
                return styles;
            }
            function insertStyleElement(options, style) {
                var target = getElement(options.insertInto);
                if (!target) throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
                var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];
                if ("top" === options.insertAt) lastStyleElementInsertedAtTop ? lastStyleElementInsertedAtTop.nextSibling ? target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling) : target.appendChild(style) : target.insertBefore(style, target.firstChild), 
                stylesInsertedAtTop.push(style); else if ("bottom" === options.insertAt) target.appendChild(style); else {
                    if ("object" != typeof options.insertAt || !options.insertAt.before) throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
                    var nextSibling = getElement(options.insertAt.before, target);
                    target.insertBefore(style, nextSibling);
                }
            }
            function removeStyleElement(style) {
                if (null === style.parentNode) return !1;
                style.parentNode.removeChild(style);
                var idx = stylesInsertedAtTop.indexOf(style);
                idx >= 0 && stylesInsertedAtTop.splice(idx, 1);
            }
            function createStyleElement(options) {
                var style = document.createElement("style");
                if (void 0 === options.attrs.type && (options.attrs.type = "text/css"), void 0 === options.attrs.nonce) {
                    var nonce = function() {
                        0;
                        return __webpack_require__.nc;
                    }();
                    nonce && (options.attrs.nonce = nonce);
                }
                return addAttrs(style, options.attrs), insertStyleElement(options, style), style;
            }
            function addAttrs(el, attrs) {
                Object.keys(attrs).forEach(function(key) {
                    el.setAttribute(key, attrs[key]);
                });
            }
            function addStyle(obj, options) {
                var style, update, remove, result;
                if (options.transform && obj.css) {
                    if (!(result = "function" == typeof options.transform ? options.transform(obj.css) : options.transform.default(obj.css))) return function() {};
                    obj.css = result;
                }
                if (options.singleton) {
                    var styleIndex = singletonCounter++;
                    style = singleton || (singleton = createStyleElement(options)), update = applyToSingletonTag.bind(null, style, styleIndex, !1), 
                    remove = applyToSingletonTag.bind(null, style, styleIndex, !0);
                } else obj.sourceMap && "function" == typeof URL && "function" == typeof URL.createObjectURL && "function" == typeof URL.revokeObjectURL && "function" == typeof Blob && "function" == typeof btoa ? (style = function(options) {
                    var link = document.createElement("link");
                    return void 0 === options.attrs.type && (options.attrs.type = "text/css"), options.attrs.rel = "stylesheet", 
                    addAttrs(link, options.attrs), insertStyleElement(options, link), link;
                }(options), update = function(link, options, obj) {
                    var css = obj.css, sourceMap = obj.sourceMap, autoFixUrls = void 0 === options.convertToAbsoluteUrls && sourceMap;
                    (options.convertToAbsoluteUrls || autoFixUrls) && (css = fixUrls(css));
                    sourceMap && (css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */");
                    var blob = new Blob([ css ], {
                        type: "text/css"
                    }), oldSrc = link.href;
                    link.href = URL.createObjectURL(blob), oldSrc && URL.revokeObjectURL(oldSrc);
                }.bind(null, style, options), remove = function() {
                    removeStyleElement(style), style.href && URL.revokeObjectURL(style.href);
                }) : (style = createStyleElement(options), update = function(style, obj) {
                    var css = obj.css, media = obj.media;
                    media && style.setAttribute("media", media);
                    if (style.styleSheet) style.styleSheet.cssText = css; else {
                        for (;style.firstChild; ) style.removeChild(style.firstChild);
                        style.appendChild(document.createTextNode(css));
                    }
                }.bind(null, style), remove = function() {
                    removeStyleElement(style);
                });
                return update(obj), function(newObj) {
                    if (newObj) {
                        if (newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap) return;
                        update(obj = newObj);
                    } else remove();
                };
            }
            module.exports = function(list, options) {
                if ("undefined" != typeof DEBUG && DEBUG && "object" != typeof document) throw new Error("The style-loader cannot be used in a non-browser environment");
                (options = options || {}).attrs = "object" == typeof options.attrs ? options.attrs : {}, 
                options.singleton || "boolean" == typeof options.singleton || (options.singleton = isOldIE()), 
                options.insertInto || (options.insertInto = "head"), options.insertAt || (options.insertAt = "bottom");
                var styles = listToStyles(list, options);
                return addStylesToDom(styles, options), function(newList) {
                    for (var mayRemove = [], i = 0; i < styles.length; i++) {
                        var item = styles[i];
                        (domStyle = stylesInDom[item.id]).refs--, mayRemove.push(domStyle);
                    }
                    newList && addStylesToDom(listToStyles(newList, options), options);
                    for (i = 0; i < mayRemove.length; i++) {
                        var domStyle;
                        if (0 === (domStyle = mayRemove[i]).refs) {
                            for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();
                            delete stylesInDom[domStyle.id];
                        }
                    }
                };
            };
            var replaceText = function() {
                var textStore = [];
                return function(index, replacement) {
                    return textStore[index] = replacement, textStore.filter(Boolean).join("\n");
                };
            }();
            function applyToSingletonTag(style, index, remove, obj) {
                var css = remove ? "" : obj.css;
                if (style.styleSheet) style.styleSheet.cssText = replaceText(index, css); else {
                    var cssNode = document.createTextNode(css), childNodes = style.childNodes;
                    childNodes[index] && style.removeChild(childNodes[index]), childNodes.length ? style.insertBefore(cssNode, childNodes[index]) : style.appendChild(cssNode);
                }
            }
        },
        "./node_modules/style-loader/lib/urls.js": function(module, exports) {
            module.exports = function(css) {
                var location = "undefined" != typeof window && window.location;
                if (!location) throw new Error("fixUrls requires window.location");
                if (!css || "string" != typeof css) return css;
                var baseUrl = location.protocol + "//" + location.host, currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");
                return css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
                    var newUrl, unquotedOrigUrl = origUrl.trim().replace(/^"(.*)"$/, function(o, $1) {
                        return $1;
                    }).replace(/^'(.*)'$/, function(o, $1) {
                        return $1;
                    });
                    return /^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl) ? fullMatch : (newUrl = 0 === unquotedOrigUrl.indexOf("//") ? unquotedOrigUrl : 0 === unquotedOrigUrl.indexOf("/") ? baseUrl + unquotedOrigUrl : currentDir + unquotedOrigUrl.replace(/^\.\//, ""), 
                    "url(" + JSON.stringify(newUrl) + ")");
                });
            };
        },
        "./src/components/toolbar_left.tsx": function(module, exports, __webpack_require__) {
            "use strict";
            var __extends = this && this.__extends || function() {
                var extendStatics = function(d, b) {
                    return (extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    } instanceof Array && function(d, b) {
                        d.__proto__ = b;
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                    })(d, b);
                };
                return function(d, b) {
                    function __() {
                        this.constructor = d;
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, 
                    new __());
                };
            }(), __importStar = this && this.__importStar || function(mod) {
                if (mod && mod.__esModule) return mod;
                var result = {};
                if (null != mod) for (var k in mod) Object.hasOwnProperty.call(mod, k) && (result[k] = mod[k]);
                return result.default = mod, result;
            };
            exports.__esModule = !0;
            var React = __importStar(__webpack_require__("./node_modules/react/index.js"));
            __webpack_require__("./src/lib/css/index.scss");
            var Toolbars = function(_super) {
                function Toolbars(props) {
                    var _this = _super.call(this, props) || this;
                    return _this.state = {
                        imgHidden: !0,
                        imgList: [],
                        paraHidden: !0,
                        titleHidden: !0,
                        moreHidden: !0,
                        listHidden: !0
                    }, _this;
                }
                return __extends(Toolbars, _super), Toolbars.prototype.onClick = function(type) {
                    this.props.onClick(type);
                }, Toolbars.prototype.listMouseOver = function() {
                    window.clearTimeout(this.listTimer), this.setState({
                        listHidden: !1
                    });
                }, Toolbars.prototype.listMouseOut = function() {
                    var _this = this;
                    this.listTimer = window.setTimeout(function() {
                        _this.setState({
                            listHidden: !0
                        });
                    }, 150);
                }, Toolbars.prototype.paraMouseOver = function() {
                    window.clearTimeout(this.paraTimer), this.setState({
                        paraHidden: !1
                    });
                }, Toolbars.prototype.paraMouseOut = function() {
                    var _this = this;
                    this.paraTimer = window.setTimeout(function() {
                        _this.setState({
                            paraHidden: !0
                        });
                    }, 150);
                }, Toolbars.prototype.titleMouseOver = function() {
                    window.clearTimeout(this.titleTimer), this.setState({
                        titleHidden: !1
                    });
                }, Toolbars.prototype.titleMouseOut = function() {
                    var _this = this;
                    this.titleTimer = window.setTimeout(function() {
                        _this.setState({
                            titleHidden: !0
                        });
                    }, 150);
                }, Toolbars.prototype.moreMouseOver = function() {
                    window.clearTimeout(this.moreTimer), this.setState({
                        moreHidden: !1
                    });
                }, Toolbars.prototype.moreMouseOut = function() {
                    var _this = this;
                    this.moreTimer = window.setTimeout(function() {
                        _this.setState({
                            moreHidden: !0
                        });
                    }, 150);
                }, Toolbars.prototype.imgClick = function() {
                    this.setState({
                        imgHidden: !this.state.imgHidden
                    });
                }, Toolbars.prototype.imgMouseOver = function() {
                    window.clearTimeout(this.timer), this.setState({
                        imgHidden: !1
                    });
                }, Toolbars.prototype.imgMouseOut = function() {
                    var _this = this;
                    this.timer = window.setTimeout(function() {
                        _this.setState({
                            imgHidden: !0
                        });
                    }, 150);
                }, Toolbars.prototype.addImgUrl = function() {
                    this.props.onClick("img");
                }, Toolbars.prototype.addImgFile = function(e) {
                    var imgList = this.state.imgList, index = imgList.length;
                    imgList.push(e.target.files[0]), this.setState({
                        imgList: imgList
                    }), this.props.addImg(e.target.files[0], index), e.target.value = "";
                }, Toolbars.prototype.render = function() {
                    var _this = this, _a = this.props, toolbar = _a.toolbar, words = _a.words, _b = this.state, imgHidden = _b.imgHidden, paraHidden = _b.paraHidden, titleHidden = _b.titleHidden, moreHidden = _b.moreHidden, listHidden = _b.listHidden;
                    return React.createElement(React.Fragment, null, React.createElement("div", {
                        className: "for-pc"
                    }, React.createElement("ul", null, toolbar.undo && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("undo");
                        },
                        title: words.undo + " (ctrl+z)"
                    }, React.createElement("i", {
                        className: "foricon for-undo"
                    })), toolbar.redo && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("redo");
                        },
                        title: words.redo + " (ctrl+y)"
                    }, React.createElement("i", {
                        className: "foricon for-redo"
                    })), toolbar.h1 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h1");
                        },
                        title: words.h1
                    }, "H1"), toolbar.h2 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h2");
                        },
                        title: words.h2
                    }, "H2"), toolbar.h3 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h3");
                        },
                        title: words.h3
                    }, "H3"), toolbar.h4 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h4");
                        },
                        title: words.h4
                    }, "H4"), toolbar.quote && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("quote");
                        },
                        title: words.quote
                    }, React.createElement("i", {
                        className: "foricon for-quote"
                    })), toolbar.para && React.createElement("li", {
                        className: "for-toolbar-para",
                        onMouseOver: function() {
                            return _this.paraMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.paraMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-text"
                    }), React.createElement("ul", {
                        style: paraHidden ? {
                            display: "none"
                        } : {}
                    }, React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("italic");
                        },
                        title: words.italic
                    }, words.italic), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("bold");
                        },
                        title: words.bold
                    }, words.bold), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("bolditalic");
                        },
                        title: words.bolditalic
                    }, words.bolditalic), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("delline");
                        },
                        title: words.delline
                    }, words.delline), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("underline");
                        },
                        title: words.underline
                    }, words.underline), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("keytext");
                        },
                        title: words.keytext
                    }, words.keytext), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("superscript");
                        },
                        title: words.superscript
                    }, words.superscript), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("subscript");
                        },
                        title: words.subscript
                    }, words.subscript))), toolbar.table && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("table");
                        },
                        title: words.table
                    }, React.createElement("i", {
                        className: "foricon for-table"
                    })), toolbar.img && React.createElement("li", {
                        className: "for-toolbar-img",
                        onMouseOver: function() {
                            return _this.imgMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.imgMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-image"
                    }), React.createElement("ul", {
                        style: imgHidden ? {
                            display: "none"
                        } : {}
                    }, React.createElement("li", {
                        onClick: function() {
                            return _this.addImgUrl();
                        }
                    }, words.addImgLink), React.createElement("li", null, words.addImg, React.createElement("input", {
                        type: "file",
                        accept: "image/gif,image/jpeg,image/jpg,image/png,image/svg",
                        onChange: function(e) {
                            return _this.addImgFile(e);
                        }
                    })))), toolbar.link && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("link");
                        },
                        title: words.link
                    }, React.createElement("i", {
                        className: "foricon for-link"
                    })), toolbar.list && React.createElement("li", {
                        className: "for-toolbar-list",
                        onMouseOver: function() {
                            return _this.listMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.listMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-list"
                    }), React.createElement("ul", {
                        style: listHidden ? {
                            display: "none"
                        } : {}
                    }, React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("disorderlist");
                        },
                        title: words.disorderlist
                    }, words.disorderlist), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("orderlist");
                        },
                        title: words.orderlist
                    }, words.orderlist), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("checklist");
                        },
                        title: words.checklist
                    }, words.checklist))), toolbar.inlinecode && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("inlinecode");
                        },
                        title: words.inlinecode
                    }, React.createElement("i", {
                        className: "foricon for-inner-code"
                    })), toolbar.code && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("code");
                        },
                        title: words.code
                    }, React.createElement("i", {
                        className: "foricon for-code"
                    })), toolbar.collapse && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("collapse");
                        },
                        title: words.collapse
                    }, React.createElement("i", {
                        className: "foricon for-collapse"
                    })), toolbar.toc && React.createElement("li", {
                        onClick: function() {
                            return _this.props.addTOC();
                        },
                        title: words.toc
                    }, React.createElement("i", {
                        className: "foricon for-toc"
                    })), toolbar.katex && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("katex");
                        },
                        title: words.katex
                    }, React.createElement("i", {
                        className: "foricon for-katex"
                    })), toolbar.save && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("save");
                        },
                        title: words.save + " (ctrl+s)"
                    }, React.createElement("i", {
                        className: "foricon for-save"
                    })))), React.createElement("div", {
                        className: "for-mobile"
                    }, React.createElement("ul", null, toolbar.undo && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("undo");
                        },
                        title: words.undo + " (ctrl+z)"
                    }, React.createElement("i", {
                        className: "foricon for-undo"
                    })), toolbar.redo && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("redo");
                        },
                        title: words.redo + " (ctrl+y)"
                    }, React.createElement("i", {
                        className: "foricon for-redo"
                    })), React.createElement("li", {
                        className: "for-toolbar-title",
                        onMouseOver: function() {
                            return _this.titleMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.titleMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-title"
                    }), React.createElement("ul", {
                        style: titleHidden ? {
                            display: "none"
                        } : {}
                    }, toolbar.h1 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h1");
                        },
                        title: words.h1
                    }, words.h1), toolbar.h2 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h2");
                        },
                        title: words.h2
                    }, words.h2), toolbar.h3 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h3");
                        },
                        title: words.h3
                    }, words.h3), toolbar.h4 && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("h4");
                        },
                        title: words.h4
                    }, words.h4))), toolbar.para && React.createElement("li", {
                        className: "for-toolbar-para",
                        onMouseOver: function() {
                            return _this.paraMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.paraMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-text"
                    }), React.createElement("ul", {
                        style: paraHidden ? {
                            display: "none"
                        } : {}
                    }, React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("italic");
                        },
                        title: words.italic
                    }, words.italic), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("bold");
                        },
                        title: words.bold
                    }, words.bold), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("bolditalic");
                        },
                        title: words.bolditalic
                    }, words.bolditalic), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("delline");
                        },
                        title: words.delline
                    }, words.delline), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("underline");
                        },
                        title: words.underline
                    }, words.underline), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("keytext");
                        },
                        title: words.keytext
                    }, words.keytext), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("superscript");
                        },
                        title: words.superscript
                    }, words.superscript), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("subscript");
                        },
                        title: words.subscript
                    }, words.subscript))), toolbar.img && React.createElement("li", {
                        className: "for-toolbar-img",
                        onMouseOver: function() {
                            return _this.imgMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.imgMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-image"
                    }), React.createElement("ul", {
                        style: imgHidden ? {
                            display: "none"
                        } : {}
                    }, React.createElement("li", {
                        onClick: function() {
                            return _this.addImgUrl();
                        }
                    }, words.addImgLink), React.createElement("li", null, words.addImg, React.createElement("input", {
                        type: "file",
                        accept: "image/gif,image/jpeg,image/jpg,image/png,image/svg",
                        onChange: function(e) {
                            return _this.addImgFile(e);
                        }
                    })))), toolbar.list && React.createElement("li", {
                        className: "for-toolbar-list",
                        onMouseOver: function() {
                            return _this.listMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.listMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-list"
                    }), React.createElement("ul", {
                        style: listHidden ? {
                            display: "none"
                        } : {}
                    }, React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("disorderlist");
                        },
                        title: words.disorderlist
                    }, words.disorderlist), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("orderlist");
                        },
                        title: words.orderlist
                    }, words.orderlist), React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("checklist");
                        },
                        title: words.checklist
                    }, words.checklist))), React.createElement("li", {
                        className: "for-toolbar-more",
                        onMouseOver: function() {
                            return _this.moreMouseOver();
                        },
                        onMouseOut: function() {
                            return _this.moreMouseOut();
                        }
                    }, React.createElement("i", {
                        className: "foricon for-more"
                    }), React.createElement("ul", {
                        style: moreHidden ? {
                            display: "none"
                        } : {}
                    }, toolbar.quote && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("quote");
                        },
                        title: words.quote
                    }, React.createElement("i", {
                        className: "foricon for-quote"
                    }), words.quote), toolbar.table && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("table");
                        },
                        title: words.table
                    }, React.createElement("i", {
                        className: "foricon for-table"
                    }), words.table), toolbar.link && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("link");
                        },
                        title: words.link
                    }, React.createElement("i", {
                        className: "foricon for-link"
                    }), words.link), toolbar.inlinecode && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("inlinecode");
                        },
                        title: words.inlinecode
                    }, React.createElement("i", {
                        className: "foricon for-inner-code"
                    }), words.inlinecode), toolbar.code && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("code");
                        },
                        title: words.code
                    }, React.createElement("i", {
                        className: "foricon for-code"
                    }), words.code), toolbar.collapse && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("collapse");
                        },
                        title: words.collapse
                    }, React.createElement("i", {
                        className: "foricon for-collapse"
                    }), words.collapse), toolbar.toc && React.createElement("li", {
                        onClick: function() {
                            return _this.props.addTOC();
                        },
                        title: words.toc
                    }, React.createElement("i", {
                        className: "foricon for-toc"
                    }), words.toc), toolbar.katex && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("katex");
                        },
                        title: words.katex
                    }, React.createElement("i", {
                        className: "foricon for-katex"
                    }), words.katex))), toolbar.save && React.createElement("li", {
                        onClick: function() {
                            return _this.onClick("save");
                        },
                        title: words.save + " (ctrl+s)"
                    }, React.createElement("i", {
                        className: "foricon for-save"
                    })))));
                }, Toolbars.defaultProps = {
                    onClick: function() {},
                    toolbar: {},
                    words: {}
                }, Toolbars;
            }(React.Component);
            exports.default = Toolbars;
        },
        "./src/components/toolbar_right.tsx": function(module, exports, __webpack_require__) {
            "use strict";
            var __extends = this && this.__extends || function() {
                var extendStatics = function(d, b) {
                    return (extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    } instanceof Array && function(d, b) {
                        d.__proto__ = b;
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                    })(d, b);
                };
                return function(d, b) {
                    function __() {
                        this.constructor = d;
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, 
                    new __());
                };
            }(), __importStar = this && this.__importStar || function(mod) {
                if (mod && mod.__esModule) return mod;
                var result = {};
                if (null != mod) for (var k in mod) Object.hasOwnProperty.call(mod, k) && (result[k] = mod[k]);
                return result.default = mod, result;
            }, __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var React = __importStar(__webpack_require__("./node_modules/react/index.js")), classnames_1 = __importDefault(__webpack_require__("./node_modules/classnames/index.js"));
            __webpack_require__("./src/lib/css/index.scss");
            var Toolbars = function(_super) {
                function Toolbars() {
                    return null !== _super && _super.apply(this, arguments) || this;
                }
                return __extends(Toolbars, _super), Toolbars.prototype.onClick = function(type) {
                    this.props.onClick(type);
                }, Toolbars.prototype.render = function() {
                    var _this = this, _a = this.props, preview = _a.preview, expand = _a.expand, subfield = _a.subfield, toolbar = _a.toolbar, words = _a.words, previewActive = classnames_1.default({
                        "for-active": preview
                    }), expandActive = classnames_1.default({
                        "for-active": expand
                    }), subfieldActive = classnames_1.default({
                        "for-active": subfield
                    });
                    return React.createElement(React.Fragment, null, React.createElement("div", {
                        className: "for-right-pc"
                    }, React.createElement("ul", null, toolbar.expand && React.createElement("li", {
                        className: expandActive,
                        onClick: function() {
                            return _this.onClick("expand");
                        },
                        title: expandActive ? words.fullscreenOff : words.fullscreenOn
                    }, expandActive ? React.createElement("i", {
                        className: "foricon for-contract"
                    }) : React.createElement("i", {
                        className: "foricon for-expand"
                    })), toolbar.preview && React.createElement("li", {
                        className: previewActive,
                        onClick: function() {
                            return _this.onClick("preview");
                        },
                        title: words.preview
                    }, previewActive ? React.createElement("i", {
                        className: "foricon for-eye-off"
                    }) : React.createElement("i", {
                        className: "foricon for-eye"
                    })), toolbar.subfield && React.createElement("li", {
                        className: subfieldActive,
                        onClick: function() {
                            return _this.onClick("subfield");
                        },
                        title: subfieldActive ? words.singleColumn : words.doubleColumn
                    }, React.createElement("i", {
                        className: "foricon for-subfield"
                    })))), React.createElement("div", {
                        className: "for-right-mobile"
                    }, React.createElement("ul", null, toolbar.expand && React.createElement("li", {
                        className: expandActive,
                        onClick: function() {
                            return _this.onClick("expand");
                        },
                        title: expandActive ? words.fullscreenOff : words.fullscreenOn
                    }, expandActive ? React.createElement("i", {
                        className: "foricon for-contract"
                    }) : React.createElement("i", {
                        className: "foricon for-expand"
                    })), toolbar.preview && React.createElement("li", {
                        className: previewActive,
                        onClick: function() {
                            return _this.onClick("preview");
                        },
                        title: words.preview
                    }, previewActive ? React.createElement("i", {
                        className: "foricon for-eye-off"
                    }) : React.createElement("i", {
                        className: "foricon for-eye"
                    })))));
                }, Toolbars.defaultProps = {
                    onClick: function() {},
                    toolbars: {},
                    words: {}
                }, Toolbars;
            }(React.Component);
            exports.default = Toolbars;
        },
        "./src/index.tsx": function(module, exports, __webpack_require__) {
            "use strict";
            var __extends = this && this.__extends || function() {
                var extendStatics = function(d, b) {
                    return (extendStatics = Object.setPrototypeOf || {
                        __proto__: []
                    } instanceof Array && function(d, b) {
                        d.__proto__ = b;
                    } || function(d, b) {
                        for (var p in b) b.hasOwnProperty(p) && (d[p] = b[p]);
                    })(d, b);
                };
                return function(d, b) {
                    function __() {
                        this.constructor = d;
                    }
                    extendStatics(d, b), d.prototype = null === b ? Object.create(b) : (__.prototype = b.prototype, 
                    new __());
                };
            }(), __assign = this && this.__assign || function() {
                return (__assign = Object.assign || function(t) {
                    for (var s, i = 1, n = arguments.length; i < n; i++) for (var p in s = arguments[i]) Object.prototype.hasOwnProperty.call(s, p) && (t[p] = s[p]);
                    return t;
                }).apply(this, arguments);
            }, __importStar = this && this.__importStar || function(mod) {
                if (mod && mod.__esModule) return mod;
                var result = {};
                if (null != mod) for (var k in mod) Object.hasOwnProperty.call(mod, k) && (result[k] = mod[k]);
                return result.default = mod, result;
            }, __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var React = __importStar(__webpack_require__("./node_modules/react/index.js")), classnames_1 = __importDefault(__webpack_require__("./node_modules/classnames/index.js")), marked_1 = __importDefault(__webpack_require__("./src/lib/helpers/marked.ts")), keydownListen_1 = __importDefault(__webpack_require__("./src/lib/helpers/keydownListen.ts")), toolbar_left_1 = __importDefault(__webpack_require__("./src/components/toolbar_left.tsx")), toolbar_right_1 = __importDefault(__webpack_require__("./src/components/toolbar_right.tsx")), function_1 = __webpack_require__("./src/lib/helpers/function.ts");
            __webpack_require__("./node_modules/highlight.js/styles/tomorrow.css"), __webpack_require__("./src/lib/fonts/iconfont.css"), 
            __webpack_require__("./src/lib/css/index.scss"), __webpack_require__("./src/lib/fonts/katex.css");
            var lib_1 = __webpack_require__("./src/lib/index.ts"), outlined_1 = __webpack_require__("./src/lib/helpers/outlined.ts"), MdEditor = function(_super) {
                function MdEditor(props) {
                    var _this = _super.call(this, props) || this;
                    return _this.$vm = React.createRef(), _this.$scrollEdit = React.createRef(), _this.$scrollPreview = React.createRef(), 
                    _this.$blockEdit = React.createRef(), _this.$blockPreview = React.createRef(), _this.initLanguage = function() {
                        var language = _this.props.language, lang = lib_1.CONFIG.langList.indexOf(language) >= 0 ? language : "zh-CN";
                        _this.setState({
                            words: lib_1.CONFIG.language[lang]
                        });
                    }, _this.handleChange = function(e) {
                        var value = e.target.value;
                        _this.props.onChange(value);
                    }, _this.saveHistory = function(value) {
                        var _a = _this.state, history = _a.history, historyIndex = _a.historyIndex;
                        history.splice(historyIndex + 1, history.length), history.length >= 20 && history.shift(), 
                        historyIndex = history.length, history.push(value), _this.setState({
                            history: history,
                            historyIndex: historyIndex
                        });
                    }, _this.save = function() {
                        _this.props.onSave(_this.$vm.current.value);
                    }, _this.undo = function() {
                        var _a = _this.state, history = _a.history, historyIndex = _a.historyIndex;
                        (historyIndex -= 1) < 0 || (_this.props.onChange(history[historyIndex]), _this.setState({
                            historyIndex: historyIndex
                        }));
                    }, _this.redo = function() {
                        var _a = _this.state, history = _a.history, historyIndex = _a.historyIndex;
                        (historyIndex += 1) >= history.length || (_this.props.onChange(history[historyIndex]), 
                        _this.setState({
                            historyIndex: historyIndex
                        }));
                    }, _this.toolBarLeftClick = function(type) {
                        var words = _this.state.words, insertTextObj = {
                            h1: {
                                prefix: "# ",
                                subfix: "",
                                str: words.h1
                            },
                            h2: {
                                prefix: "## ",
                                subfix: "",
                                str: words.h2
                            },
                            h3: {
                                prefix: "### ",
                                subfix: "",
                                str: words.h3
                            },
                            h4: {
                                prefix: "#### ",
                                subfix: "",
                                str: words.h4
                            },
                            quote: {
                                prefix: "> ",
                                subfix: "",
                                str: words.quote
                            },
                            italic: {
                                prefix: "*",
                                subfix: "*",
                                str: words.italic
                            },
                            bold: {
                                prefix: "**",
                                subfix: "**",
                                str: words.bold
                            },
                            bolditalic: {
                                prefix: "***",
                                subfix: "***",
                                str: words.bolditalic
                            },
                            delline: {
                                prefix: "~~",
                                subfix: "~~",
                                str: words.delline
                            },
                            underline: {
                                prefix: "<u>",
                                subfix: "</u>",
                                str: words.underline
                            },
                            keytext: {
                                prefix: "<kbd>",
                                subfix: "</kbd>",
                                str: words.keytext
                            },
                            superscript: {
                                prefix: "x<sup>",
                                subfix: "</sup>",
                                str: "y"
                            },
                            subscript: {
                                prefix: "a<sub>",
                                subfix: "</sub>",
                                str: "1"
                            },
                            table: {
                                prefix: "",
                                subfix: "",
                                str: "| title      | description     |\n| ---------- | --------------- |\n| for-editor | markdown editor |\n"
                            },
                            img: {
                                prefix: "![alt](",
                                subfix: ")",
                                str: "url"
                            },
                            link: {
                                prefix: "[title](",
                                subfix: ")",
                                str: "url"
                            },
                            orderlist: {
                                prefix: "\n1. ",
                                subfix: "",
                                str: "item"
                            },
                            disorderlist: {
                                prefix: "\n- ",
                                subfix: "",
                                str: "item"
                            },
                            checklist: {
                                prefix: "\n- [x] ",
                                subfix: "",
                                str: "item"
                            },
                            inlinecode: {
                                prefix: "`",
                                subfix: "`",
                                str: words.inlinecode
                            },
                            code: {
                                prefix: "```",
                                subfix: "\n\n```",
                                str: "language"
                            },
                            collapse: {
                                prefix: "\n<details>\n<summary>title</summary>\n\n",
                                subfix: "\n</details>\n\n",
                                str: words.collapse
                            },
                            katex: {
                                prefix: "\n\n$$\n",
                                subfix: "\n$$\n",
                                str: "a^2 + b^2 = c^2"
                            },
                            tab: {
                                prefix: "  ",
                                subfix: "",
                                str: ""
                            }
                        };
                        if (insertTextObj.hasOwnProperty(type) && _this.$vm.current) {
                            var value = function_1.insertText(_this.$vm.current, insertTextObj[type]);
                            _this.props.onChange(value);
                        }
                        var otherLeftClick = {
                            undo: _this.undo,
                            redo: _this.redo,
                            save: _this.save
                        };
                        otherLeftClick.hasOwnProperty(type) && otherLeftClick[type]();
                    }, _this.addImg = function(file, index) {
                        _this.props.addImg(file, index);
                    }, _this.$img2Url = function(name, url) {
                        var value = function_1.insertText(_this.$vm.current, {
                            prefix: "![" + name + "](" + url + ")",
                            subfix: "",
                            str: ""
                        });
                        _this.props.onChange(value);
                    }, _this.addTOC = function() {
                        var value = function_1.insertText(_this.$vm.current, {
                            prefix: "\n\x3c!-- TOC --\x3e\n\n",
                            subfix: "\n\x3c!-- TOC --\x3e\n",
                            str: outlined_1.generateTOC(_this.props.value)
                        });
                        _this.props.onChange(value);
                    }, _this.toolBarRightClick = function(type) {
                        var rightClick = {
                            preview: function() {
                                _this.setState({
                                    preview: !_this.state.preview
                                });
                            },
                            expand: function() {
                                _this.setState({
                                    expand: !_this.state.expand
                                });
                            },
                            subfield: function() {
                                var _a = _this.state, preview = _a.preview, subfield = _a.subfield;
                                preview ? subfield ? _this.setState({
                                    subfield: !1,
                                    preview: !1
                                }) : _this.setState({
                                    subfield: !0
                                }) : subfield ? _this.setState({
                                    subfield: !1
                                }) : _this.setState({
                                    preview: !0,
                                    subfield: !0
                                });
                            }
                        };
                        rightClick.hasOwnProperty(type) && rightClick[type]();
                    }, _this.focusText = function() {
                        _this.$vm.current.focus();
                    }, _this.handleScoll = function(e) {
                        var radio = _this.$blockEdit.current.scrollTop / (_this.$scrollEdit.current.scrollHeight - e.currentTarget.offsetHeight);
                        _this.$blockPreview.current.scrollTop = (_this.$scrollPreview.current.scrollHeight - _this.$blockPreview.current.offsetHeight) * radio;
                    }, _this.state = {
                        preview: props.preview,
                        expand: props.expand,
                        subfield: props.subfield,
                        history: [],
                        historyIndex: 0,
                        lineIndex: 1,
                        value: props.value,
                        words: {}
                    }, _this;
                }
                return __extends(MdEditor, _super), MdEditor.prototype.componentDidMount = function() {
                    var _this = this, value = this.props.value;
                    keydownListen_1.default(this.$vm.current, function(type) {
                        _this.toolBarLeftClick(type);
                    }), this.reLineNum(value), this.initLanguage();
                }, MdEditor.prototype.componentDidUpdate = function(preProps) {
                    var _this = this, _a = this.props, value = _a.value, preview = _a.preview, expand = _a.expand, subfield = _a.subfield, _b = this.state, history = _b.history, historyIndex = _b.historyIndex;
                    preProps.value !== value && this.reLineNum(value), value !== history[historyIndex] && (window.clearTimeout(this.currentTimeout), 
                    this.currentTimeout = window.setTimeout(function() {
                        _this.saveHistory(value);
                    }, 500)), subfield !== preProps.subfield && this.state.subfield !== subfield && this.setState({
                        subfield: subfield
                    }), preview !== preProps.preview && this.state.preview !== preview && this.setState({
                        preview: preview
                    }), expand !== preProps.expand && this.state.expand !== expand && this.setState({
                        expand: expand
                    });
                }, MdEditor.prototype.reLineNum = function(value) {
                    var lineIndex = value ? value.split("\n").length : 1;
                    this.setState({
                        lineIndex: lineIndex
                    });
                }, MdEditor.prototype.render = function() {
                    var _a = this.state, preview = _a.preview, expand = _a.expand, subfield = _a.subfield, lineIndex = _a.lineIndex, words = _a.words, _b = this.props, value = _b.value, placeholder = _b.placeholder, fontSize = _b.fontSize, disabled = _b.disabled, height = _b.height, style = _b.style, toolbar = _b.toolbar, outline = _b.outline, editorClass = classnames_1.default({
                        "for-editor-edit": !0,
                        "for-panel": !0,
                        "for-active": preview && subfield,
                        "for-edit-preview": preview && !subfield
                    }), previewClass = classnames_1.default({
                        "for-panel": !0,
                        "for-editor-preview": !0,
                        "for-active": preview && subfield
                    }), fullscreen = classnames_1.default({
                        "for-container": !0,
                        "for-fullscreen": expand
                    }), lineNumStyles = classnames_1.default({
                        "for-line-num": !0,
                        hidden: !this.props.lineNum
                    });
                    return React.createElement("div", {
                        className: fullscreen,
                        style: __assign({
                            height: height
                        }, style)
                    }, Boolean(Object.keys(toolbar).length) && React.createElement("div", {
                        className: "for-toolbar"
                    }, React.createElement(toolbar_left_1.default, __assign({
                        toolbar: toolbar,
                        words: words,
                        onClick: this.toolBarLeftClick,
                        addImg: this.addImg,
                        addTOC: this.addTOC
                    }, this.props)), React.createElement(toolbar_right_1.default, {
                        toolbar: toolbar,
                        words: words,
                        preview: preview,
                        expand: expand,
                        subfield: subfield,
                        onClick: this.toolBarRightClick
                    })), React.createElement("div", {
                        className: "for-editor",
                        style: {
                            fontSize: fontSize
                        }
                    }, React.createElement("div", {
                        className: editorClass,
                        ref: this.$blockEdit,
                        onScroll: this.handleScoll,
                        onClick: this.focusText
                    }, React.createElement("div", {
                        className: "for-editor-block",
                        ref: this.$scrollEdit
                    }, function() {
                        for (var list = [], i = 0; i < lineIndex; i++) list.push(React.createElement("li", {
                            key: i + 1
                        }, i + 1));
                        return React.createElement("ul", {
                            className: lineNumStyles
                        }, list);
                    }(), React.createElement("div", {
                        className: "for-editor-content"
                    }, React.createElement("pre", null, value, " "), React.createElement("textarea", {
                        ref: this.$vm,
                        value: value,
                        disabled: disabled,
                        onChange: this.handleChange,
                        placeholder: placeholder || words.placeholder
                    })))), preview && outline && React.createElement("div", {
                        id: "for-outline-box",
                        className: "for-outline-box"
                    }, React.createElement("div", {
                        className: "for-outline-title"
                    }, React.createElement("i", {
                        className: "foricon for-outline"
                    })), React.createElement("div", {
                        className: "for-outline-body",
                        dangerouslySetInnerHTML: {
                            __html: outlined_1.outlined(value)
                        }
                    })), React.createElement("div", {
                        className: previewClass,
                        ref: this.$blockPreview
                    }, React.createElement("div", {
                        id: "for-preview",
                        ref: this.$scrollPreview,
                        className: "for-preview for-markdown-preview",
                        dangerouslySetInnerHTML: {
                            __html: marked_1.default(value)
                        }
                    }))));
                }, MdEditor.defaultProps = {
                    lineNum: !0,
                    onChange: function() {},
                    onSave: function() {},
                    addImg: function() {},
                    fontSize: "14px",
                    disabled: !1,
                    preview: !1,
                    expand: !1,
                    subfield: !1,
                    style: {},
                    toolbar: lib_1.CONFIG.toolbar,
                    language: "zh-CN",
                    outline: !0
                }, MdEditor;
            }(React.Component);
            exports.default = MdEditor;
        },
        "./src/lib/css/index.scss": function(module, exports, __webpack_require__) {
            var content = __webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./node_modules/sass-loader/dist/cjs.js?!./src/lib/css/index.scss");
            "string" == typeof content && (content = [ [ module.i, content, "" ] ]);
            var options = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
            content.locals && (module.exports = content.locals);
        },
        "./src/lib/fonts/fonts/KaTeX_Math-Italic.ttf": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/KaTeX_Math-Italic.291e76b8.ttf";
        },
        "./src/lib/fonts/fonts/KaTeX_Math-Italic.woff": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/KaTeX_Math-Italic.f0303906.woff";
        },
        "./src/lib/fonts/fonts/KaTeX_Math-Italic.woff2": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/KaTeX_Math-Italic.4ad08b82.woff2";
        },
        "./src/lib/fonts/iconfont.css": function(module, exports, __webpack_require__) {
            var content = __webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/lib/fonts/iconfont.css");
            "string" == typeof content && (content = [ [ module.i, content, "" ] ]);
            var options = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
            content.locals && (module.exports = content.locals);
        },
        "./src/lib/fonts/iconfont.eot?t=1586341106846": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/iconfont.43a6d82d.eot";
        },
        "./src/lib/fonts/iconfont.svg?t=1586341106846": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/iconfont.7836df72.svg";
        },
        "./src/lib/fonts/iconfont.ttf?t=1586341106846": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/iconfont.f0b9d0b4.ttf";
        },
        "./src/lib/fonts/iconfont.woff?t=1586341106846": function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__.p + "static/fonts/iconfont.768bfbbb.woff";
        },
        "./src/lib/fonts/katex.css": function(module, exports, __webpack_require__) {
            var content = __webpack_require__("./node_modules/css-loader/dist/cjs.js?!./node_modules/postcss-loader/src/index.js?!./src/lib/fonts/katex.css");
            "string" == typeof content && (content = [ [ module.i, content, "" ] ]);
            var options = {
                hmr: !0,
                transform: void 0,
                insertInto: void 0
            };
            __webpack_require__("./node_modules/style-loader/lib/addStyles.js")(content, options);
            content.locals && (module.exports = content.locals);
        },
        "./src/lib/helpers/function.ts": function(module, exports, __webpack_require__) {
            "use strict";
            exports.__esModule = !0, exports.insertText = function($vm, params) {
                var prefix = params.prefix, _a = params.str, str = void 0 === _a ? "" : _a, _b = params.subfix, subfix = void 0 === _b ? "" : _b, value = $vm.value;
                if ($vm.selectionStart || 0 === $vm.selectionStart) {
                    var start = $vm.selectionStart, end = $vm.selectionEnd, restoreTop = $vm.scrollTop;
                    start === end ? ($vm.value = value.substring(0, start) + prefix + str + subfix + value.substring(end, value.length), 
                    $vm.selectionStart = start + prefix.length, $vm.selectionEnd = end + prefix.length + str.length) : ($vm.value = value.substring(0, start) + prefix + value.substring(start, end) + subfix + value.substring(end, value.length), 
                    $vm.selectionStart = start + prefix.length, $vm.selectionEnd = end + prefix.length), 
                    $vm.focus(), restoreTop >= 0 && ($vm.scrollTop = restoreTop);
                }
                return $vm.value;
            };
        },
        "./src/lib/helpers/highlight.ts": function(module, exports, __webpack_require__) {
            "use strict";
            exports.__esModule = !0;
            var Hljs = __webpack_require__("./node_modules/highlight.js/lib/highlight.js");
            Hljs.registerLanguage("css", __webpack_require__("./node_modules/highlight.js/lib/languages/css.js")), 
            Hljs.registerLanguage("json", __webpack_require__("./node_modules/highlight.js/lib/languages/json.js")), 
            Hljs.registerLanguage("less", __webpack_require__("./node_modules/highlight.js/lib/languages/less.js")), 
            Hljs.registerLanguage("scss", __webpack_require__("./node_modules/highlight.js/lib/languages/scss.js")), 
            Hljs.registerLanguage("javascript", __webpack_require__("./node_modules/highlight.js/lib/languages/javascript.js")), 
            Hljs.registerLanguage("typescript", __webpack_require__("./node_modules/highlight.js/lib/languages/typescript.js")), 
            Hljs.registerLanguage("go", __webpack_require__("./node_modules/highlight.js/lib/languages/go.js")), 
            exports.default = Hljs;
        },
        "./src/lib/helpers/keydownListen.ts": function(module, exports, __webpack_require__) {
            "use strict";
            exports.__esModule = !0;
            var KEY_CODE_S = 83, KEY_CODE_Z = 90, KEY_CODE_Y = 89, KEY_CODE_TAB = 9;
            exports.default = function($vm, func) {
                $vm.addEventListener("keydown", function(e) {
                    if (e.ctrlKey || e.metaKey || e.altKey || e.shiftKey) {
                        if ((e.ctrlKey || e.metaKey) && !e.altKey && !e.shiftKey) switch (e.keyCode) {
                          case KEY_CODE_Z:
                            e.preventDefault(), func("undo");
                            break;

                          case KEY_CODE_Y:
                            e.preventDefault(), func("redo");
                            break;

                          case KEY_CODE_S:
                            e.preventDefault(), func("save");
                        }
                    } else switch (e.keyCode) {
                      case KEY_CODE_TAB:
                        e.preventDefault(), func("tab");
                    }
                });
            };
        },
        "./src/lib/helpers/marked.ts": function(module, exports, __webpack_require__) {
            "use strict";
            var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var marked_1 = __importDefault(__webpack_require__("./node_modules/marked/src/marked.js")), katex_1 = __importDefault(__webpack_require__("./node_modules/katex/dist/katex.js")), highlight_1 = __importDefault(__webpack_require__("./src/lib/helpers/highlight.ts"));
            marked_1.default.setOptions({
                renderer: new marked_1.default.Renderer(),
                gfm: !0,
                tables: !0,
                breaks: !1,
                pedantic: !1,
                sanitize: !1,
                smartLists: !0,
                smartypants: !1
            });
            var renderer = new marked_1.default.Renderer(), latexInlineParse = function(latex) {
                return katex_1.default.renderToString(latex, {
                    displayMode: !1,
                    leqno: !1,
                    fleqn: !1,
                    throwOnError: !1,
                    strict: "warn",
                    trust: !1,
                    output: "html"
                });
            };
            renderer.code = function(code, language) {
                if ("diff" === language) {
                    var backDiff_1 = "";
                    return code.split("\n").forEach(function(item) {
                        /(?<=\+ )/.test(item) ? backDiff_1 += '<p class="for-md-diff-add">' + item + "</p>" : /(?<=\- )/.test(item) ? backDiff_1 += '<p class="for-md-diff-del">' + item + "</p>" : /(?<=\! )/.test(item) ? backDiff_1 += '<p class="for-md-diff-focus">' + item + "</p>" : /(?<=\# )/.test(item) ? backDiff_1 += '<p class="for-md-diff-ignore">' + item + "</p>" : backDiff_1 += "<p>" + item + "</p>";
                    }), '<pre class="for-md-diff"><code>' + backDiff_1 + "</code></pre>";
                }
                return '<pre><span class="for-code-language">' + language + '</span><code class="language-' + language + '">' + highlight_1.default.highlightAuto(code).value + "</code></pre>";
            }, renderer.paragraph = function(text) {
                var texBlock = /(?<=\$\$)[\s\S]*?(?=\$\$)/, texInline = /(\$+)([^\$]|[^\$][\s\S]*?[^\$])\1(?!\$)/;
                if (texBlock.test(text)) return function(latex) {
                    return katex_1.default.renderToString(latex, {
                        displayMode: !0,
                        leqno: !1,
                        fleqn: !1,
                        throwOnError: !1,
                        strict: "ignore",
                        trust: !1,
                        output: "html"
                    });
                }(texBlock.exec(text)[0]);
                if (texInline.test(text)) {
                    for (;texInline.test(text); ) text = text.replace(texInline.exec(text)[0], latexInlineParse(texInline.exec(text)[2]));
                    return "<p>" + text + "</p>";
                }
                return "<p>" + text + "</p>";
            }, renderer.link = function(href, title, text) {
                return "<a href=" + href + "\n      title=" + (title || href) + "\n      target='_blank'\n      }>" + text + "</a>";
            }, renderer.heading = function(text, level) {
                return "<h" + level + '>\n    <span class="for-heading">' + text + '</span>\n    <a href="#' + text + '" name="' + text + '" class="for-anchor">\n      #\n    </a>\n  </h' + level + ">";
            }, exports.default = function(content) {
                return "string" != typeof content ? "" : marked_1.default(content, {
                    renderer: renderer
                });
            };
        },
        "./src/lib/helpers/outlined.ts": function(module, exports, __webpack_require__) {
            "use strict";
            var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var marked_1 = __importDefault(__webpack_require__("./node_modules/marked/src/marked.js")), tocDepth = {
                2: "- ",
                3: "  - ",
                4: "    - ",
                5: "      - ",
                6: "        - "
            };
            exports.generateTOC = function(content) {
                var tocs = "";
                return marked_1.default.lexer(content).forEach(function(item) {
                    "heading" === item.type && 1 !== item.depth && (tocs += tocDepth[item.depth] + "[" + item.text + "](#" + item.text + ")\n");
                }), tocs;
            };
            exports.outlined = function(content) {
                var heading = "";
                return marked_1.default.lexer(content).forEach(function(item) {
                    "heading" === item.type && (heading += '<li class="for-outline-h' + item.depth + '">' + (1 === item.depth ? "╃" : "┕") + ' <a href="#' + item.text + '" title=' + item.text + ">" + item.text + "</a></li>");
                }), '<ul class="for-outline-ul">' + heading + "</ul>";
            };
        },
        "./src/lib/index.ts": function(module, exports, __webpack_require__) {
            "use strict";
            var __importDefault = this && this.__importDefault || function(mod) {
                return mod && mod.__esModule ? mod : {
                    default: mod
                };
            };
            exports.__esModule = !0;
            var index_json_1 = __importDefault(__webpack_require__("./src/lib/lang/zh-CN/index.json")), index_json_2 = __importDefault(__webpack_require__("./src/lib/lang/en/index.json")), index_json_3 = __importDefault(__webpack_require__("./src/lib/lang/zh-TW/index.json")), index_json_4 = __importDefault(__webpack_require__("./src/lib/lang/jp/index.json"));
            exports.CONFIG = {
                language: {
                    "zh-CN": index_json_1.default,
                    "zh-TW": index_json_3.default,
                    en: index_json_2.default,
                    jp: index_json_4.default
                },
                langList: [ "zh-CN", "zh-TW", "en", "jp" ],
                toolbar: {
                    h1: !0,
                    h2: !0,
                    h3: !0,
                    h4: !0,
                    img: !0,
                    para: !0,
                    table: !0,
                    quote: !0,
                    link: !0,
                    list: !0,
                    inlinecode: !0,
                    code: !0,
                    collapse: !0,
                    katex: !0,
                    preview: !0,
                    expand: !0,
                    undo: !0,
                    redo: !0,
                    save: !0,
                    subfield: !0,
                    toc: !0
                }
            };
        },
        "./src/lib/lang/en/index.json": function(module) {
            module.exports = JSON.parse('{"placeholder":"Begin editing...","undo":"Undo","redo":"Redo","h1":"Header 1","h2":"Header 2","h3":"Header 3","h4":"Header 4","img":"Image Link","para":"Paragraphy","italic":"Italic","bold":"Bold","bolditalic":"Bold Italic","delline":"Delete Line","underline":"Underline","keytext":"Keyboard Text","superscript":"Superscript","subscript":"Subscript","table":"Table","quote":"Quote","link":"Link","list":"List","orderlist":"Order List","disorderlist":"Disorder List","checklist":"Check List","inlinecode":"Inline Code","code":"Code","collapse":"Collapse","katex":"KaTeX","save":"Save","preview":"Preview","singleColumn":"Single Column","doubleColumn":"Double Columns","fullscreenOn":"FullScreen ON","fullscreenOff":"FullScreen OFF","addImgLink":"Add Image Link","addImg":"Upload Image","toc":"Generate TOC"}');
        },
        "./src/lib/lang/jp/index.json": function(module) {
            module.exports = JSON.parse('{"placeholder":"入力を開始...","undo":"元に戻す","redo":"やり直す","h1":"第1レベル見出し","h2":"第2レベル見出し","h3":"第3レベル見出し","h4":"第4レベル見出し","para":"段落","italic":"イタリック","bold":"大胆な","bolditalic":"ボールドイタリック","delline":"取り消し線","underline":"下線","keytext":"キーテキスト","superscript":"上付き","subscript":"下付き","table":"テーブル","quote":"引用","img":"画像","link":"リンク","list":"リスト","orderlist":"ナンバリング","disorderlist":"箇条書き","checklist":"チェックリスト","inlinecode":"コード","code":"コードブロック","collapse":"折りたたみブロック","katex":"KaTeX","save":"保存する","preview":"下見","singleColumn":"単一の列","doubleColumn":"複列","fullscreenOn":"全画面","fullscreenOff":"全画面を終了","addImgLink":"画像リンク","addImg":"画像を追加","toc":"目次"}');
        },
        "./src/lib/lang/zh-CN/index.json": function(module) {
            module.exports = JSON.parse('{"placeholder":"开始编辑...","undo":"上一步","redo":"下一步","h1":"一级标题","h2":"二级标题","h3":"三级标题","h4":"四级标题","para":"段落","italic":"斜体","bold":"粗体","bolditalic":"斜粗体","delline":"删除线","underline":"下划线","keytext":"键盘文本","superscript":"上标","subscript":"下标","table":"表格","quote":"引用","img":"添加图片链接","link":"链接","list":"列表","orderlist":"有序列表","disorderlist":"无序列表","checklist":"勾选框列表","inlinecode":"行内代码","code":"代码块","collapse":"折叠块","katex":"KaTeX","save":"保存","preview":"预览","singleColumn":"单栏","doubleColumn":"双栏","fullscreenOn":"全屏编辑","fullscreenOff":"退出全屏","addImgLink":"添加图片链接","addImg":"上传图片","toc":"生成大纲"}');
        },
        "./src/lib/lang/zh-TW/index.json": function(module) {
            module.exports = JSON.parse('{"placeholder":"開始編輯...","undo":"上一步","redo":"下一步","h1":"一階標題","h2":"二階標題","h3":"三階標題","h4":"四階標題","para":"段落","italic":"斜體强調","bold":"粗體强調","bolditalic":"斜粗體强調","delline":"刪除綫","underline":"下劃綫","keytext":"鍵盤文本","superscript":"上標","subscript":"下標","table":"表格","quote":"區塊引言","img":"添加圖片連結","link":"連結","list":"清單","orderlist":"有序清單","disorderlist":"無序清單","checklist":"勾選清單","inlinecode":"程式碼","code":"程式碼區塊","collapse":"折叠块","katex":"KaTeX","save":"保存","preview":"預覽","singleColumn":"單欄","doubleColumn":"雙欄","fullscreenOn":"全屏編輯","fullscreenOff":"退出全屏","addImgLink":"圖片連結","addImg":"上傳圖片","toc":"生成大綱"}');
        },
        0: function(module, exports, __webpack_require__) {
            module.exports = __webpack_require__("./example/index.tsx");
        }
    });
});